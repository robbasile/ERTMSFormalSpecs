<NameSpace
 X="10"
 Y="310"
 Width="100"
 Height="50"
 Name="PositionReport"
 Guid="e7cf5843-ef46-4028-aa51-d0dc661e9005"
>
<Comment>Handling of position reports, with functions to determine whether a position report should be sent and the procedure for sending them.</Comment>
<NameSpaces>
</NameSpaces>
<Enumerations>
<Enum
 Default="EURORADIO.Messages.PositionReport.PositionReportSpecialMoment.DoNotSend"
 X="190"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PositionReportSpecialMoment"
 Guid="476931ac-c736-436a-8d31-ea5db2a0e915"
>
<ReqRef
 Id="5bc210dc-ac9e-4d2a-9508-b89f3d465a7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3f10dc5c-11cc-4201-9a25-fcd767995693"
>
</ReqRef><ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="896b214f-b7b7-4551-8506-d99d27e5803e"
>
</ReqRef><ReqRef
 Id="aa035c94-e9a5-4a0d-80ed-80d1a0e9db3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc54cffd-8d18-4ef3-aa0b-3490e16c3d7d"
>
</ReqRef><ReqRef
 Id="83966f12-95e0-4bd1-a94c-f51c035af1c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="593d4130-2967-47da-b2a0-de195360ab2d"
>
</ReqRef><Comment>The possible values of position report special locations.</Comment>
<Values>
<EnumValue
 Value="0"
 Name="DoNotSend"
 Guid="d2f064a4-349a-4448-bec2-0050eb993e54"
>
</EnumValue><EnumValue
 Value="1"
 Name="Now"
 Guid="fc6d298a-c88b-4d8d-a832-322076f6b464"
>
</EnumValue><EnumValue
 Value="2"
 Name="LRBG"
 Guid="b553051e-abc4-4950-938d-c4edcbc815a6"
>
</EnumValue></Values>
</Enum><Enum
 Default="InconsistentMessageTypeEnum.None"
 X="540"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InconsistentMessageTypeEnum"
 Guid="814c5ec8-d80d-4c51-9c3c-051a7a49414b"
>
<ReqRef
 Id="9f9eccce-90aa-4339-8dff-74915b041b83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d140bc56-3e11-4415-80f0-72bbe0938422"
>
</ReqRef><Comment>The enumeration of the different types of inconsistent messages that can be reported to the RBC.</Comment>
<Values>
<EnumValue
 Value=""
 Name="None"
 Guid="62cd69a0-5767-4312-8b4b-99c264fac667"
>
</EnumValue><EnumValue
 Value=""
 Name="LinkedBalise"
 Guid="7fa985d5-8862-423b-93c4-5293b157eb7c"
>
</EnumValue><EnumValue
 Value=""
 Name="UnlinkedBalise"
 Guid="69f46a63-4c08-4926-a5c9-037897dde376"
>
</EnumValue><EnumValue
 Value=""
 Name="RBC"
 Guid="410850dc-ce50-42dd-bc10-8de28a0f0257"
>
</EnumValue></Values>
</Enum></Enumerations>
<Structures>
<Structure
 Default=""
 X="540"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PositionReportEventsTrackerStruct"
 Guid="e4d7d885-b4b0-4a2f-84fe-fd83278d8dac"
>
<Comment>Keeps the information that can provode the sending of a new position report.</Comment>
<StructureElement
 TypeName="Messages.Q_LENGTH"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainIntegrityStatus"
 Guid="702a47f2-b548-4920-90c2-c9af032dad2d"
>
<ReqRef
 Id="08ae9142-b051-4a16-ad2f-f7e7d927a51e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd3f42b9-d613-4ae9-b122-4c3e5679fdbb"
>
</ReqRef><ReqRef
 Id="5e354f4a-2bd0-458a-983a-75be865356d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="597cf4ba-39be-4e74-b946-c07ad32f1204"
>
</ReqRef><Comment>Contains the previous value of the train integrity status in order to know if that value has changed.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Speed"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Speed"
 Guid="cd628589-9d93-4fae-9f68-1214b8f86c72"
>
<ReqRef
 Id="0310893d-d293-4089-ad7f-c6e74d25d402"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="422ed2ff-d3b2-4b9d-b93a-f653b27905a1"
>
</ReqRef><Comment>Contains the previous value of the speed of the train in order to know if the train has reached standstill.</Comment>
</StructureElement><StructureElement
 TypeName="LevelEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Level"
 Guid="dfe14e8f-60f2-41d1-a4e2-bfe45f5b2d64"
>
<ReqRef
 Id="a73c2ac0-c4f3-4593-b90c-ba4ee8cc4957"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="88fb8d10-2186-4fd5-bc3a-eec65b47cdd8"
>
</ReqRef><Comment>Contains the previous value of the level in order to know if that value has changed.</Comment>
</StructureElement><StructureElement
 TypeName="ModeEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Mode"
 Guid="0fe0a95b-e6d2-4b3f-a065-860c0a2cea17"
>
<ReqRef
 Id="51d5337f-1430-4900-a7a0-9fc794f74fdb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3354f402-f79e-41af-9fff-c6f5a9ad88db"
>
</ReqRef><Comment>Contains the previous value of the mode in order to know if that value has changed.</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="HasActiveSession"
 Guid="0e42fee9-39f2-4da3-bf59-40f56503187f"
>
<ReqRef
 Id="7650e199-5792-467e-8851-48660d18ee90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2fc389c-163a-409a-ab50-88248ccf891e"
>
</ReqRef><Comment>Contains the previous value of session state in order to know if that value has changed.</Comment>
</StructureElement><StructureElement
 TypeName="BTM.LRBG.BaliseGroupStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="LRBG"
 Guid="a3944a45-876e-4d90-9eee-e87949fa2407"
>
<ReqRef
 Id="d2a0c77e-82a9-493a-b6c6-892dfdc8298f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b58eac9-9baa-4e9f-8a88-8c6bdfa96604"
>
</ReqRef><Comment>Contains the previous value of the LRBG in order to know if that value has changed.</Comment>
</StructureElement><StructureElement
 TypeName="InconsistentMessageTypeEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="InconsistentMessage"
 Guid="0c913521-b522-4c37-9944-2f1359a84f80"
>
<ReqRef
 Id="9f9eccce-90aa-4339-8dff-74915b041b83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c0e405d9-2f9a-4e05-b42c-55bdba33b1ec"
>
</ReqRef><Comment>Contains the type of message consistency error that must be reported to the RBC.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="10"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PositionReportParametersValues"
 Guid="0cfceaa4-617d-4da2-835a-9da4e0f84f51"
>
<ReqRef
 Id="ae550cab-c867-4e9d-af2c-8e62dbe27545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4e45c620-e6c8-449e-816c-52ad872af845"
>
</ReqRef><ReqRef
 Id="a216803e-5575-472e-bbd0-bfaa483382b7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0bbe34d7-d7ce-4d81-a106-19baf7bde62e"
>
</ReqRef><ReqRef
 Id="8e46d1f9-ece2-43e9-9a45-e2978111a3dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5345377f-dea6-446b-8e0f-f68d3a590b32"
>
</ReqRef><Comment>Parameters of position reporting given by RBC.</Comment>
<StructureElement
 TypeName="BaseTypes.Time"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TimeInterval"
 Guid="687f8957-1f6e-45f1-b69b-a9e607d1194c"
>
<ReqRef
 Id="2ad61dc3-1f8d-4e29-888b-5d0a9df1e5cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="511735ab-525d-47db-826e-f23458a0a87e"
>
</ReqRef><Comment>The periodic time interval when a position report has to be sent.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DistanceInterval"
 Guid="c7e38d7a-e78e-4c47-aac5-b6497179ff9b"
>
<ReqRef
 Id="9bce1dcb-f670-481c-9012-c9772b746a32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="947e0a12-8289-4d58-8073-ff08878f96f4"
>
</ReqRef><Comment>The periodic distance interval when a position report has to be sent.</Comment>
</StructureElement><StructureElement
 TypeName="PositionReportSpecialMoment"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SpecialMoment"
 Guid="c76f861d-b33d-48e7-8f7f-a6ebd3e6b90e"
>
<ReqRef
 Id="5bc210dc-ac9e-4d2a-9508-b89f3d465a7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89a71b21-5286-46a6-a4a0-43a59d3509b7"
>
</ReqRef><ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4f2489cb-1e12-4bc1-b4d1-cb1e5b5ef7b0"
>
</ReqRef><ReqRef
 Id="aa035c94-e9a5-4a0d-80ed-80d1a0e9db3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad05d477-180f-4a70-83e0-713dc9b6cbbd"
>
<Comment>This requirement is always satisfied because the value of the field PositionReportSpecialLocation can be either LRBG or Now and never the both together.</Comment>
</ReqRef><Comment>A special location when a position report has to be sent.</Comment>
</StructureElement><StructureElement
 TypeName="PositionReportSpecialLocations"
 Default=""
 Mode="Incoming"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SpecialLocations"
 Guid="fdd2c7b2-cab4-4f62-9a29-a8f986e6016f"
>
<ReqRef
 Id="12080437-12c5-47ab-9aec-ceced6bba68f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23a80406-b674-43a5-9e8a-129b78b93722"
>
</ReqRef><Comment>The locations where the position report has to be sent.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="10"
 Y="100"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="PositionReportParametersStruct"
 Guid="dafba94d-6433-44d4-9e3f-ba35ffadb8ea"
>
<Comment>Contains position report parameters given by the RBC.</Comment>
<StructureElement
 TypeName="DataStateEnum"
 Default=""
 Mode="Internal"
 NeedsRequirement="FALSE"
 Name="DataState"
 Guid="05e8cb01-1d61-4e80-bcaa-11d314b7ab34"
>
<Comment>The data state of report parameters.</Comment>
</StructureElement><StructureElement
 TypeName="PositionReportParametersValues"
 Default=""
 Mode="Incoming"
 NeedsRequirement="FALSE"
 Name="Values"
 Guid="e3fce09b-5758-403f-8751-cb7438db0924"
>
<Comment>The position report parameters.</Comment>
</StructureElement><Interfaces>
<StructureRef
 Name="DataStateInterface"
 Guid="3e27e1f6-774c-4820-855e-a208db333f17"
>
</StructureRef></Interfaces>
</Structure><Structure
 Default=""
 X="710"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LastPositionReportInformation"
 Guid="f69c4eae-36c3-4704-8ae3-4d74ffbed1b7"
>
<Comment>Keeps the information about the last report.</Comment>
<StructureElement
 TypeName="BaseTypes.Time"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Time"
 Guid="2c77c80c-ecb4-4967-aaba-3484ca357c06"
>
<ReqRef
 Id="2ad61dc3-1f8d-4e29-888b-5d0a9df1e5cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97943dfe-78b0-4c13-8031-1416b87c53ef"
>
</ReqRef><ReqRef
 Id="60acc0ca-e056-4297-ae12-7f37389323d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5252e3f0-2439-46a0-8345-93770c0310b1"
>
</ReqRef><Comment>The time of the last position report.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="3a74034d-e43e-4db0-85ed-16ef9093a145"
>
<ReqRef
 Id="9bce1dcb-f670-481c-9012-c9772b746a32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="53833c15-3196-4533-b745-9e2e693d6384"
>
</ReqRef><Comment>The position of the last position report.</Comment>
</StructureElement><StructureElement
 TypeName="BTM.LRBG.BaliseGroupStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LRBG"
 Guid="aca04f80-cae6-4046-8486-cdcd0165d683"
>
<ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d95f0aa-14a5-4a75-94a3-f22873d343a9"
>
</ReqRef><Comment>The LRBG according to which the last position report was sent.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="370"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PositionReportSpecialLocation"
 Guid="22647d7a-ba05-4975-8cb5-f8392fab6640"
>
<ReqRef
 Id="12080437-12c5-47ab-9aec-ceced6bba68f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4decd675-9b9a-4e99-9a7b-cf36f4681375"
>
</ReqRef><Comment>The specified location that, once passed by the train, should provoke the sending of a new position report.</Comment>
<StructureElement
 TypeName="BaseTypes.Distance"
 Default=""
 Mode="Incoming"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Distance"
 Guid="6cbe6c7e-36e3-4867-9a9e-44716f89b5a8"
>
<ReqRef
 Id="26b2f0b0-1aee-4778-99cf-b5d01eb56627"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="387b6c06-2c64-4504-a351-bef01392fb73"
>
</ReqRef><Comment>Distance that has to be passed in order to send a new position report.</Comment>
</StructureElement><StructureElement
 TypeName="TrainData.TrainEndEnum"
 Default=""
 Mode="Incoming"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TrainEnd"
 Guid="51582ceb-41cc-4f21-80a1-aa76cdf21000"
>
<ReqRef
 Id="e5ec5ab9-bbf7-43ce-aee2-703517236f43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f51a051-7939-4734-8130-1af784799527"
>
</ReqRef><Comment>Indicates if the distance has to be passed with the max safe front end or the min safe rear end of the train.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="PositionReportSpecialLocation"
 MaxSize="32"
 Default="[]"
 X="370"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PositionReportSpecialLocations"
 Guid="65a363a1-fc0b-412a-8b6f-2d68bc7fe4d4"
>
<ReqRef
 Id="12080437-12c5-47ab-9aec-ceced6bba68f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f0b3f25-c0de-4842-b980-b8655e5ce454"
>
</ReqRef><Comment>List of locations where a position report has to be sent.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="Boolean"
 Default=""
 X="270"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToCommunicationSessionIsEstablished"
 Guid="06396c3e-d71c-45c8-8a5f-01b87812bd95"
>
<ReqRef
 Id="7650e199-5792-467e-8851-48660d18ee90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5357decc-14e6-459a-86b1-8c8348764169"
>
</ReqRef><ReqRef
 Id="554b5b3f-67a0-4f6a-9954-b114beb1eae2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1861e5da-edc6-469b-85ce-af2f01c9161b"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to communication session establishment.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="38910f57-eaaa-45c2-8562-0f00ec822b4b"
>
<Expression>Kernel.ActiveFunctions.ReportPosition_RBCEstablished()
  AND
PositionReport.PositionReportEventsTracker.HasActiveSession != Terminal.HasActiveSession()
  AND
Terminal.HasActiveSession()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="600"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToLevelChange"
 Guid="288fe7d5-072a-4cb4-b491-d43752f16310"
>
<ReqRef
 Id="a73c2ac0-c4f3-4593-b90c-ba4ee8cc4957"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4b9d39f9-3b1e-4fe4-827a-e87370db6bba"
>
</ReqRef><ReqRef
 Id="ce67736d-7901-44b8-b3f4-6ef65e06d4d1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5d104463-7dca-41ae-bb5d-fecae06ce762"
>
</ReqRef><ReqRef
 Id="d6900e28-e6fc-445f-92d8-c3802e42e6d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4366828-4c7b-40a3-b9dd-73274500e703"
>
</ReqRef><ReqRef
 Id="3873b246-0ac3-43bf-a16c-1a3e9a10c976"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="17d9126f-817e-4715-8c87-5ac3999a52cf"
>
</ReqRef><ReqRef
 Id="4f4a1783-3d82-4056-8a27-0f47ff27ce77"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="882db9a7-1226-42a3-834b-9c2b48738319"
>
</ReqRef><ReqRef
 Id="917e038b-c314-4423-b3a6-c0131f148410"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6ab5366e-4602-4140-b3e1-194af8adf7a8"
>
</ReqRef><ReqRef
 Id="74a30d76-76b6-4796-9af7-51fcc86fdda3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f64c3ddb-2330-42f3-8cf3-3319123e847e"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to the level change.</Comment>
<Cases>
<Case
 Name="Report position due to level change"
 Guid="2267941e-218a-4012-9fe6-34f016f07663"
>
<PreConditions>
<PreCondition
 Guid="7f5f6652-3383-4585-b360-c47c2a6b57f5"
>Kernel.ActiveFunctions.ReportPosition_LevelChangeTrackside()
  OR  
Kernel.ActiveFunctions.ReportPostion_LevelChangeDriver()</PreCondition></PreConditions>
<Expression>PositionReport.PositionReportEventsTracker.Level != Kernel.Level.Value.Value</Expression>
</Case><Case
 Name="Otherwise"
 Guid="daa2ea14-3ee5-4755-9a57-6e76d4e73460"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="710"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToLossOfTrainIntegrityDetected"
 Guid="845d881a-6178-4569-b16f-1e6a2f9ba2df"
>
<ReqRef
 Id="5e354f4a-2bd0-458a-983a-75be865356d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="51b45c95-767f-4a31-b29a-59105f7378a7"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to loss of train integrity.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="971ecd82-8414-41b3-b1b4-7dd8e9b80181"
>
<Expression>Kernel.ActiveFunctions.ReportPosition_LossOfTrainIntegrity()
  AND
PositionReport.PositionReportEventsTracker.TrainIntegrityStatus != Kernel.TrainIntegrity.TrainIntegrity.Status
  AND
Kernel.TrainIntegrity.TrainIntegrity.Status == Messages.Q_LENGTH.Train_integrity_lost</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="380"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SendReportDueToModeChange"
 Guid="1023a58f-3dfb-42af-92ce-408194247e71"
>
<ReqRef
 Id="51d5337f-1430-4900-a7a0-9fc794f74fdb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="77b85189-1394-485f-b51b-729b18896fb8"
>
</ReqRef><ReqRef
 Id="1e84c5a2-c916-45da-94c9-cdf6585f39c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4a45e4c6-7ec1-43e4-921e-b9e3125d4558"
>
</ReqRef><ReqRef
 Id="0dc5d937-27a9-4c96-a97d-dfdbe75c85d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c0f2c45c-122e-45d9-8856-41b90ee5bb1d"
>
</ReqRef><ReqRef
 Id="cd15246a-5c87-478b-bc9e-36ed9f2f9127"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae6e296d-103d-44de-8009-4cbbd5d73d8e"
>
</ReqRef><ReqRef
 Id="edf4ce85-46d4-4827-9f52-c859b33c7c8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="958fd520-a5ed-42ef-8199-89ec5baa8467"
>
</ReqRef><ReqRef
 Id="b20455fc-19b8-4a09-a69c-73c585d7f5c8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2cb1abdb-d9ae-4d94-8ac9-5e383fb65f55"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to the mode change.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="5dceb123-fe06-4e6a-8ded-c6c2984cebe4"
>
<Expression>Kernel.ActiveFunctions.ReportPositionWhenModeChanges()
  AND
PositionReport.PositionReportEventsTracker.Mode != Kernel.Mode</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="380"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToPositionReportTimeReached"
 Guid="f61e474a-4323-4285-ad21-a9b6103b3a12"
>
<ReqRef
 Id="2ad61dc3-1f8d-4e29-888b-5d0a9df1e5cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b40b0f5-773a-4ef1-bdcf-49f0eda24ff2"
>
</ReqRef><ReqRef
 Id="030c1ff8-a021-4325-967f-3c4c7f6f18e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4505a04-3e6b-4631-9df4-531cb3392a59"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to time to send a position report reached.</Comment>
<Cases>
<Case
 Name="Report reason valid"
 Guid="aaa72c64-bb2e-466c-93eb-5bf924372ffc"
>
<PreConditions>
<PreCondition
 Guid="9d029d2f-9487-47e8-95f0-a91ab6441c3e"
>Kernel.ActiveFunctions.ReportPosition_RBCRequest()</PreCondition></PreConditions>
<Expression>Kernel.DateAndTime.CurrentTime &gt;= PositionReport.LastPositionReport.Time + PositionReportParameters.Values.TimeInterval AND PositionReportParameters.DataState == DataStateEnum.Valid AND PositionReportParameters.Values.TimeInterval != 0.0</Expression>
</Case><Case
 Name="Otherwise"
 Guid="96a9f43e-de36-45eb-890e-808641155109"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="600"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToPositionReportDistanceReached"
 Guid="998de66e-d6a4-47c6-8eeb-235cf27d723d"
>
<ReqRef
 Id="9bce1dcb-f670-481c-9012-c9772b746a32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d2543aac-c3e4-43c4-a662-302e248412bd"
>
</ReqRef><ReqRef
 Id="030c1ff8-a021-4325-967f-3c4c7f6f18e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8569b3d3-77fa-42e8-9ff6-81a1a138dd9c"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to position report distance reached.</Comment>
<Cases>
<Case
 Name="Report reason valid"
 Guid="3bcde522-0efd-4e95-9c56-00ee9dbe3059"
>
<PreConditions>
<PreCondition
 Guid="ded1f57a-2222-476e-9e6a-7f7b23864b98"
>Kernel.ActiveFunctions.ReportPosition_RBCRequest()</PreCondition></PreConditions>
<Expression>(
  Odometry.NominalDistance &gt;= (PositionReport.LastPositionReport.Position + PositionReportParameters.Values.DistanceInterval)
)
  AND  
(PositionReportParameters.DataState == DataStateEnum.Valid)
  AND  
(PositionReportParameters.Values.DistanceInterval != BaseTypes.Distance.Unknown)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e6f3fb27-51a4-4dd5-b8db-26b3ba5c437a"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="600"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToSpecialMomentNow"
 Guid="84d7f642-0a9a-46ca-b0e3-977a5fe3ec73"
>
<ReqRef
 Id="5bc210dc-ac9e-4d2a-9508-b89f3d465a7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="510261da-dfb8-4672-9c08-b3af809ece5f"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to special location Now.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="d39cbac2-cb23-4eef-a013-bccca1716554"
>
<Expression>PositionReportParameters.Values.SpecialMoment == PositionReport.PositionReportSpecialMoment.Now</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="490"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToStandstillReached"
 Guid="cbe675fd-6bde-4d48-81b3-9e4935d4d8ec"
>
<ReqRef
 Id="0310893d-d293-4089-ad7f-c6e74d25d402"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2690fd19-425e-42e0-a919-981196c4b422"
>
</ReqRef><ReqRef
 Id="118fd0d0-1180-401c-8a1d-5582607a2c96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="501e56d3-6195-40c6-88c4-5c94dec7c800"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to standstill reached.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="9067bdff-9b40-4532-9e37-c911b007f3db"
>
<Expression>Kernel.ActiveFunctions.ReportPositionAtStandstill()
  AND
PositionReport.PositionReportEventsTracker.Speed != Odometry.TrainSpeed()
  AND
Odometry.TrainIsAtStandstill()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="490"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToTrainIntegrityConfirmedByDriver"
 Guid="5bb62493-e9e4-48e5-8ecf-49cb55b2ad85"
>
<ReqRef
 Id="08ae9142-b051-4a16-ad2f-f7e7d927a51e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bdf155da-5c71-4289-aebc-c341580be424"
>
</ReqRef><ReqRef
 Id="6e703d5c-ef9b-46dc-a38a-635f876f61a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b0caf46f-6cf2-4c22-ad27-ac98ca7c785d"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to train integrity confirmed by driver.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="b4a5f2d7-356a-4eb5-b5c5-e979531e600f"
>
<Expression>Kernel.ActiveFunctions.ReportPosition_DriverConfirmedIntegrity()
  AND
PositionReport.PositionReportEventsTracker.TrainIntegrityStatus != Kernel.TrainIntegrity.TrainIntegrity.Status
  AND 
Kernel.TrainIntegrity.TrainIntegrity.Status in [
  Messages.Q_LENGTH.Train_integrity_confirmed_by_driver,
  Messages.Q_LENGTH.Train_integrity_confirmed_by_integrity_monitoring_device
]</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="710"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToPositionReportSpecialMoment"
 Guid="466e4d39-37fb-47a7-bb94-61b8beb9c698"
>
<ReqRef
 Id="5bc210dc-ac9e-4d2a-9508-b89f3d465a7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2e8436c-0fa7-4d7d-b358-3bd1757876a9"
>
</ReqRef><ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3e0b5f6-c7df-47bb-8ab6-f48f8104a2ae"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to position report special location reached.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="8e7cde14-f71d-4b3b-afd0-3d60e81ba553"
>
<Expression>PositionReport.SendReportDueToSpecialMomentNow() OR PositionReport.SendReportDueToSpecialMomentLRBGCompliantBG()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="380"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToLRBGCompliantBGPassed"
 Guid="6deafe8f-5156-4e8d-b53b-48a9f7361756"
>
<ReqRef
 Id="d2a0c77e-82a9-493a-b6c6-892dfdc8298f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3f5328b-dc54-4bf5-bd3b-1427750e89ce"
>
</ReqRef><ReqRef
 Id="13c6767e-3561-4e5b-a17f-1d622cd06dfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8411b7d-7d17-4adb-b48c-374fda3efaa9"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to the passage of an LRBG compliant BG.</Comment>
<Cases>
<Case
 Name="Position report valid"
 Guid="48204b28-2e0f-4a18-b93d-684c07d63427"
>
<PreConditions>
<PreCondition
 Guid="b153b35e-09e0-4864-b33e-ec4dd02d2cc0"
>Kernel.ActiveFunctions.ReportPosition_BGPassage()</PreCondition></PreConditions>
<Expression>PositionReport.PositionReportEventsTracker.LRBG != BTM.LRBG.LRBG()
  AND
PositionReportParameters.DataState != DataStateEnum.Valid</Expression>
</Case><Case
 Name="Otherwise"
 Guid="0f9d38fb-f497-4c5c-8bed-35b92e101ebb"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="270"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToLevelTransitionBorderPassedWithMinSafeRearEnd"
 Guid="653f40d4-26f6-4bd3-a8f7-37dc03dcb5ef"
>
<ReqRef
 Id="de95016e-13da-4a9a-8a87-17139648fd40"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73e27a1b-0ae1-443d-9777-8fde6f13b382"
>
</ReqRef><ReqRef
 Id="a7605778-28fc-48d9-b6cd-2429b3e840e2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="53de8ef1-b456-49cf-badf-cdd25434e4aa"
>
</ReqRef><ReqRef
 Id="fef79c41-a6e7-4139-94de-a5a9b000932d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4b4e7976-049a-491e-988c-2906f84ed7dd"
>
</ReqRef><ReqRef
 Id="6ba8948f-12e6-4276-a69a-8e9e1ee29135"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="afa6812d-fabe-4d6a-b2ae-621fdba8847e"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to the passage of level transition border with the min safe rear end.</Comment>
<Cases>
<Case
 Name="Report train position due to rear passing a level 2/3 level transition border"
 Guid="3cdf6774-c76a-42dd-9aa8-76d918c9c115"
>
<PreConditions>
<PreCondition
 Guid="0ee00b1f-6137-4d5b-a3e0-5405d0cc6e9d"
>Kernel.ActiveFunctions.ReportPosition_PassLevelTransition()</PreCondition></PreConditions>
<Expression>Available(Kernel.LevelTransition.LevelTransitionOrder)
  AND  
Kernel.LevelTransition.LevelTransitionOrder.CurrentLevel.Value in [Default.LevelEnum.L2, Default.LevelEnum.L3]
  AND  
NOT Kernel.LevelTransition.LevelTransitionOrder.PositionReportSent
  AND  
Kernel.LevelTransition.LevelTransitionOrder.Location &lt; Kernel.TrainPosition.RearEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Min )
  AND  
Kernel.LevelTransition.LevelTransitionToProcess.TRLevel.Value in [Default.LevelEnum.L0, Default.LevelEnum.L1, Default.LevelEnum.LNTC]</Expression>
</Case><Case
 Name="Otherwise"
 Guid="98ba03b3-cf73-4ff8-b6d5-089b900a0c07"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="710"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToSpecialMomentLRBGCompliantBG"
 Guid="d82afd23-bb03-4a72-8cbf-8733bb209752"
>
<ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c9c00f8-b393-48a5-9501-fcde47bfb4a2"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to special location LRBG compliant BG.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="e924629c-bec5-4c78-b137-ec70b26429ef"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="380"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportNow"
 Guid="a376ac89-d8fe-494b-b2ca-d990c5455aae"
>
<ReqRef
 Id="0310893d-d293-4089-ad7f-c6e74d25d402"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5217c75b-666f-4619-ac7b-d7ef281e411a"
>
</ReqRef><ReqRef
 Id="51d5337f-1430-4900-a7a0-9fc794f74fdb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7794f35c-827e-46b6-8c4b-e945a142d092"
>
</ReqRef><ReqRef
 Id="08ae9142-b051-4a16-ad2f-f7e7d927a51e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d7300c5-2568-400b-b18a-7b12a45f3183"
>
</ReqRef><ReqRef
 Id="5e354f4a-2bd0-458a-983a-75be865356d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5a39de8-afe2-4484-9733-185d02d2f180"
>
</ReqRef><ReqRef
 Id="de95016e-13da-4a9a-8a87-17139648fd40"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0d126b6f-3d3c-40c7-aa11-208de64306ad"
>
</ReqRef><ReqRef
 Id="a73c2ac0-c4f3-4593-b90c-ba4ee8cc4957"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d486638-157f-44a4-b983-ad6d5cc2fc16"
>
</ReqRef><ReqRef
 Id="7650e199-5792-467e-8851-48660d18ee90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d8eb0bb9-ffb7-403e-ad1a-20310c5ffdc5"
>
</ReqRef><ReqRef
 Id="a64f54ad-1ecf-473d-a008-4d5b80cd7d5e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9eb446d4-d500-47b7-8b3b-745f4688ee07"
>
</ReqRef><ReqRef
 Id="d2a0c77e-82a9-493a-b6c6-892dfdc8298f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4cac353c-9c28-4dba-959c-20a0be447ed1"
>
</ReqRef><ReqRef
 Id="2ad61dc3-1f8d-4e29-888b-5d0a9df1e5cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddb8dcbd-b64d-46cf-a617-d57c2f0bea0c"
>
</ReqRef><ReqRef
 Id="9bce1dcb-f670-481c-9012-c9772b746a32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3cb63510-352e-49bb-b2a5-3628e378f676"
>
</ReqRef><ReqRef
 Id="12080437-12c5-47ab-9aec-ceced6bba68f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="75ca4eb3-1e82-4272-b2a4-53e2b3816bcd"
>
</ReqRef><ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c89bd120-998e-4b45-97f4-d981f8eec3b0"
>
</ReqRef><ReqRef
 Id="5bc210dc-ac9e-4d2a-9508-b89f3d465a7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d63c175-98ea-4215-9232-99afdca647ca"
>
</ReqRef><ReqRef
 Id="1e84c5a2-c916-45da-94c9-cdf6585f39c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d2c10bdf-3688-4040-a5a5-c61b3adf0050"
>
</ReqRef><ReqRef
 Id="0dc5d937-27a9-4c96-a97d-dfdbe75c85d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8a83a7e-8051-480e-a067-897d9f0ffa0c"
>
</ReqRef><ReqRef
 Id="cd15246a-5c87-478b-bc9e-36ed9f2f9127"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cdc04f74-a89e-4d70-a52a-f3320b4338e4"
>
</ReqRef><ReqRef
 Id="edf4ce85-46d4-4827-9f52-c859b33c7c8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="afbbc51d-7cd4-4194-9c7a-556ead8acb58"
>
</ReqRef><ReqRef
 Id="917e038b-c314-4423-b3a6-c0131f148410"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c309bd73-4bee-48c6-9175-4a0de1b5709c"
>
</ReqRef><ReqRef
 Id="ce67736d-7901-44b8-b3f4-6ef65e06d4d1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0eb4081a-c62a-4adb-8838-553583e3ef9c"
>
</ReqRef><Comment>Determines if the train has to send a position report to the RBC now.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="95b790d2-b1f1-40e6-808f-05b60c4e9d13"
>
<Expression>PositionReport.SendReportDueToStandstillReached() OR 
    PositionReport.SendReportDueToModeChange() OR 
    PositionReport.SendReportDueToTrainIntegrityConfirmedByDriver() OR 
    PositionReport.SendReportDueToLossOfTrainIntegrityDetected() OR 
    SendReportDueToLevelTransitionBorderPassedWithMinSafeRearEnd() OR 
    PositionReport.SendReportDueToLevelChange() OR 
    PositionReport.SendReportDueToCommunicationSessionIsEstablished() OR 
    PositionReport.SendReportDueToLRBGCompliantBGPassed() OR 
    PositionReport.SendReportDueToPositionReportDistanceReached() OR 
    PositionReport.SendReportDueToPositionReportSpecialMoment() OR
    PositionReport.SendReportDueToPositionReportSpecialLocationReached() OR
    PositionReport.SendReportDueToPositionReportTimeReached()  OR 
    PositionReport.SendReportDueToNotConsistentMessageReceived()</Expression>
</Case></Cases>
</Function><Function
 Type="PositionReportSpecialMoment"
 Default=""
 X="380"
 Y="540"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ERTMSSpecialMomentConverter"
 Guid="2520f1c3-f3e2-4a0b-a0a7-5a80ee8960a5"
>
<Comment>Used to convert M_LOC values to PositionReport.SpecialLocation values.</Comment>
<Parameters>
<Parameter
 Type="Messages.M_LOC"
 Name="M_LOC"
 Guid="7effdbbf-bc72-4732-a21c-59dfdfa2c32e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Now"
 Guid="42d2d109-f4d7-45d6-a996-1a7fc0cb66b6"
>
<PreConditions>
<PreCondition
 Guid="35c794c0-5225-4e97-b992-64e1cc0f9013"
>M_LOC == 0</PreCondition></PreConditions>
<Expression>PositionReport.PositionReportSpecialMoment.Now</Expression>
</Case><Case
 Name="LRBG"
 Guid="94794676-4b38-47b1-bdc8-7d102b9b4ab7"
>
<PreConditions>
<PreCondition
 Guid="7a286dfe-aba0-4dbf-84ec-4a50e6e6f4ae"
>M_LOC == 1</PreCondition></PreConditions>
<Expression>PositionReport.PositionReportSpecialMoment.LRBG</Expression>
</Case><Case
 Name="DoNotSend"
 Guid="5f8d4ff4-9ae7-4625-b2fa-8bf772e3d0e7"
>
<PreConditions>
<PreCondition
 Guid="95161b86-ce17-4022-8323-28087be8111d"
>M_LOC == 2</PreCondition></PreConditions>
<Expression>PositionReport.PositionReportSpecialMoment.DoNotSend</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORTS.Message"
 Default=""
 X="490"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CreatePositionReport"
 Guid="2c0dadbb-d07b-4fb5-8371-d890520965f8"
>
<ReqRef
 Id="366a126c-fe75-41b9-bb69-ee7464cf1272"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bbcf8c6-5b17-4db9-9e87-4a8597785cda"
>
</ReqRef><ReqRef
 Id="9f9eccce-90aa-4339-8dff-74915b041b83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b1e889d-6a01-4da4-a5c4-d38960146ab1"
>
</ReqRef><ReqRef
 Id="1b5d3174-e90a-42a4-8da3-c7ade895d5d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dbce64e2-3e18-409c-a6ce-5a3696b7426f"
>
</ReqRef><ReqRef
 Id="e6ece399-f216-4956-a5c8-811ae465ba7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8747d00b-8ae7-4def-8217-58a8aa1987c4"
>
</ReqRef><ReqRef
 Id="b45f95ad-fa45-4f28-96a0-8f422846828a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a49ae3d0-4594-4440-bd17-f809d414d841"
>
</ReqRef><ReqRef
 Id="1afce2ff-9ca8-4dc6-9a3b-d3533cf3e05b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c400551-d38d-41b6-8c9b-67a942f33c42"
>
</ReqRef><ReqRef
 Id="4ce2cdd0-a29e-403c-b920-0e635d2d271e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3284acfe-ba21-4b03-8e90-7c553f8d14b8"
>
</ReqRef><ReqRef
 Id="3b95001a-a63a-4085-8dd4-23f27d438dcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f5abd065-5e06-4a44-bdbb-2426df393c9e"
>
</ReqRef><ReqRef
 Id="b3370684-8140-442d-bc2e-8439f14d6ff8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67383e8b-04bf-4e6c-8d75-44310428d41a"
>
</ReqRef><ReqRef
 Id="20ceaa9c-c6e7-4c20-b6da-2bf54892b3af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1081438-fd75-4a84-bb17-d0e3da3a3bf6"
>
</ReqRef><ReqRef
 Id="a6a124ce-7f2a-48de-8aa9-787f46d22b8c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c98f7d91-a031-4e23-ae0d-9889fb755557"
>
</ReqRef><ReqRef
 Id="1ee16e25-19bc-4c58-b451-ebd13c054d1c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dca7f580-745b-42e9-bfc7-2673c8fe4fd8"
>
</ReqRef><ReqRef
 Id="2bd96cac-883a-481d-acfa-5d6e3be72eab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dcda79b6-6f9b-4360-aa10-3b52807bbce8"
>
</ReqRef><ReqRef
 Id="069ffce0-9fba-4a50-9c68-19cc5e8f9b42"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="27940503-b285-4f22-8066-00cd13c00f4a"
>
</ReqRef><ReqRef
 Id="8e0bc347-372f-4737-817c-7ddff5b4d84f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4445ed5b-035a-40db-8010-575fed1aaaa0"
>
</ReqRef><ReqRef
 Id="18834f9f-2f32-40fe-9d9a-97c8e2991f93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ef06704-993f-4fdb-8e22-27fd31d0d020"
>
</ReqRef><ReqRef
 Id="e69a91d2-e0c4-4628-9343-c53594060aea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e8e3eeb9-66b3-4ebb-afd2-6cbb2d9efd10"
>
</ReqRef><ReqRef
 Id="3341d827-cad3-4381-a9e8-5bd7da75b27b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="450ba387-e7b7-40ad-b6a0-889b6543ba47"
>
</ReqRef><Comment>Creates a position report packet.</Comment>
<Cases>
<Case
 Name="Position unknown or invalid"
 Guid="9b80f88d-c73f-43f0-a406-55e94e38c74d"
>
<PreConditions>
<PreCondition
 Guid="6b6ade76-193c-48ef-8277-5653e0b692b6"
>Kernel.TrainPosition.Position.DataState in [DataStateEnum.Invalid, DataStateEnum.Unknown]</PreCondition></PreConditions>
<Expression>Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORTS.Message
{
    POSITION_REPORT=&gt; Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORT.Message
    {
        Q_SCALE =&gt; Messages.Q_SCALE._1_m_scaleC,
        NID_LRBG =&gt; Messages.NID_LRBG.Unknown,
        D_LRBG =&gt; EURORADIO.Messages.PositionReport.FillDistance(),
        Q_DIRLRBG =&gt; Default.Q_DIRLRBG ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation ),
        Q_DLRBG =&gt; Default.Q_DLRBG ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainFrontEndPosition ),
        L_DOUBTOVER =&gt; MessageTypes.UnScaleLength ( Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTOVER), Messages.Q_SCALE._1_m_scaleC ),
        L_DOUBTUNDER =&gt; MessageTypes.UnScaleLength ( Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTUNDER), Messages.Q_SCALE._1_m_scaleC ),
        Q_LENGTH =&gt; Kernel.TrainIntegrity.TrainIntegrity.Status,
        L_TRAININT =&gt; MessageTypes.UnScaleLength ( Kernel.TrainIntegrity.SafeTrainLength(), Messages.Q_SCALE._1_m_scaleC),
        V_TRAIN =&gt; MessageTypes.UnResolveSpeed ( Odometry.TrainSpeed(), 5.0 ),
        Q_DIRTRAIN =&gt; Default.Q_DIRTRAIN ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainRunningDirection ),
        M_MODE =&gt; EFSModeConverter(Kernel.Mode),
        M_LEVEL =&gt; EFSLevelConverter(Kernel.Level.Value.Value)
    },
    POSITION_REPORT_BASED_ON_TWO_BALISE_GROUPS =&gt; EMPTY
}</Expression>
</Case><Case
 Name="One BG"
 Guid="85eff0a6-7e75-4fd3-9825-9e0a8fbf6192"
>
<PreConditions>
<PreCondition
 Guid="f21e89a9-9a6b-412d-97ad-c87d8656875f"
>BTM.LRBG.LRBG().Orientation != OrientationEnum.Unknown</PreCondition></PreConditions>
<Expression>Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORTS.Message
{
    POSITION_REPORT=&gt; Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORT.Message
    {
        Q_SCALE =&gt; Messages.Q_SCALE._1_m_scaleC,
        NID_LRBG =&gt; BTM.LRBG.LRBG().NID_BG,
        D_LRBG =&gt; EURORADIO.Messages.PositionReport.FillDistance(),
        Q_DIRLRBG =&gt; Default.Q_DIRLRBG ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation ),
        Q_DLRBG =&gt; Default.Q_DLRBG ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainFrontEndPosition ),
        L_DOUBTOVER =&gt; MessageTypes.UnScaleLength ( Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTOVER), Messages.Q_SCALE._1_m_scaleC ),
        L_DOUBTUNDER =&gt; MessageTypes.UnScaleLength ( Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTUNDER), Messages.Q_SCALE._1_m_scaleC ),
        Q_LENGTH =&gt; Kernel.TrainIntegrity.TrainIntegrity.Status,
        L_TRAININT =&gt; MessageTypes.UnScaleLength ( Kernel.TrainIntegrity.SafeTrainLength(), Messages.Q_SCALE._1_m_scaleC),
        V_TRAIN =&gt; MessageTypes.UnResolveSpeed ( Odometry.TrainSpeed(), 5.0 ),
        Q_DIRTRAIN =&gt; Default.Q_DIRTRAIN ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainRunningDirection ),
        M_MODE =&gt; EFSModeConverter(Kernel.Mode),
        M_LEVEL =&gt; EFSLevelConverter(Kernel.Level.Value.Value)
    },
    POSITION_REPORT_BASED_ON_TWO_BALISE_GROUPS =&gt; EMPTY
}</Expression>
</Case><Case
 Name="Two BGs"
 Guid="84e46cd8-5e10-4316-bd28-38f4540024f7"
>
<Expression>Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORTS.Message
{
    POSITION_REPORT_BASED_ON_TWO_BALISE_GROUPS=&gt;Messages.PACKET.TRAIN_TO_TRACK.POSITION_REPORT_BASED_ON_TWO_BALISE_GROUPS.Message
    {
        Q_SCALE =&gt; Messages.Q_SCALE._1_m_scaleC,
        NID_LRBG =&gt; BTM.LRBG.LRBG().NID_BG,
        NID_PRVLRBG =&gt; PreviousLRBG_NID(),
        D_LRBG =&gt; EURORADIO.Messages.PositionReport.FillDistance(),
        Q_DIRLRBG =&gt; Default.Q_DIRLRBG ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation ),
        Q_DLRBG =&gt; Default.Q_DLRBG ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainFrontEndPosition ),
        L_DOUBTOVER =&gt; MessageTypes.UnScaleLength ( length =&gt; Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval ( ConfidenceIntervalEnum.L_DOUBTOVER ), scale =&gt; Messages.Q_SCALE._1_m_scaleC ),
        L_DOUBTUNDER =&gt; MessageTypes.UnScaleLength ( Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval ( ConfidenceIntervalEnum.L_DOUBTUNDER ), scale =&gt; Messages.Q_SCALE._1_m_scaleC ),
        Q_LENGTH =&gt; Kernel.TrainIntegrity.TrainIntegrity.Status,
        L_TRAININT =&gt; MessageTypes.UnScaleLength ( Kernel.TrainIntegrity.SafeTrainLength(), Messages.Q_SCALE._1_m_scaleC),
        V_TRAIN =&gt; MessageTypes.UnResolveSpeed ( Odometry.TrainSpeed(), 5.0 ),
        Q_DIRTRAIN =&gt; Default.Q_DIRTRAIN ( Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainRunningDirection ),
        M_MODE =&gt; EFSModeConverter(Kernel.Mode),
        M_LEVEL =&gt; EFSLevelConverter(Kernel.Level.Value.Value)
    }
}</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.Q_STATUS"
 Default=""
 X="600"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FillQStatus"
 Guid="b0cba2fa-7765-443d-8e8c-58a283e252bf"
>
<ReqRef
 Id="aa43ddb6-13a5-4b3e-bbcc-bf985bea4175"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="57691381-cc06-49af-9731-9d113138e4f1"
>
</ReqRef><ReqRef
 Id="6375b0de-0293-4d16-abdf-cb5f39a35143"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7039c91-c473-43fc-8e54-7f90563e2d58"
>
</ReqRef><Comment>Provides the status of train position data to be sent in the position report packet.</Comment>
<Cases>
<Case
 Name="Valid"
 Guid="c8c46f4a-f314-473b-b5c5-96807953b04b"
>
<PreConditions>
<PreCondition
 Guid="6d57e308-168e-4650-ab9e-85fca0dc39b8"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Expression>Messages.Q_STATUS.Valid</Expression>
</Case><Case
 Name="Invalid"
 Guid="238d8964-adb4-4c31-9096-ec53ada49684"
>
<PreConditions>
<PreCondition
 Guid="d494d339-f451-4df2-9360-f9b682c99f11"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Invalid</PreCondition></PreConditions>
<Expression>Messages.Q_STATUS.Invalid</Expression>
</Case><Case
 Name="Unknown"
 Guid="17a9643e-ad95-4bf6-82f0-8a4c9dcf4f5d"
>
<PreConditions>
<PreCondition
 Guid="62c8fb34-1fe4-4b03-889f-f2f00ff6042b"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Expression>Messages.Q_STATUS.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="MessageTypes.Distance"
 Default=""
 X="710"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FillDistance"
 Guid="06a30396-059d-48ce-8307-81d1ef4237e7"
>
<ReqRef
 Id="457bd04c-8b77-4ecc-b5ec-c4dbce5c1e53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d4db1506-206b-4a5e-8e4c-92086bebeefa"
>
</ReqRef><ReqRef
 Id="b45f95ad-fa45-4f28-96a0-8f422846828a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2434b542-7392-4570-9e56-a1c4989c9dde"
>
</ReqRef><Comment>Provides the distance to be sent in the position report packet.</Comment>
<Cases>
<Case
 Name="Distance unknown"
 Guid="73cc0be4-5aa2-4f8a-a502-c66462dd8d01"
>
<PreConditions>
<PreCondition
 Guid="aaa7bc6b-badb-4e38-9d86-88f46f615afe"
>Kernel.TrainPosition.Position.DataState in [DataStateEnum.Unknown, DataStateEnum.Invalid]</PreCondition></PreConditions>
<Expression>MessageTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Distance known"
 Guid="11ec8272-ab63-4022-aa13-66802b914a9b"
>
<Expression>MessageTypes.UnScaleDistance ( Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom), Messages.Q_SCALE._1_m_scaleC )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="270"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToNotConsistentMessageReceived"
 Guid="de36ad35-d4cb-4f6f-a365-d7845868da6f"
>
<ReqRef
 Id="9f9eccce-90aa-4339-8dff-74915b041b83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="246d55b2-87fc-4d8c-aad2-2ec971429fa5"
>
</ReqRef><ReqRef
 Id="df574230-e054-4feb-b440-4055c7334854"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5b775ec-ba53-4d9c-9cf8-55e3a244904d"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to a not consistent message being received from the RBC.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="9e926855-f14e-49a7-8354-bc1e6d3c0db5"
>
<Expression>PositionReport.PositionReportEventsTracker.InconsistentMessage in [InconsistentMessageTypeEnum.LinkedBalise, InconsistentMessageTypeEnum.UnlinkedBalise, InconsistentMessageTypeEnum.RBC]</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Time"
 Default=""
 X="600"
 Y="540"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConvertT_CYCLOCToTime"
 Guid="24ebe065-3505-4c39-bafd-06e625910671"
>
<ReqRef
 Id="158a4560-10f9-449d-a58b-02c43291845a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3524258-e34b-4646-a2ee-1ae88219e7ea"
>
</ReqRef><ReqRef
 Id="52dafb9f-086a-448d-97b4-b73cb0bb4607"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b3f5bcd-cb86-4f99-9a4e-92cbe3c21237"
>
</ReqRef><Comment>Converts the value of T_CYCLOC received in a Position Report Parameters packet to Time.</Comment>
<Parameters>
<Parameter
 Type="MessageTypes.Time"
 Name="T_CYCLOC"
 Guid="11f91877-2ff5-4212-8a33-f3f692386d16"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Special value: infinity"
 Guid="e4e57f2a-a86a-47ec-80d9-4dcf131612f8"
>
<PreConditions>
<PreCondition
 Guid="9c24aa72-ef3d-4218-b54f-748b2146994c"
>T_CYCLOC == 255</PreCondition></PreConditions>
<Expression>BaseTypes.Time.Infinity</Expression>
</Case><Case
 Name="Otherwise"
 Guid="8b5bb541-ecbe-40f3-9c9e-08bde92e10ff"
>
<Expression>BaseTypes.Time (T_CYCLOC)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="710"
 Y="540"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConvertD_CYCLOCToDistance"
 Guid="130a3a09-4e46-4f4d-9050-89d41cfda88b"
>
<ReqRef
 Id="58b84566-cf66-4195-ae7a-4520abe69a4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a501652-7d2b-41d6-b10d-585ee01f984c"
>
</ReqRef><ReqRef
 Id="9b3441a8-e9f9-4454-9abf-615f89ed85bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ee45f2f-c324-41fb-a46b-e90a35176177"
>
</ReqRef><Comment>Converts the value of D_CYCLOC received in a Position Report Parameters packet to Distance.</Comment>
<Parameters>
<Parameter
 Type="MessageTypes.Distance"
 Name="D_CYCLOC"
 Guid="bc123820-b05a-4ae0-8e31-edeb28a25450"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Scale"
 Guid="6994d903-ed83-49fc-9832-7550cea70559"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Special value: unknown"
 Guid="ba558eaa-717f-4518-a555-5ed515902e6d"
>
<PreConditions>
<PreCondition
 Guid="30b67844-f058-40d5-8f99-d8b863692563"
>D_CYCLOC == 32767</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Otherwise"
 Guid="8a18c6b7-8bfd-4b88-89cb-eb8a10fb61c3"
>
<Expression>MessageTypes.QScaleDistance(
    distance =&gt; D_CYCLOC,
    scale =&gt; Scale
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="490"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendReportDueToPositionReportSpecialLocationReached"
 Guid="8354be9c-29b1-42d2-a15c-1450f88da1d6"
>
<ReqRef
 Id="12080437-12c5-47ab-9aec-ceced6bba68f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="821c2fa3-6d73-4b43-963c-26d406ebf4c3"
>
</ReqRef><Comment>Indicates if a position report has to be sent due to position report special location reached.</Comment>
<Cases>
<Case
 Name="No special locations"
 Guid="8e48380a-1c14-4d9a-86ca-8d73e0c1d1a3"
>
<PreConditions>
<PreCondition
 Guid="b70a0104-423b-461f-9a0d-73445322b661"
>NOT Available( PositionReportParameters.Values )
  OR  
PositionReportParameters.Values.SpecialLocations == []</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Otherwise"
 Guid="904d9d0b-0340-4bb4-ada9-ee993ccc743e"
>
<Expression>THERE_IS X IN PositionReportParameters.Values.SpecialLocations | PositionReport.SpecialLocationPassed(X)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="270"
 Y="540"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AbsoluteDistance"
 Guid="b395583e-08ca-4895-8709-836cf0c9903e"
>
<ReqRef
 Id="26b2f0b0-1aee-4778-99cf-b5d01eb56627"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd2ea972-bbf0-4c15-b4c4-7211c4605b12"
>
</ReqRef><Comment>Converts the incremental distances to the special locations for sending a position report, received in the POSITION_REPORT_PARAMETERS packet, to absolute distances.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.POSITION_REPORT_PARAMETERS.SubStructure1"
 Name="aSpecialLocation"
 Guid="afa7e80e-8b66-4d90-b578-96b358f2f392"
>
</Parameter><Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.POSITION_REPORT_PARAMETERS.Collection1"
 Name="SpecialLocations"
 Guid="d1f244c0-2820-4782-a2a1-3f872f0bccfa"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Scale"
 Guid="58a6d42f-6aaf-4304-9f1d-9125324f3412"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="77bbebe6-0ccd-479d-972c-ea13aff47eef"
>
<Expression>(
SUM SpecialLocations | Before(
    ExpectedFirst =&gt; X,
    ExpectedSecond =&gt; aSpecialLocation,
    Collection =&gt; SpecialLocations )
 USING X IN 
    MessageTypes.QScaleDistance(
        distance =&gt; X.D_LOC,
        scale =&gt; Scale
    )
)
+ MessageTypes.QScaleDistance(
        distance =&gt; aSpecialLocation.D_LOC,
        scale =&gt; Scale
    )</Expression>
</Case></Cases>
</Function><Function
 Type="EURORADIO.Messages.TrainData.TrainEndEnum"
 Default=""
 X="490"
 Y="540"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConvertTrainEnd"
 Guid="ad06b98b-bebb-428c-b0a9-f2a9c38213aa"
>
<ReqRef
 Id="e5ec5ab9-bbf7-43ce-aee2-703517236f43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8bbef523-6988-4b52-a621-5c2a49923d6d"
>
</ReqRef><ReqRef
 Id="0d6b6822-0e2f-4bd0-b806-8a68da523bed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb91cdc3-8115-45ee-a2ff-1e5336624fcd"
>
</ReqRef><Comment>Converts the train front end indication received in the message to an</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_LGTLOC"
 Name="Q_LGTLOC"
 Guid="5ae47b6c-73f3-4320-a58f-54cc96660988"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Max safe front end"
 Guid="b2ca925e-9fe3-4e6a-86a7-7d02c48f98b8"
>
<PreConditions>
<PreCondition
 Guid="21812200-e0ae-4331-b417-f9a87ed7fbdd"
>Q_LGTLOC == Messages.Q_LGTLOC.Max_safe_front_end</PreCondition></PreConditions>
<Expression>TrainData.TrainEndEnum.MaxSafeFrontEnd</Expression>
</Case><Case
 Name="Min safe rear end"
 Guid="60e4a24c-4660-48d5-a9f1-2b2f670244f9"
>
<PreConditions>
<PreCondition
 Guid="e53cc31e-a654-447c-b638-0e346a6d60fc"
>Q_LGTLOC == Messages.Q_LGTLOC.Min_safe_rear_end</PreCondition></PreConditions>
<Expression>TrainData.TrainEndEnum.MinSafeRearEnd</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="270"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SpecialLocationPassed"
 Guid="6c24dafd-4ee5-4daf-84aa-ed9818b4139b"
>
<ReqRef
 Id="12080437-12c5-47ab-9aec-ceced6bba68f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e937e64-321c-431d-b431-58dfee0f7888"
>
</ReqRef><Comment>Indicates whether the provided special location has been passed.</Comment>
<Parameters>
<Parameter
 Type="PositionReportSpecialLocation"
 Name="aSpecialLocation"
 Guid="ae4aa5d6-ff8a-4b95-a21a-e53f2ec98ac1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Max safe front end"
 Guid="7097611f-db64-4a5c-8a5f-ad162132a09b"
>
<PreConditions>
<PreCondition
 Guid="a89d95f1-3e1b-4683-9b05-3b0e16491e18"
>aSpecialLocation.TrainEnd == TrainData.TrainEndEnum.MaxSafeFrontEnd</PreCondition></PreConditions>
<Expression>Kernel.TrainPosition.FrontEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Max ) &gt; aSpecialLocation.Distance</Expression>
</Case><Case
 Name="Min safe rear end"
 Guid="f0269c08-72b5-4c3a-86b5-cc0a8f721ef8"
>
<PreConditions>
<PreCondition
 Guid="cf347ec3-a69a-4461-8659-f97db01b1f6c"
>aSpecialLocation.TrainEnd == TrainData.TrainEndEnum.MinSafeRearEnd</PreCondition></PreConditions>
<Expression>Kernel.TrainPosition.RearEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Min ) &gt; aSpecialLocation.Distance</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_PRVBG"
 Default=""
 X="820"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PreviousLRBG_NID"
 Guid="52d1e8b4-8677-4e95-a39a-b0c4b59cc21e"
>
<ReqRef
 Id="e69a91d2-e0c4-4628-9343-c53594060aea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="db1fbdbe-4c9c-4056-b81d-a465d9d4558a"
>
</ReqRef><ReqRef
 Id="e9839425-8e7c-4be2-89b1-0c9cc00edb73"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e61c7b13-0e30-4c58-b6b7-6d366610ebda"
>
</ReqRef><Comment>Returns the NID for the previous LRBG. If there is no previous LRBG, returns unknown.</Comment>
<Cases>
<Case
 Name="No previous LRBG"
 Guid="bd608e3d-74b0-4d9f-a5d6-6f7c590884e8"
>
<PreConditions>
<PreCondition
 Guid="8c683e2e-7554-42eb-96ee-0730759d11ab"
>NOT Available(BTM.LRBG.PreviousLRBG())</PreCondition></PreConditions>
<Expression>Messages.NID_PRVBG.unknown</Expression>
</Case><Case
 Name="previous LRBG available"
 Guid="2f6b3034-83b9-4977-9d48-4e7fa802a08b"
>
<Expression>Messages.NID_PRVBG(BTM.LRBG.PreviousLRBG().NID_BG)</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="10"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="UpdatePositionReportParameters"
 Guid="ab143d6e-de00-4e9d-a8c4-d91206bf6813"
>
<ReqRef
 Id="e832ef89-d8d7-4e89-86eb-ba4c29d6d5fe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5dcd3caf-a4bc-49ca-8144-1453dc04e357"
>
</ReqRef><Comment>Updates the position report parameters with newly received values.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.POSITION_REPORT_PARAMETERS.Message"
 Name="Packet"
 Guid="06599896-903e-405e-83bb-f4e083cfa85b"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="afdea4eb-8dd0-423f-8923-1818ea200c7b"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="UpdateOUT"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="UpdatePositionReportParameters"
 Guid="1c9f0244-63e5-4e91-ad5a-fbbff23becb8"
>
<ReqRef
 Id="8e46d1f9-ece2-43e9-9a45-e2978111a3dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3e93e00-1d08-4533-b43d-48bbe936161b"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="UpdatePositionReportParameters"
 Guid="f5b9ed0c-e0fd-4357-b628-f628b1584cdf"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="bb7d9795-fec8-42f3-a619-fb767260a89d"
>ValidateInformation(PositionReportParameters)</Action><Action
 Guid="f3e0c810-5538-4ebf-b190-2e4fa7161c79"
>PositionReportParameters.Values.TimeInterval &lt;- PositionReport.ConvertT_CYCLOCToTime ( Packet.T_CYCLOC )</Action><Action
 Guid="bbed578f-bec0-45d5-a457-6c3e192bcb6b"
>PositionReportParameters.Values.DistanceInterval &lt;- PositionReport.ConvertD_CYCLOCToDistance ( Packet.D_CYCLOC, Packet.Q_SCALE)</Action><Action
 Guid="89290f52-e348-42cd-abb6-f2b2841c62fb"
>PositionReportParameters.Values.SpecialMoment &lt;- PositionReport.ERTMSSpecialMomentConverter(Packet.M_LOC)</Action><Action
 Guid="3156f7b5-5a53-41f5-98c4-ad13723fc669"
>PositionReportParameters.Values.SpecialLocations
 &lt;- 
MAP Packet.Sequence1 USING X IN PositionReport.PositionReportSpecialLocation{
        Distance =&gt; aDistanceFromRef + AbsoluteDistance(
            aSpecialLocation =&gt; X,
            SpecialLocations =&gt; Packet.Sequence1,
            Scale =&gt; Packet.Q_SCALE),
        TrainEnd =&gt; ConvertTrainEnd(X.Q_LGTLOC)
    }</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="10"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendFirstRBCHandoverPositionReport"
 Guid="32c21d40-8ed4-4f0c-a8d6-15496fe4e247"
>
<ReqRef
 Id="6a61aac6-3496-4cb7-8a7b-8b6d6ee37d62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fc86b48e-8a79-4bfe-bddb-c7afc04556b1"
>
</ReqRef><ReqRef
 Id="2a5f115c-95a4-4e8f-b29e-965e2f49e9bb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="205f6c84-231e-4bad-9b37-8f78c8646d75"
>
</ReqRef><ReqRef
 Id="78114112-c363-4d6d-8e32-e31931e4a271"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1218db2b-1e32-4f8d-83e0-3ae4379fa7f1"
>
</ReqRef><ReqRef
 Id="bd6563bc-06fe-447b-8afc-e210141cc921"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc202c8d-245c-4f69-89ac-f284f2c163bb"
>
</ReqRef><ReqRef
 Id="93c1473b-e776-4fae-83f9-f2c0423ab494"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04c8156f-bc4c-4040-8561-e54d361513a9"
>
</ReqRef><ReqRef
 Id="09eeadf1-fd15-4f7c-8f52-fb0f04b31d9c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2a18ba7-a87b-4334-bec6-9f52600fe14e"
>
</ReqRef><Comment>Handles the sending of the position report that has to be sent when the max safe front end reaches the transition border location.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send position report to the Handing Over RBC"
 Guid="6486cfb7-05a5-4b21-8ff2-fe88b7333743"
>
<Comment>Handles the sending of the position report to the Handling Over RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send position report to the Handing Over RBC"
 Guid="60e15fef-2535-4020-9b03-d7e948afca7d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="89164f10-4804-45f9-b404-1ba1447d422b"
>Counter.IncrementCounter( aCounter =&gt;  RBCConnection.RBCHandover.HRBCPositionReportsCounter)</Action><Action
 Guid="7a5a51e3-0abe-4698-93ed-043abb09e4d1"
>RBCConnection.RBCHandover.HandingoverRBCConnection().SendPositionReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendSecondRBCHandoverPositionReport"
 Guid="751e4f25-3b32-4cf6-9894-4592bff5ea97"
>
<ReqRef
 Id="a10b0fd8-ce50-4ef2-ab36-c41dd3ac7321"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66a01c08-fe57-4835-9d7c-e09b947a751f"
>
</ReqRef><ReqRef
 Id="55c1b4ba-8b68-4271-a308-24765057ea74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c69c24db-8924-4f6a-b11b-a013e309d9b5"
>
</ReqRef><ReqRef
 Id="09eeadf1-fd15-4f7c-8f52-fb0f04b31d9c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b101bac1-0a8f-4530-b863-dde5c603734b"
>
</ReqRef><Comment>Sends the position report to the Handing Over RBC, by selecting the right RBC connection according to the configuration of the on-board (one or two terminals available).</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send second RBC/RBC handover position report"
 Guid="db87e2c2-b506-4231-bacf-987f57622535"
>
<Comment>Using the function HandingoverRBCConnection allows two eal with both cases 
were 1 or 2 terminals are available onbord.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Second position report"
 Guid="95a444e5-4527-473a-97cd-322a2a9fcd4e"
>
<PreConditions>
<PreCondition
 Guid="e082201c-84ad-4853-91fb-329f7fb6a7b1"
>Available(RBCConnection.RBCHandover.HandingoverRBCConnection())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="35b07ffe-860e-42d4-98bd-0a84888dd618"
>RBCConnection.RBCHandover.HandingoverRBCConnection().SendPositionReport()</Action><Action
 Guid="11e2aab1-4355-4fc4-be65-995e9d79f494"
>Counter.IncrementCounter( aCounter =&gt;  RBCConnection.RBCHandover.HRBCPositionReportsCounter)</Action><Action
 Guid="10b43a01-1386-4f3f-b773-a520fe5bdd33"
>Timer.StartTimer(RBCConnection.RBCHandover.HandingoverRBCPositionReportsTimer)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendPositionReport"
 Guid="bf90027c-d4eb-4a69-a510-2483c56159e0"
>
<ReqRef
 Id="ff0f5831-c94a-4b39-b850-e16770555201"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="951ece4f-61b7-42d4-b41e-846b84bfd758"
>
</ReqRef><ReqRef
 Id="ae550cab-c867-4e9d-af2c-8e62dbe27545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98207b58-ef0b-4269-a097-c7774958cf82"
>
</ReqRef><ReqRef
 Id="1e84c5a2-c916-45da-94c9-cdf6585f39c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc16d30e-1342-4d5d-9a94-7cf95b55c794"
>
</ReqRef><ReqRef
 Id="0dc5d937-27a9-4c96-a97d-dfdbe75c85d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="45f91d4a-bcdc-4991-a173-ea36731e7e67"
>
</ReqRef><ReqRef
 Id="edf4ce85-46d4-4827-9f52-c859b33c7c8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a86e9b92-ac21-4db9-9409-998ead202cda"
>
</ReqRef><ReqRef
 Id="cd15246a-5c87-478b-bc9e-36ed9f2f9127"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6dcb0337-6ef5-444a-a750-db2d70566b32"
>
</ReqRef><ReqRef
 Id="53a6f7f6-fea5-40a1-8d58-a40fa642022f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13938655-e7ff-427e-a70e-0457e836be0f"
>
</ReqRef><ReqRef
 Id="7481e941-1b42-49cb-8cfd-e80d9da9949b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1add6c7-fbbf-4cea-994c-5c07e1aecf5c"
>
</ReqRef><ReqRef
 Id="c777f0b7-86fb-438a-91dc-20b12ceec0b0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7540897-a8a0-4b16-b402-1c5753b7f624"
>
</ReqRef><ReqRef
 Id="bc9d05af-2451-4f8c-8e90-24b256a572fa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f737789-8836-4473-8141-1120a9ca4ae6"
>
</ReqRef><Comment>If one of conditions to send the position report is satisfied, the rule sends a position report.</Comment>
<Rules>
<Rule
 Priority="UpdateOUT"
 X="110"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send position report"
 Guid="e1127980-df0f-4a33-8d9d-ebef6c03e08b"
>
<Comment>If one of conditions to send the position report is satisfied, the rule sends a position report.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send position report"
 Guid="da2401e1-0c86-4c1f-88d9-c40eb40850f0"
>
<PreConditions>
<PreCondition
 Guid="c0cd5727-43a9-490a-adb3-b7ab7cfac417"
>SendReportNow()</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentRBCConnection available"
 Guid="9ce267d8-9fa6-49f6-9ab4-faf766ef75ec"
>
<Comment>If a position report has to be sent, due to mode change for example, 
the currentRBCConnection shall establish a connection if has no present 
communication session.
Note that the SendPositionProcedure takes the responsability to contact 
a RBC if needed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Current connection available"
 Guid="9c35c403-f660-4f25-b771-0a6cb7389540"
>
<PreConditions>
<PreCondition
 Guid="5169b356-40ae-4074-a464-9405aab2b47b"
>RBCConnection.CurrentRBCConnection() != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50b33f5a-314a-404b-ba55-14584deda4a8"
>RBCConnection.CurrentRBCConnection().SendPositionReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateOUT"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SecondaryRBCConnection available"
 Guid="8b99bed5-d9ad-4a6f-85b4-838f1489bd2d"
>
<ReqRef
 Id="e48c27fe-8961-45a6-aa65-e8d83fd609ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ba2ef206-6817-4f16-af4f-2a9795f5d394"
>
</ReqRef><Comment>If the on-board has an established communication session with an Accepting RBC, 
it sends position report to both RBC connections.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Secondary connection available"
 Guid="ac93f1c8-194f-4179-b1d1-5dbf6f7f9296"
>
<PreConditions>
<PreCondition
 Guid="a9c9c62a-a1ff-45f5-8f47-71e4e1b756dd"
>RBCConnection.SecondaryRBCConnection() != EMPTY</PreCondition><PreCondition
 Guid="8572241e-74b5-421f-98e9-cb5a82f83fc2"
>RBCConnection.SecondaryRBCConnection().ConnectionState in [EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connected]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="44e5a4e8-73a9-4879-9844-f4bf9665e010"
>RBCConnection.SecondaryRBCConnection().SendPositionReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendPositionReportToAcceptingRBC"
 Guid="100ee8f8-c91c-4fae-ae90-25e0149d3010"
>
<ReqRef
 Id="6a61aac6-3496-4cb7-8a7b-8b6d6ee37d62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="56250d35-d81b-4151-8956-31ed49611541"
>
</ReqRef><ReqRef
 Id="377f8ed2-6fd9-420c-a7ae-e9f63416bd1a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dcb46949-1578-41dc-8562-5761a9198155"
>
</ReqRef><ReqRef
 Id="48bb69e8-6683-4d51-8122-037ab3d36440"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="27f9d385-6b78-48f6-b132-a9247ce75eda"
>
</ReqRef><ReqRef
 Id="a42dcba0-6408-4385-8868-72b8e5a73a50"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ab5e6f8-1012-4100-aaeb-982cbea8e73f"
>
</ReqRef><ReqRef
 Id="88340e91-06ce-45e7-8cdb-339b44bf2829"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7bc368d1-f249-4ebd-b119-0a438a8a4657"
>
</ReqRef><Comment>Using the function AcceptingRBCConnection() to send the position report 
to the AcceptingRBC allows to deal with both cases where 1 or 2 terminals 
are available onboard.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send position report to the Accepting RBC"
 Guid="9761576a-1b6f-4ba1-9407-a38b7814261a"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send position report to the Accepting RBC"
 Guid="fd17e342-c46a-4e8d-9cdd-e3ff7329a485"
>
<PreConditions>
<PreCondition
 Guid="7e956f6c-dace-46c8-908e-f325396dda0e"
>Available( Element =&gt;  RBCConnection.RBCHandover.AcceptingRBCConnection())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d0ab71e1-786d-4e01-9233-28f40c29267a"
>RBCConnection.RBCHandover.AcceptingRBCConnection().SendPositionReport()</Action><Action
 Guid="34768a56-accd-4131-a186-68383ae001f5"
>RBCConnection.RBCHandover.PositionReportSentToAcceptingRBC &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="10"
 Y="420"
 Width="100"
 Height="50"
 Name="HandleStoredMessagesReceivedFromAcceptingRBC"
 Guid="1f1ebf79-e399-4927-b7a6-85b413585d3f"
>
<Comment>Before the position report was sent to the Accepting RBC, the messages received from it were stored on-board. 
This procedure processes them.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle messages received from the Accepting RBC"
 Guid="da4cfd87-69b6-47aa-a26e-4a56722f42ad"
>
<ReqRef
 Id="c887c56e-758e-426a-a728-cf723b3b2baf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0faf02ab-bf77-4da9-9c84-dd7f27f06cf3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle messages received from the Accepting RBC"
 Guid="e676e181-4c24-4827-82dc-4411348519f0"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d8885373-70e7-414c-a68c-046684b5afc4"
>APPLY
  Messages.RemoveAcknOfTrainDataFromMessage( aMessage =&gt; X )
ON
  Messages.MessagesToHandle</Action><Action
 Guid="6ea871df-0227-4589-bad1-f3714cb01665"
>APPLY
  Messages.ProcessIncomingMessages( aMessage =&gt; X )
ON
  Messages.MessagesToHandle</Action><Action
 Guid="1d4538da-c21e-436a-80d7-72bfdba26f72"
>Messages.MessagesToHandle &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="PositionReportParametersStruct"
 DefaultValue=""
 VariableMode="Incoming"
 X="10"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PositionReportParameters"
 Guid="113484a5-3bf0-4901-ab04-48f688af408f"
>
<ReqRef
 Id="ae550cab-c867-4e9d-af2c-8e62dbe27545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b20d1930-a5f4-4f22-a28c-e015ba351cf6"
>
</ReqRef><ReqRef
 Id="a216803e-5575-472e-bbd0-bfaa483382b7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f3e7607-6e0c-40e9-bb6f-ed3de0a37da6"
>
</ReqRef><ReqRef
 Id="0536f7d3-e066-46cf-b0ad-1cbd509d2e5d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97ea887a-915b-4fdc-b9e4-63909ddc51eb"
>
</ReqRef><ReqRef
 Id="45c177ff-55f5-4aec-ae11-0629e0ae14d1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2309a23d-e13f-4728-9ed5-3481e33ce7e4"
>
</ReqRef><Comment>This variable contains the position report parameters given by the RBC.</Comment>
</Variable><Variable
 Type="PositionReportEventsTrackerStruct"
 DefaultValue=""
 VariableMode="Internal"
 X="540"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PositionReportEventsTracker"
 Guid="552bfc53-cebe-4c1a-ab8d-32611eaaf102"
>
<ReqRef
 Id="0310893d-d293-4089-ad7f-c6e74d25d402"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc2b2b4f-00c5-417b-a66d-aeca2e1653e7"
>
</ReqRef><ReqRef
 Id="51d5337f-1430-4900-a7a0-9fc794f74fdb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c94e606a-d1fa-47a7-8629-9c5357ec787a"
>
</ReqRef><ReqRef
 Id="08ae9142-b051-4a16-ad2f-f7e7d927a51e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0d99f3f1-d51e-474c-913c-587bb9e4f5cb"
>
</ReqRef><ReqRef
 Id="5e354f4a-2bd0-458a-983a-75be865356d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bd315725-10bd-4e22-bf64-2b3a62777299"
>
</ReqRef><ReqRef
 Id="a73c2ac0-c4f3-4593-b90c-ba4ee8cc4957"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0908ce11-0caf-4890-bb9a-e7549dde9e95"
>
</ReqRef><Comment>This variable is used to detect changes of kernel variables (mode, level etc) that can require a position report to RBC.</Comment>
</Variable><Variable
 Type="LastPositionReportInformation"
 DefaultValue=""
 VariableMode="Internal"
 X="710"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="LastPositionReport"
 Guid="67498216-d657-44a5-a0b7-6e7cd8819a67"
>
<ReqRef
 Id="9bce1dcb-f670-481c-9012-c9772b746a32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b750e2c-a616-4c0e-87e9-e50e0e978810"
>
</ReqRef><ReqRef
 Id="2ad61dc3-1f8d-4e29-888b-5d0a9df1e5cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0364ae66-a04f-4638-8cc1-ef019c94e1c7"
>
</ReqRef><ReqRef
 Id="3c43c95f-9a2d-4244-a81b-8ce6833a6a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a30ea7e-c3ba-4759-8cb8-96a7dda20135"
>
</ReqRef><Comment>Indicates when and where the last position report was sent.</Comment>
</Variable><Variable
 Type="Integer"
 DefaultValue="0"
 VariableMode="Internal"
 X="370"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NumberOfSentReportRepetitions"
 Guid="d96b5ab0-4030-4ae6-839f-1f4ca3db83e7"
>
<ReqRef
 Id="0df24273-c216-4ef5-8d1d-23e83f6d6c2d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d40edde6-c9f0-4baf-839f-22175651a6e4"
>
</ReqRef><Comment>Indicates the number of sent position report repetitions.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="10"
 Y="540"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clean up"
 Guid="728c26b7-570e-4d32-b6cb-6af762241ac4"
>
<Comment>Updates the followers of events that could trigger the sending of position report parameters.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clean up"
 Guid="5a196179-422d-4e6b-becf-bf5ada482ed1"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Communication Session State"
 Guid="fa75f6c0-aad1-4de7-adb8-492e75acb2e8"
>
<Comment>Updates the state of the communication session.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CommunicationSessionState"
 Guid="09614cfa-a405-4baa-b9cc-d4b95df5748d"
>
<PreConditions>
<PreCondition
 Guid="b5b3bdcf-5b20-47eb-a2c1-2cc56eeffb29"
>PositionReport.PositionReportEventsTracker.HasActiveSession != Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f253a472-4a0b-4830-9daf-dc9f1d297a47"
>PositionReport.PositionReportEventsTracker.HasActiveSession &lt;- Terminal.HasActiveSession()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level"
 Guid="013b22f0-ed85-42da-8942-a930b0fde9a8"
>
<Comment>Updates the value of the level.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level"
 Guid="6d49b62f-15e0-4aa3-b377-d0af1e9fb393"
>
<PreConditions>
<PreCondition
 Guid="49677e46-1ad5-40a9-af59-160a893d7fa9"
>PositionReport.PositionReportEventsTracker.Level != Kernel.Level.Value.Value</PreCondition></PreConditions>
<Actions>
<Action
 Guid="515acf5a-9876-4a6f-a73b-ca4bf8d4188f"
>PositionReport.PositionReportEventsTracker.Level &lt;- Kernel.Level.Value.Value</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Mode"
 Guid="f2ebd5e5-3246-4fba-8332-76750bd830db"
>
<Comment>Updates the value of the mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Mode"
 Guid="0a5bf594-ed6f-446e-80d9-db262c4517c7"
>
<PreConditions>
<PreCondition
 Guid="5db42a2c-f937-4f32-a925-9c7b4f8337fd"
>PositionReport.PositionReportEventsTracker.Mode != Kernel.Mode</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a40ed2af-fb9d-49e3-a621-997105f90762"
>PositionReport.PositionReportEventsTracker.Mode &lt;- Kernel.Mode</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train Integrity"
 Guid="f163185a-7782-4814-bf5d-1e1dafbe8b9f"
>
<Comment>Updates the value of the train integrity.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TrainIntegrity"
 Guid="2d86582e-de31-4fab-a563-66eb3d6a1694"
>
<PreConditions>
<PreCondition
 Guid="e9d87099-edc8-4dea-bdd4-ab5fd6b85fae"
>PositionReport.PositionReportEventsTracker.TrainIntegrityStatus != Kernel.TrainIntegrity.TrainIntegrity.Status</PreCondition></PreConditions>
<Actions>
<Action
 Guid="03674022-99fb-4c9a-913c-c3686ac1025e"
>PositionReport.PositionReportEventsTracker.TrainIntegrityStatus &lt;- Kernel.TrainIntegrity.TrainIntegrity.Status</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Speed"
 Guid="a38605ca-42a6-452b-a2cd-0b106c885156"
>
<Comment>Updates the value of the speed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Speed"
 Guid="afbe17aa-9778-4985-adbf-7ef3f092648e"
>
<PreConditions>
<PreCondition
 Guid="4ff8ab1e-553f-4bc5-9e31-9cdf9c890e0a"
>PositionReport.PositionReportEventsTracker.Speed != Odometry.TrainSpeed()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f06ea1a9-ebb0-4f14-89bd-3d61fbc07ba2"
>PositionReport.PositionReportEventsTracker.Speed &lt;- Odometry.TrainSpeed()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Special Moment"
 Guid="49997566-1993-4362-a440-57073f46cf9b"
>
<Comment>If a position report was sent due to a special moment Now, retain that it doesn&apos;t have to be sent again due to this event.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SpecialMoment"
 Guid="0aeae08a-4952-4b7e-8391-3a741e289b7d"
>
<PreConditions>
<PreCondition
 Guid="01e9965d-e63e-492a-8fd6-d2abb46ca74d"
>PositionReportParameters.Values.SpecialMoment == PositionReport.PositionReportSpecialMoment.Now</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ce1b2dac-1a95-4367-9e31-0328b192cae8"
>PositionReportParameters.Values.SpecialMoment &lt;- PositionReport.PositionReportSpecialMoment.DoNotSend</Action><Action
 Guid="465e9a0b-308d-4a86-a7e3-75ee18e0f703"
>PositionReport.LastPositionReport.Time &lt;- Kernel.DateAndTime.CurrentTime</Action><Action
 Guid="6541046c-0889-4cf3-9a50-e0778f68cb93"
>PositionReport.LastPositionReport.Position &lt;- Odometry.NominalDistance</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Special Location"
 Guid="dfb0aeb0-04f2-4555-9f1f-6721517a1ad2"
>
<Comment>If a position report was sent due to passing special location, remove that location from the list of special locations.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Special Location"
 Guid="47dcca8f-353d-4adf-9ed4-0510e84a4afd"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="99c02fe0-765e-4b3d-b9db-7981339dc4a9"
>REMOVE ALL SpecialLocationPassed(X) IN PositionReportParameters.Values.SpecialLocations</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position Report Time Interval"
 Guid="9e80ddfb-8e45-4e20-a552-20cfbf31531e"
>
<Comment>If a position report was sent due to the position report time interval reached, the current time is stored.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PositionReportTimeInterval"
 Guid="772bf26c-aac0-448e-8a1f-c590508bb7cf"
>
<PreConditions>
<PreCondition
 Guid="06f45f9c-043b-4bbc-b95c-80f3dff05f14"
>PositionReport.SendReportDueToPositionReportTimeReached()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d52d054b-2c95-4bcb-b1f0-f2cb70ee9265"
>PositionReport.LastPositionReport.Time &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position Report Distance Interval"
 Guid="d04487bb-928e-4ac0-a152-e5eee431f3c9"
>
<Comment>If a position report was sent due to the position report distance interval reached, the current distance is stored.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PositionReportDistanceInterval"
 Guid="876d4ee0-e43f-44f6-913c-c54346fcd6d9"
>
<PreConditions>
<PreCondition
 Guid="5dfc878b-69eb-4c7a-bb0e-ce7e410d873a"
>PositionReport.SendReportDueToPositionReportDistanceReached()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="62ca8361-552c-4f8d-a5af-7a2d6bd64455"
>PositionReport.LastPositionReport.Position &lt;- Odometry.NominalDistance</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LRBG"
 Guid="a95e3cf0-93c3-4a08-be98-06db771cab50"
>
<Comment>Updates the value of LRBG.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LRBG"
 Guid="c8a97030-9b18-44e8-8994-00a0244193c9"
>
<PreConditions>
<PreCondition
 Guid="ae6c8ef1-2194-4108-a559-adccefd1179a"
>PositionReport.PositionReportEventsTracker.LRBG != BTM.LRBG.LRBG()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e19bb715-6e05-4bc2-a5dc-f0842d91b312"
>PositionReport.PositionReportEventsTracker.LRBG &lt;- BTM.LRBG.LRBG()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Message consistency error"
 Guid="6201d339-6261-4f62-b724-d0a5f96bdaa1"
>
<Comment>Resets the event tracker for inconsistent messages received.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Message consistency error"
 Guid="a2785c8e-f302-4ec9-b8ea-3fb27608485c"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="adc40342-18f4-4df9-8097-2b5399136e18"
>PositionReport.PositionReportEventsTracker.InconsistentMessage &lt;- InconsistentMessageTypeEnum.None</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
