<NameSpace
 X="140"
 Y="40"
 Width="100"
 Height="50"
 Name="Messages"
 Guid="3ae4d6a6-9eb0-4ea4-bb3a-07e3300a7a70"
>
<Comment>Everything needed to process the reception and sending of radio messages.</Comment>
<NameSpaces>
<NameSpaceRef
 Name="PositionReport"
 Guid="c9623ca4-7f96-47f9-9040-bcb29cb92c3d"
>
</NameSpaceRef><NameSpaceRef
 Name="TrainData"
 Guid="3e0fac33-af2e-49fb-87bd-7ac9bade11fe"
>
</NameSpaceRef></NameSpaces>
<Collections>
<Collection
 TypeName="Messages.MESSAGE.TRACK_TO_TRAIN.Message"
 Default="[]"
 X="600"
 Y="350"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IncomingMessagesCol"
 Guid="283cbfc1-9561-4267-812a-14cff11444cf"
>
<ReqRef
 Id="c887c56e-758e-426a-a728-cf723b3b2baf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="17c6665d-b5f5-425f-a574-812935437d9e"
>
</ReqRef><Comment>Stores the messages sent by the Accepting RBC before it becomes the supervising RBC.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="Messages.EURORADIO.MessageIn.Message"
 Default=""
 X="10"
 Y="460"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedMessageIn"
 Guid="d126b310-93ea-4ece-8b07-e1d48e7f71b4"
>
<ReqRef
 Id="df43d600-5638-4182-ba06-d74902c13828"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b896cf7e-629e-4729-ad2f-b45f21627012"
>
</ReqRef><ReqRef
 Id="25af834a-3a24-459b-b5c8-97b85eddb2e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8e0ecfb-95dd-45d4-adde-b5ffde7800c7"
>
</ReqRef><ReqRef
 Id="8f23f854-2f46-42a3-bb10-9f08e6b57b62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddec1320-67e4-4cb1-816a-0a7332db0a63"
>
</ReqRef><Comment>The operational version of incoming messages is SystemVersion2. This function is used to translate a lower version version received message. It returns a Messages.EURORADIO.MessageIn.Message structure. 
Note that the original and stored structure is not changed.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBC"
 Guid="e9364fbc-653d-436f-9845-70172a947dc8"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No connection yet"
 Guid="6f9d208a-e434-4048-8d98-e857ab88fb1d"
>
<PreConditions>
<PreCondition
 Guid="d6cc6f9b-3550-4517-87e7-b6a7f39e46c2"
>NOT Available(aRBC)</PreCondition></PreConditions>
<Expression>EMPTY</Expression>
</Case><Case
 Name="Version 2 should be used"
 Guid="0eed7905-5925-4d06-b79a-6bddb3558e77"
>
<PreConditions>
<PreCondition
 Guid="d93e10a3-f60a-4838-a1f9-4380368bed3d"
>UseVersion2( aRBC )</PreCondition></PreConditions>
<Expression>aRBC.Data.MessageIn</Expression>
</Case><Case
 Name="Version1 message should be translated before used as Version 2 message"
 Guid="6cbaa36d-e7ce-404a-9651-13301db09ffd"
>
<PreConditions>
<PreCondition
 Guid="5b4ae8ca-3693-499a-b2c5-e032b3c04a41"
>UseVersion1 ( aRBC )</PreCondition></PreConditions>
<Expression>Messages.EURORADIO.MessageIn.Message{
     SystemVersion2 =&gt; VersionManagement.Translation.Messages.UpdateMessage(
         aRBC.Data.MessageIn.SystemVersion1
    ),
     SystemVersion1 =&gt; EMPTY,
     Priority =&gt; aRBC.Data.MessageIn.Priority 
}</Expression>
</Case><Case
 Name="Otherwise"
 Guid="a100ec32-19f0-4961-b18e-d48089c5cd68"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.Message"
 Default=""
 X="350"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedReceivedMessage"
 Guid="f08cda05-d060-4cdf-a4f1-a938a9178de2"
>
<Comment>The operational version of incoming messages is SystemVersion2. This function is used to translate a lower version version received message. It returns a Messages.MESSAGE.TRACK_TO_TRAIN.Message structure. Note that the original and stored structure is not changed.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBC"
 Guid="27d1dc3b-c87e-4a6d-929f-6ee9e1878c95"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="1e3835bd-b15a-4885-8aa5-95f4976e3a61"
>
<Expression>Messages.UpdatedMessageIn(aRBC).SystemVersion2</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="570"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TimeStampValid"
 Guid="ab1354d0-c1c6-4395-9d6f-4aa038d4932f"
>
<ReqRef
 Id="a3ae1dd4-1e9a-44e2-85d0-b0ebc947ebc1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5af76d55-8d3b-46ec-971c-039ac3abd467"
>
</ReqRef><ReqRef
 Id="6950f2b1-0c72-4e10-9f34-e93e44498694"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fea717a2-c7d1-4240-9569-47be6997c55a"
>
</ReqRef><ReqRef
 Id="b5a598d2-0344-4c46-9e26-cc53c26f73c7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40432a37-def5-48dc-8aa9-98e3d848ccc8"
>
</ReqRef><ReqRef
 Id="ea2dce72-5d9f-4f02-af04-186341cf739c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e25fde3-7868-4547-aa11-f118880785e2"
>
</ReqRef><ReqRef
 Id="3f65404b-e1fe-4937-a5c6-7f726a405a4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd0a584b-e7d9-4a26-a508-fc0b78d094b8"
>
</ReqRef><ReqRef
 Id="aff53c34-f612-4eb4-bc2a-11d5e30566ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7ec0859-5852-4c42-8cd4-c0b7ad0e5d68"
>
</ReqRef><ReqRef
 Id="1d7817dd-686d-4c09-9e56-ef8943a94858"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19849574-b13a-49a6-a9ba-8a04d29c38ed"
>
</ReqRef><ReqRef
 Id="0b314991-9ddf-4e48-bbbc-ef8083339ea7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6e9cefaa-f126-4078-b610-75cd7441936b"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="36225e67-0b25-4ecf-a721-3dc88e6880b7"
>
</ReqRef><ReqRef
 Id="e4d36115-94a0-4ddb-9c53-0fb21351ca06"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="78ecfab0-f1ea-4706-be63-f9c0e5f7a5c4"
>
</ReqRef><Comment>Check that the time stamp of the received message is valid.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.Message"
 Name="Message"
 Guid="abb59365-0111-4635-b2fb-5aefbd5f9bfe"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Do not perform the check"
 Guid="be17402f-5b8f-4a88-b12d-7aff2a69e4ae"
>
<PreConditions>
<PreCondition
 Guid="c3f96aa5-6fe3-4df7-bd6e-985bf2062c2f"
>NOT Kernel.ActiveFunctions.CheckRadioSequence()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Time stamp unknown at initiation of communication"
 Guid="202591f0-e7d7-4e7e-b5fe-6abfd9152eeb"
>
<PreConditions>
<PreCondition
 Guid="de53a423-8147-46b1-b35d-5aed01bd6f32"
>Available(Message.INITIATION_OF_A_COMMUNICATION_SESSION)</PreCondition><PreCondition
 Guid="08fc2b71-0f15-44e3-95cd-d0cf5aebbace"
>RBCConnection.CurrentRBCConnection().OnboardReference_MessageTimer == BaseTypes.Time.NA</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Time stamp before previous message"
 Guid="9347d978-64df-4223-8fbf-b2e58eedb111"
>
<PreConditions>
<PreCondition
 Guid="908af580-db95-473f-b35b-3a52e7234b45"
>MessageTypes.TimeResolution( Messages.MESSAGE.TRACK_TO_TRAIN.GetT_TRAIN(Message) ) &lt;= RBCConnection.CurrentRBCConnection().OnboardReference_MessageTimer</PreCondition></PreConditions>
<Expression>RBCConnection.OnboardTimerWrapped()</Expression>
</Case><Case
 Name="Time stamp correct"
 Guid="da2ff5e4-26b5-402e-b578-045d3514c8f0"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="460"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RevSupPacketAvailable"
 Guid="5a15b6b0-6503-4dc2-be26-fe1ae431de97"
>
<Comment>Indicates whether a Reversing Supervision Information packet is available.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Name="aPacket"
 Guid="ba08a442-7a5a-43c5-b049-16c67eee0e93"
>
</Parameter><Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="8d2713d3-7d11-4c98-b858-24e5dcbb0af8"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is not empty"
 Guid="011ef2e2-dee6-491b-bb09-972182c46e59"
>
<PreConditions>
<PreCondition
 Guid="b3f59daf-4b85-4b03-b696-37c47cd379c0"
>aPacket != EMPTY</PreCondition></PreConditions>
<Expression>ConsiderRBCPacket(
    Q_DIR =&gt; aPacket.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
  AND  
Kernel.AcceptInformation.ReversingSupervisionInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="f3b8bab9-4f60-4802-9670-cebb93731f1a"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="240"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RevAreaPacketAvailable"
 Guid="56479f30-de92-43f3-983b-e6d609303b1f"
>
<Comment>Indicates whether a Reversing Area Information packet is available.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Name="aPacket"
 Guid="01149e04-edd8-4139-9e0c-1aaf39df6e05"
>
</Parameter><Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="9382757f-50c6-4d30-a27e-3df2d36fdeb1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is not empty"
 Guid="daf6fd28-499e-4fb5-bf5e-6604a8f53842"
>
<PreConditions>
<PreCondition
 Guid="9c73eba3-f546-4fe7-b14f-7ec5213fc40f"
>aPacket != EMPTY</PreCondition></PreConditions>
<Expression>ConsiderRBCPacket(
    Q_DIR =&gt; aPacket.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
  AND  
Kernel.AcceptInformation.ReversingAreaInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="3fc2db1a-d8e7-4a78-8813-dc4305f855ec"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Default=""
 X="570"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProvideRevSupPacketToHandle"
 Guid="26c274cc-0222-46ea-9597-7c45a593bbaa"
>
<Comment>Given a Reversing Supervision Information packet, returns this packet if it is available and can be handled and returns EMPTY otherwise.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Name="aPacket"
 Guid="0cef4881-2743-4734-956e-a4bcd8f2f1b7"
>
</Parameter><Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="36c86493-9900-4708-8595-fb8d14826d63"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is available"
 Guid="e5a43c3a-1fa2-40ac-b5af-0c80e960a9aa"
>
<PreConditions>
<PreCondition
 Guid="6da5e448-015b-4c78-8fa7-cb1c8865ad7b"
>Messages.RevSupPacketAvailable( aPacket =&gt; aPacket, NID_LRBG =&gt; NID_LRBG )</PreCondition></PreConditions>
<Expression>aPacket</Expression>
</Case><Case
 Name="Otherwise"
 Guid="c63340b3-6649-4f1f-a54e-c0f7ab44cc29"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Default=""
 X="350"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProvideRevAreaPacketToHandle"
 Guid="ce723317-2337-45d6-a038-8c9439200eaa"
>
<Comment>Given a Reversing Area Information packet, returns this packet if it is available and can be handled and returns EMPTY otherwise.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Name="aPacket"
 Guid="613c0694-6762-4913-91d7-c9d8c24dcabc"
>
</Parameter><Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="378f71cd-ecb2-4e1f-a3ae-fe7afaf7f30c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is available"
 Guid="3bcda17f-0b3e-4795-bb17-1e010a9fdda6"
>
<PreConditions>
<PreCondition
 Guid="c0c259f6-48de-485a-92a8-7d19cb166bf7"
>Messages.RevAreaPacketAvailable( aPacket =&gt; aPacket, NID_LRBG =&gt; NID_LRBG )</PreCondition></PreConditions>
<Expression>aPacket</Expression>
</Case><Case
 Name="Otherwise"
 Guid="64de3bfb-c9bb-4037-b16d-672fc7d3ee98"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="460"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConsiderRBCPacket"
 Guid="2d8f4f92-1c19-4997-ae69-2afd2cf7eb43"
>
<ReqRef
 Id="1918ec5c-54a5-4240-8cd2-5f860383b37c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a9aba3fd-f466-40a7-afbc-c72d1b004600"
>
</ReqRef><ReqRef
 Id="1800bf83-b2c2-4d37-8406-ca0c31b30f0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23a40d38-adec-40b3-b6f6-9a9d3009678d"
>
</ReqRef><ReqRef
 Id="84a3e716-7b2f-4eb0-93b4-872e90faf619"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad0d6a7e-7162-4367-829e-0d07f584eaa4"
>
</ReqRef><ReqRef
 Id="c616e51b-8db4-4b6a-b957-18b0ff09c9ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb60bb09-c3ef-4522-a98c-b73ed89204fb"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c2bbe80-3222-493e-b377-9bfd83dda401"
>
</ReqRef><ReqRef
 Id="e40c0b71-8a09-48e2-afa1-209598ab1a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7cd8ebe2-8a49-416f-a82b-a68c833799a7"
>
</ReqRef><ReqRef
 Id="1491cc62-39cf-4aac-9887-c6a659e8f015"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d8733fb-f0f4-4035-a0c5-0094f74e4103"
>
</ReqRef><ReqRef
 Id="09b7fcaa-8fd0-4fe9-8eed-a4c1fee31c2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f8d87fe-37d0-4edc-8447-cac6e72829f0"
>
</ReqRef><ReqRef
 Id="6649ff98-11a8-49c6-8b46-6c93216ad250"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b9db40c9-2bf6-447b-ba66-e4b8ec8994ab"
>
</ReqRef><Comment>Returns true if the packet has to be considered, that is 
  - if the packet is available (hence its orientation is also available) and
  - its information is valid for the current orientation of the train with respect to the given  or for both directions). 
If the train direction is unknown, this function returns true only if the packet&apos;s information if valid for both directions.</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_DIR"
 Name="Q_DIR"
 Guid="83698432-b64c-459b-9dcb-b7c4dd8e2321"
>
</Parameter><Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="de15766b-890b-4f13-8795-2197e73b4ee7"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Not available"
 Guid="8c65d7dc-c6dc-463b-8371-e40e1a9c0fa1"
>
<PreConditions>
<PreCondition
 Guid="52981d48-d580-40f4-94f2-da50607e6d39"
>NOT Available( Q_DIR )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Train position unknown"
 Guid="6cadae08-1297-43cd-a66b-ace03591f8a9"
>
<Comment>This case is redundant with the next one, but it is useful because there is a specific requirement for this. 
Furthermore, this allows to avoid getting a LRBG when the position is unknown</Comment>
<PreConditions>
<PreCondition
 Guid="12e9f838-227c-4206-9ffe-55c4659525ec"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Expression>Q_DIR == Messages.Q_DIR.Both_directions</Expression>
</Case><Case
 Name="Message applicable for both directions"
 Guid="5fac9e48-f20c-4836-a2a2-362383ba0bfb"
>
<PreConditions>
<PreCondition
 Guid="22822e65-2859-4433-9d90-9b222ad29ba4"
>Q_DIR == Messages.Q_DIR.Both_directions</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="LRBG available"
 Guid="3702a406-0058-4a67-9a20-f9f5a53e63fb"
>
<PreConditions>
<PreCondition
 Guid="82b8cbd5-ddf0-4227-9bd1-470ce29fd054"
>Available ( LRBGFromNID( NID_LRBG ) )</PreCondition></PreConditions>
<Expression>Q_DIR == EFSOrientationConverter ( LRBGFromNID( NID_LRBG ).Orientation )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="ca55e6a3-c471-4c0a-9fd4-dca10ddc6c2a"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="350"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DataPriorityCorrect"
 Guid="a5bed293-f598-41dc-bbde-69ba0d2dfa6b"
>
<ReqRef
 Id="a5a26b96-8dd0-4ac0-8305-a9730a4ce109"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72b7b306-1eb4-44ea-b787-3bf6086ec400"
>
</ReqRef><ReqRef
 Id="e700d18e-d4e8-422a-990c-f149f477ef14"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d72d8762-727b-4f5a-858e-830f46f6d24d"
>
</ReqRef><ReqRef
 Id="e9f7415c-2605-40c6-82c5-5211a7679d76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8838ab63-e210-4c3f-8b93-5bda5efd1bf5"
>
</ReqRef><Comment>Checks that the priority of the received message is correct. The possible priorities are Normal and High. Only emergency stop messages can have high priority.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBC"
 Guid="86b9a7fa-5b65-4b68-8b8c-a6038301f840"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="High priority"
 Guid="7acfd1fe-1e84-45f3-8956-eec0185a6948"
>
<PreConditions>
<PreCondition
 Guid="da1cad06-8c2a-45fc-8c4e-4404ecd814ef"
>aRBC.Data.MessageIn.Priority == Messages.EURORADIO.MessagePriorityEnum.High</PreCondition></PreConditions>
<Expression>Available(Messages.UpdatedReceivedMessage(aRBC).CONDITIONAL_EMERGENCY_STOP)
  OR  
Available(Messages.UpdatedReceivedMessage(aRBC).UNCONDITIONAL_EMERGENCY_STOP)</Expression>
</Case><Case
 Name="Normal priority"
 Guid="79ed3277-4d2d-4c00-a852-2369940a9c1b"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="240"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IncomingMessageIsConsistent"
 Guid="63c5c7c9-161e-4294-80b5-fbf6fdea21e2"
>
<ReqRef
 Id="3460bc0e-8803-4236-bb1b-7b9af5863703"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="960a91af-75af-42eb-bc19-dc03e554ed93"
>
</ReqRef><ReqRef
 Id="9e7a0583-df92-4eab-8868-236ab7137663"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ccda8532-e676-4060-8996-a384268bd8c4"
>
</ReqRef><ReqRef
 Id="6950f2b1-0c72-4e10-9f34-e93e44498694"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f9d4979-95a3-4f4f-8288-cad47a883d5d"
>
</ReqRef><ReqRef
 Id="a3ae1dd4-1e9a-44e2-85d0-b0ebc947ebc1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbc5b274-6fe7-4a0d-b8e8-3e72690802b7"
>
</ReqRef><ReqRef
 Id="b09389ef-751e-4124-ab57-b53c0a663151"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="306d1665-9238-4fde-801c-7fbd0526a9ec"
>
</ReqRef><ReqRef
 Id="4b29da50-13ee-4edd-95f6-cfdfa283ca99"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26cfece4-a5e8-403a-b4cb-f073762de7bc"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f8854ec-64d6-4da1-8fc5-5dcfdc9ebe41"
>
</ReqRef><ReqRef
 Id="da9f0886-9eda-4e06-91e4-41094a7a488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dad9a60e-fffd-4f6d-ab7b-fee7b1583493"
>
</ReqRef><ReqRef
 Id="32b19cf7-49e4-4104-adb6-9015c15794fc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d1589dec-917e-4a97-bc80-08da7f7c8588"
>
</ReqRef><Comment>Performs the data consistency checks on an incoming radio message.
The checks performed in EFS are:
  - the time stamp of the received message is greater than the time stamp of the previous received message.
  - all values of variables in the message are valid.
In the case the incoming message is EMPTY, the function returns true since the absence of message is not considered as inconsistancy.</Comment>
<Parameters>
<Parameter
 Type="Messages.EURORADIO.MessageIn.Message"
 Name="InMessage"
 Guid="9aecef0e-5917-4b84-bc32-f8a2ee82362c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No message"
 Guid="8b462b2c-e728-4afd-ba13-d1513f3070ed"
>
<PreConditions>
<PreCondition
 Guid="2f5d5aef-f2c0-4e0b-958e-3b4a3769699b"
>NOT Available(InMessage.SystemVersion2)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Do not check the validity of messages"
 Guid="b83794a5-c49c-4d91-afa3-f9f93903fd22"
>
<PreConditions>
<PreCondition
 Guid="927a16d3-dd2b-4aa0-9aac-a7fe07f5f58f"
>NOT Kernel.ActiveFunctions.CheckRadioMessage()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="High priority message"
 Guid="a6510492-0c7e-4ab1-956a-8527ad7a594b"
>
<PreConditions>
<PreCondition
 Guid="d2487dc1-8aa1-4f19-bb0a-2d0c95e0b580"
>InMessage.Priority == Messages.EURORADIO.MessagePriorityEnum.High</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Time stamp invalid"
 Guid="bca5e06a-c381-424a-aa56-2f45d71ca6bf"
>
<PreConditions>
<PreCondition
 Guid="1839697c-2ced-42ac-aff4-5a06c01cf486"
>NOT Messages.TimeStampValid(InMessage.SystemVersion2)</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Invalid variables"
 Guid="90d481bc-88f3-49cb-a726-6ae26e4970f5"
>
<PreConditions>
<PreCondition
 Guid="7befe0e8-1643-451e-8870-89975f347dd9"
>NOT Messages.MESSAGE.TRACK_TO_TRAIN.MessageValuesCorrect(InMessage.SystemVersion2)</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Otherwise"
 Guid="93ee79d0-2ce6-4bf9-abad-31156f78bc90"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="680"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IncompatibleVersionReceived"
 Guid="f4458742-2ae1-4062-aef4-7341b829ddac"
>
<ReqRef
 Id="02f20f26-3445-49b9-95cf-a6948ab029b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e63556fc-ab8a-4644-aeda-c81b47a3d022"
>
</ReqRef><ReqRef
 Id="790cf49e-a85c-4110-b567-fc5d57052339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4a188d75-b7d7-4d9e-9b25-dafe944dee03"
>
</ReqRef><ReqRef
 Id="25af834a-3a24-459b-b5c8-97b85eddb2e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fca8116b-c648-446e-99b2-a74da8fc0c1e"
>
</ReqRef><ReqRef
 Id="e28641fe-d20c-42ee-a1e3-a02d73f37d4a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d45c70b5-56f5-4db3-9128-01fde611b7fe"
>
</ReqRef><Comment>Indicates that the system version of the attempted RBC connection is incompatible (for display on the DMI).</Comment>
<Cases>
<Case
 Name="No System Version Order Message"
 Guid="8f08b35c-8b50-4a53-b55f-31004b353844"
>
<PreConditions>
<PreCondition
 Guid="ead90fcd-7877-4113-bcfe-47013d6cbaec"
>NOT Available( Messages.UpdatedMessageIn( RBCConnection.CurrentRBCConnection()).SystemVersion2.RIU_SYSTEM_VERSION )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Value"
 Guid="e58021fd-0dcb-4301-ba53-579fd6729815"
>
<Expression>NOT VersionManagement.SystemVersionIsCompatible ( RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.Value )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="680"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MessageCanBeSent"
 Guid="e4578232-0a7b-4b6d-82f8-34004ee84e07"
>
<ReqRef
 Id="0495c96f-8aa3-4cc5-b09d-99f5379d6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa2584bb-c269-46ca-841f-c36c01df6139"
>
</ReqRef><ReqRef
 Id="4fdfab4a-e8a0-4311-8b70-2b8945cd0f7a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6bda043d-8cc2-4f54-925f-a0a80adf54f3"
>
</ReqRef><Comment>Indicates if an outgoing message can be sent. The only condition to be satisfied is to have an established 
 or establishing session (a message failure can be sent while connecting if the system version is not supported). 
A message can thus be sent during a loss of the safe radio connection if the connection state is still &quot;Connected&quot;. 
But no message can be sent after the message &quot;Termination of communication session&quot; since after having sent 
this message the system goes to &quot;Terminating&quot; state.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="anRBC"
 Guid="b40133ab-d13d-4324-bde5-7de83839347c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="89ac9c68-8258-4a49-ae9d-2281f7d8966a"
>
<Expression>anRBC.ConnectionState in 
[RBCConnection.RBCStruct.ConnectionStateSM.Connected, 
RBCConnection.RBCStruct.ConnectionStateSM.Connecting
]</Expression>
</Case></Cases>
</Function><Function
 Type="BTM.LRBG.BaliseGroupStruct"
 Default=""
 X="570"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="LRBGFromNID"
 Guid="79e4e9f2-50fb-40fe-a5bf-60ab215e4237"
>
<ReqRef
 Id="1800bf83-b2c2-4d37-8406-ca0c31b30f0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="de774368-50c9-410f-aab8-367684731f44"
>
</ReqRef><ReqRef
 Id="f7fc46b2-db95-4d3a-8dcc-19f1948d1fff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3d471d0-b255-408c-8797-e57e0757f900"
>
</ReqRef><ReqRef
 Id="18834f9f-2f32-40fe-9d9a-97c8e2991f93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74fa5141-bfca-4017-937c-889e35991ee0"
>
</ReqRef><ReqRef
 Id="59b298a9-850d-49a0-951e-800b41e5878a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="067a585a-8b30-4d61-99db-f6574a79384d"
>
</ReqRef><ReqRef
 Id="e69a91d2-e0c4-4628-9343-c53594060aea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab27ccf1-05f0-4014-b34e-e916ed3baf9d"
>
</ReqRef><ReqRef
 Id="b46c02fc-57ec-451b-a3d1-98b91af17952"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98605a94-355e-462c-8de7-b9296f4b30f7"
>
</ReqRef><ReqRef
 Id="28c19fbc-19ff-4bc3-ada2-6a631220fc26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3a59ce66-0293-4a5a-857d-6b172afcf274"
>
</ReqRef><Comment>Provides the stored LRBG that corresponds to the NID_LRBG received in the message.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_LRBG"
 Name="aNID_LRBG"
 Guid="0fa624aa-ee93-44cf-857c-c27de72286b9"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="NID_LRBG empty or unknown"
 Guid="13bfbf4c-c9d4-44e8-80d7-b0e515cfdfff"
>
<PreConditions>
<PreCondition
 Guid="d2f37ba5-01af-4ed6-8df7-24aa6cd4fea3"
>NOT Available( aNID_LRBG )
  OR  
aNID_LRBG == Messages.NID_LRBG.Unknown</PreCondition></PreConditions>
<Expression>EMPTY</Expression>
</Case><Case
 Name="It is the current LRBG"
 Guid="a79cd91a-c179-4454-8b0b-85fbb3814a47"
>
<PreConditions>
<PreCondition
 Guid="942b0799-95b7-48c9-a1ba-8c03e7af3545"
>BTM.LRBG.LRBG().NID_BG == NID_BGFromNID_LRBG( aNID_LRBG )</PreCondition><PreCondition
 Guid="4650027b-4700-4286-a2de-cf726eed6d61"
>BTM.LRBG.LRBG().NID_C == NID_CFromNID_LRBG( aNID_LRBG )</PreCondition></PreConditions>
<Expression>BTM.LRBG.LRBG()</Expression>
</Case><Case
 Name="It is a previous LRBG"
 Guid="fb72a5f8-a44a-4bd9-bd84-c7fd617ced06"
>
<PreConditions>
<PreCondition
 Guid="b059f21c-aea9-4227-8b5a-b1f3ed28e7d2"
>THERE_IS X IN BTM.LRBG.PreviousBaliseGroups | (
  X.IsLRBG
    AND  
  X.BaliseGroup.NID_BG == NID_BGFromNID_LRBG( aNID_LRBG )
    AND  
  X.BaliseGroup.NID_C == NID_CFromNID_LRBG( aNID_LRBG ) )</PreCondition></PreConditions>
<Expression>(FIRST X IN BTM.LRBG.PreviousBaliseGroups |
  X.IsLRBG
    AND  
  X.BaliseGroup.NID_BG == NID_BGFromNID_LRBG( aNID_LRBG )
    AND  
  X.BaliseGroup.NID_C == NID_CFromNID_LRBG( aNID_LRBG )
).BaliseGroup</Expression>
</Case><Case
 Name="Othrerwise"
 Guid="b89ec31d-9764-4508-a65a-2727eaeb772e"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="680"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="LRBGLocationReference"
 Guid="d5711bb5-91b1-4b84-858d-97c0823ceea1"
>
<ReqRef
 Id="1800bf83-b2c2-4d37-8406-ca0c31b30f0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8535ed8e-f473-4bee-9e76-8b375b970eb1"
>
</ReqRef><ReqRef
 Id="59b298a9-850d-49a0-951e-800b41e5878a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6b662311-ace0-4c96-9cb2-98d2574c0125"
>
</ReqRef><ReqRef
 Id="f7fc46b2-db95-4d3a-8dcc-19f1948d1fff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="15574bd6-9a4d-4635-9607-3fae762b4452"
>
</ReqRef><ReqRef
 Id="28c19fbc-19ff-4bc3-ada2-6a631220fc26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b841adf-70f1-4e60-b3b0-e93eecf1e980"
>
</ReqRef><Comment>Returns the reference location of the LRBG that is given as location reference for the received RBC message.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="de85b194-296b-45c4-89a0-12a87d3a6da4"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Unknown LRBG"
 Guid="a29c35bb-9660-442a-b707-72ac47728acd"
>
<PreConditions>
<PreCondition
 Guid="d2dce00a-a248-4a05-8b4b-8dc2f15aa7cb"
>NOT Available ( Messages.LRBGFromNID( NID_LRBG ) )</PreCondition></PreConditions>
<Expression>0.0</Expression>
</Case><Case
 Name="The LRBG is stored on-board"
 Guid="16202738-a9ab-404a-9ec9-8f4a907a3d5e"
>
<Expression>Messages.LRBGFromNID( NID_LRBG ).Position.Position</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="460"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DistanceFromCurrentLRBG"
 Guid="d666f31f-6577-49c7-a46b-d06c4bd6b719"
>
<ReqRef
 Id="1800bf83-b2c2-4d37-8406-ca0c31b30f0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="64427775-6605-4bd1-8cb6-31819b5d29b0"
>
</ReqRef><ReqRef
 Id="f7fc46b2-db95-4d3a-8dcc-19f1948d1fff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eeeb053e-3166-4f00-bb86-03279396834c"
>
</ReqRef><ReqRef
 Id="59b298a9-850d-49a0-951e-800b41e5878a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e0369855-7602-43a1-b8d2-cbf5dd0a8ddc"
>
</ReqRef><ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8be3e28-1ae2-4325-ada7-85770df60a7d"
>
</ReqRef><ReqRef
 Id="ee60d01b-a74d-40b9-88b2-c24f3198e572"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cfc9d49c-3c26-4d27-b3a2-c863c0945258"
>
</ReqRef><ReqRef
 Id="762a9a50-d079-460f-80fd-c72d91c43331"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2688878-3587-43c1-9119-cabc7e67f0a0"
>
</ReqRef><Comment>Provides the difference between the location reference of the data transmitted in the RBGC message and the train&apos;s on-board location reference.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="ddfff94e-56c9-4b9b-a1b7-6bf774b21341"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="99a91b08-4822-4266-b578-590f6bb62fcd"
>
<Expression>Messages.LRBGLocationReference(NID_LRBG) - Kernel.ReferenceLocation()</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_BG"
 Default=""
 X="350"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NID_BGFromNID_LRBG"
 Guid="8e1c3339-1c1e-40db-9ce8-7be0624bcb53"
>
<ReqRef
 Id="1a2d8383-787f-4c77-9833-3c39e73c0b0a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a05c4c14-b2e5-4d7a-a6e3-e0b7f023d511"
>
</ReqRef><Comment>The value NID_LRBG is the concatenation of the bit representation of NID_C and NID_BG.
The 10 first bits of the value are the NID_C, the 14 next ones are the NID_BG.
To get NID_BG from NID_LRBG, we subtract the (NID_C from NID_LRBG) from NID_LRBG.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_LRBG"
 Name="aNID_LRBG"
 Guid="d7d81695-feea-4492-be30-b43d150906dd"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="64993f67-88a7-45c7-a28e-2045f35b9719"
>
<Expression>aNID_LRBG - ((2^14) * NID_CFromNID_LRBG( aNID_LRBG ))</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_C"
 Default=""
 X="240"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NID_CFromNID_LRBG"
 Guid="6cf6c7c0-4089-45d8-940b-a793cb53d76b"
>
<ReqRef
 Id="1a2d8383-787f-4c77-9833-3c39e73c0b0a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5d4e6b71-53b6-4346-aca1-512ac32e108c"
>
</ReqRef><Comment>The value NID_LRBG is the concatenation of the bit representation of NID_C and NID_BG.
The 10 first bits of the value are the NID_C, the 14 next ones are the NID_BG.
To get NID_C from NID_LRBG, we divide NID_LRBG by 2^14.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_LRBG"
 Name="aNID_LRBG"
 Guid="b266d0ed-c24b-4ba0-838e-18ce5963793c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="aecdfd5b-e894-402e-b0bf-f90ad7f83181"
>
<Expression>aNID_LRBG / (2^14)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="460"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DeconnectionOrderIsReceivedFromRBC"
 Guid="a954f5e8-fc40-4aac-a8d1-837382865635"
>
<Comment>// A disconnection order can be sent in three messages: Movement Authority, General Message and MA With Shifted Location Reference. To avoid having to look into these three types of messages and since message_In is quickly cleaned up, we look into the ContactRBCOrder to if it is not empty and the action is to terminate the session.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBCStruct"
 Guid="a96e5a97-268e-4635-aa88-d5a01bc153ba"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Termination order received"
 Guid="cb90dc32-5b49-417a-bc18-88fe1aedef77"
>
<PreConditions>
<PreCondition
 Guid="861015c4-5293-46b3-adb2-09d1eef43360"
>Available( Element =&gt;  aRBCStruct.ContactRBCOrder)</PreCondition><PreCondition
 Guid="71adc3cf-c2ac-4cfb-8e0d-1ac782a4abc5"
>aRBCStruct.ContactRBCOrder.ActionToPerform == EURORADIO.RBCConnection.Contact.ContactActionEnum.Terminate</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="b4ebf964-d5c7-4e75-b76e-694b3bd8ec50"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="120"
 Y="400"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="UseVersion1"
 Guid="19698b8e-62c0-484a-bc35-faaeb2d10495"
>
<ReqRef
 Id="8f23f854-2f46-42a3-bb10-9f08e6b57b62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="524f456a-f27d-4fd4-b228-70f8708058f8"
>
</ReqRef><Comment>Indicates that the message version 1 should be used (and translated)</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBC"
 Guid="497b78bb-1eda-4865-b6f6-c75165e75a1e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SystemVersion1"
 Guid="1b8a7ab4-d6a1-40d3-9d2d-7def86f29a7d"
>
<PreConditions>
<PreCondition
 Guid="e279b747-f75e-4ef6-a4da-0e3738eadcda"
>aRBC.SessionManagementData.SystemVersion.Value in [VersionManagement.SystemVersionEnum.Version1_0, VersionManagement.SystemVersionEnum.Version1_1]</PreCondition><PreCondition
 Guid="48f97a32-a566-41ff-87b5-10ded79d0066"
>aRBC.SessionManagementData.SystemVersion.DataState == Default.DataStateEnum.Valid</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Transmission of system version V1"
 Guid="feeef2dd-f706-43ed-9477-85086c747b44"
>
<PreConditions>
<PreCondition
 Guid="0046e0f4-cf34-4b05-b21a-416bbd27847a"
>aRBC.SessionManagementData.SystemVersion.DataState == Default.DataStateEnum.Unknown</PreCondition><PreCondition
 Guid="4638e427-ec26-42c7-b46a-d65179204262"
>Available ( aRBC.Data.MessageIn.SystemVersion1 )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Incompatible system version_V1container"
 Guid="f88e4c3f-d010-46e9-9417-4e20f8629807"
>
<Comment>While attempting to establish a communication session, if the received system version is unknown to the system, one should allow 
the exchange of a few versionless messages before ending the connection.</Comment>
<PreConditions>
<PreCondition
 Guid="138ce9ee-7ffb-4ea1-af5f-582b6a8dd98f"
>aRBC.SessionManagementData.SystemVersion.DataState == Default.DataStateEnum.Valid</PreCondition><PreCondition
 Guid="34bfdac6-a8cc-40c2-9830-1bc841f211d7"
>aRBC.SessionManagementData.SystemVersion.Value == VersionManagement.SystemVersionEnum.Unknown</PreCondition><PreCondition
 Guid="e4828515-a67c-4b02-9e86-f5a034cee535"
>aRBC.ConnectionState in[EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connecting,
EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connected.InitialState,
EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Terminating]</PreCondition><PreCondition
 Guid="eda2ee14-57a3-4704-9670-04e7df972b52"
>Available ( aRBC.Data.MessageIn.SystemVersion1 )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="ef2d91cc-f4c4-4699-8483-03877c839648"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="400"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="UseVersion2"
 Guid="2afb4e7e-d492-4c55-99a4-b5138f688bb8"
>
<ReqRef
 Id="8f23f854-2f46-42a3-bb10-9f08e6b57b62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c4e57dc-2f86-42dd-aa58-052e3740e9d0"
>
</ReqRef><Comment>Indicates that the message version 2 should be used (no translation)</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBC"
 Guid="3a501ccb-a73e-4d07-bc90-53e161e5e11c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SystemVersion2"
 Guid="d9b81ba3-de74-4a8b-b8d7-ce9edf1cbc53"
>
<PreConditions>
<PreCondition
 Guid="07bf51e2-9fc7-453f-bb92-d5297f5573a6"
>aRBC.SessionManagementData.SystemVersion.Value == VersionManagement.SystemVersionEnum.Version2_0</PreCondition><PreCondition
 Guid="a67ffd74-bbf4-44fa-a469-9bb58052ce3a"
>aRBC.SessionManagementData.SystemVersion.DataState == Default.DataStateEnum.Valid</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Transmission of system version V2"
 Guid="b0f6ed62-2273-4a36-9b54-ac9d3e73018a"
>
<Comment>If I do not know the system version yet, I have to trust the MessageIn structure to determine whether I need to apply translation or not.</Comment>
<PreConditions>
<PreCondition
 Guid="b17662e3-7625-48be-b237-198182868000"
>aRBC.SessionManagementData.SystemVersion.DataState == Default.DataStateEnum.Unknown</PreCondition><PreCondition
 Guid="a9dc5204-4aac-4b4b-9c4b-b907f62d7afc"
>Available ( aRBC.Data.MessageIn.SystemVersion2 )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Incompatible system version_V2 container"
 Guid="7e6ad71e-b0bd-4376-adcc-eff6f5093fa9"
>
<Comment>While attempting to establish a communication session, if the received system version is unknown to the system, one should allow 
the exchange of a few versionless messages before ending the connection.</Comment>
<PreConditions>
<PreCondition
 Guid="f4fa0135-7387-49e7-b354-89c0f4c0c521"
>aRBC.SessionManagementData.SystemVersion.DataState == Default.DataStateEnum.Valid</PreCondition><PreCondition
 Guid="0dc1cefe-c9ff-4894-93d0-d3385c6a49c5"
>aRBC.SessionManagementData.SystemVersion.Value == VersionManagement.SystemVersionEnum.Unknown</PreCondition><PreCondition
 Guid="733906ba-ac03-4290-976e-a189554d189c"
>aRBC.ConnectionState in[EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connecting,
EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connected.InitialState,
EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Terminating]</PreCondition><PreCondition
 Guid="9c72040e-2492-4cda-bebb-0d728086de1d"
>Available ( aRBC.Data.MessageIn.SystemVersion2 )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e83e38ca-21ae-4bb8-b7b0-3f604430e719"
>
<Expression>False</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="120"
 Y="80"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="HandleAcknowledgementOfTrainData"
 Guid="b9c4dda4-49f5-4e3c-a939-d4fb62345afc"
>
<Comment>Handles acknowledgement of Train Data.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.ACKNOWLEDGEMENT_OF_TRAIN_DATA.Message"
 Name="aMessage"
 Guid="c30efb3b-3805-400d-b6f3-db7feb68d8c7"
>
</Parameter></Parameters>
</Procedure><Procedure
 X="120"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleCommonPackets"
 Guid="267eb360-7542-46af-9267-a8a6f93e5227"
>
<ReqRef
 Id="4f1c87c4-e4ca-4713-8aab-10813b7b539c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6eb0a20b-ef7b-40ba-a230-8a2e905ce544"
>
</ReqRef><ReqRef
 Id="34124e11-dd20-40b4-8914-44b6b7397ff1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a71ac132-e540-4096-b373-cd291488e77b"
>
</ReqRef><ReqRef
 Id="4dea631e-f3ef-4f67-8232-6d867ebc7c34"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f86f1f1-7ce6-4373-86d9-cc83bce123e4"
>
</ReqRef><ReqRef
 Id="17ca4691-52af-4571-83b8-d4e345bcc557"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="06805ccb-d5d2-4c46-a67a-b35f59a88410"
>
</ReqRef><ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5988b45d-f09b-4508-a009-0fadfe105c23"
>
</ReqRef><ReqRef
 Id="ee60d01b-a74d-40b9-88b2-c24f3198e572"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6dcd5652-6ac9-42d7-bafe-9d0887d96dee"
>
</ReqRef><ReqRef
 Id="762a9a50-d079-460f-80fd-c72d91c43331"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="649146d3-75f5-4542-aa75-ff1f09f2286e"
>
</ReqRef><Comment>Handles reception of common packets as described in Subset-026 Paragraph 8.4.4.4.1.1.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.COMMON_PACKETS_COL"
 Name="Packets"
 Guid="bda35355-3c76-4016-a9da-f08035e0829f"
>
</Parameter><Parameter
 Type="MessageTypes.Time"
 Name="Time"
 Guid="3c06eb6f-b270-4cdc-ba27-ac3485ff984f"
>
</Parameter><Parameter
 Type="Messages.NID_LRBG"
 Name="NID_LRBG"
 Guid="ea038611-4249-4e60-9719-4d3ec48059bb"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="National Values available"
 Guid="5543b660-a79f-413a-9bba-34df94308f17"
>
<ReqRef
 Id="da594ef9-d8e9-4553-af3e-77f9102ec171"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b9e0182c-f86c-4f2c-bda7-80ba35ce6df6"
>
</ReqRef><ReqRef
 Id="967fe971-b137-4079-b900-5f6c1f5f25ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="82aa2c03-2b25-41e2-9f3d-8867cad45b7c"
>
</ReqRef><Comment>Handles reception of track condition change of traction system.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="National Values available"
 Guid="8990dfe8-2e42-44fd-a3d5-813abd4e5244"
>
<PreConditions>
<PreCondition
 Guid="e5c45e5b-15af-4382-a588-2852a16aee30"
>THERE_IS X IN Packets | (
  Available ( X.NATIONAL_VALUES )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.NATIONAL_VALUES.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="b0b21a56-1bd6-4127-b26a-19c46854742a"
>Kernel.AcceptInformation.NationalValues( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="05a22110-495a-43bc-9ff6-c21ba759a0a9"
>Kernel.NationalValues.NationalValuesReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.NATIONAL_VALUES) ).NATIONAL_VALUES,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition Change of traction system available"
 Guid="ef60e9d2-c626-4db2-9bfc-e601beb09ca4"
>
<ReqRef
 Id="2559c745-3a6f-444a-b3bd-fb143a2a1fc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fc39bff4-9b4e-4e50-b42b-c7602af7ce5e"
>
</ReqRef><ReqRef
 Id="9221690b-b0bc-4a5c-9307-9de49243cfef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93bf4a4e-05e3-43d9-a2bf-d9e4e2738aa2"
>
</ReqRef><Comment>Handles reception of track condition change of traction system.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Track Condition Change of traction system available"
 Guid="0bd4ae3e-c763-487c-8670-1e73fbafd03f"
>
<PreConditions>
<PreCondition
 Guid="70720265-0006-44bd-b246-632ce82f120e"
>THERE_IS X IN Packets | (
  Available ( X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="6ae1cd05-1291-4789-8ae3-8191d4ef694f"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="155bc56d-6739-4e94-a9d6-8092c69923fa"
>Kernel.TrackDescription.TrackConditions.TractionSystems.HandleTractionSystemProfile (
    Packet =&gt; (FIRST X IN Packets | Available(X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM) ).TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="974ca5a2-0f52-42a3-bf3d-a560d7f19881"
>
<ReqRef
 Id="3b292c0a-1360-49a7-9047-9707757f6e7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6787f2d9-3552-4bd4-a354-cbbb400482e4"
>
</ReqRef><ReqRef
 Id="526da681-fc2c-4e56-908e-7d41f5632d7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6afff11-11cb-4174-b45a-7021b3f3e9c8"
>
</ReqRef><Comment>Handles reception of track condition change of allowed current consumption.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="f0870cdd-3869-47f0-8573-3c6a3afe22f1"
>
<PreConditions>
<PreCondition
 Guid="9b00d3dc-b8f6-4c51-98e5-b7c4ab352160"
>THERE_IS X IN Packets | (
  Available ( X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="6e85b297-e47e-4d2a-bffc-a895b0aae354"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="18296c11-281d-4b50-8153-6965da91ed47"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.HandleCCTrackConditionProfile (
    Packet =&gt; (FIRST X IN Packets | Available(X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION) ).TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Axle Load Speed Profile available"
 Guid="621adf35-bc20-4f64-b048-4277c918084a"
>
<ReqRef
 Id="a3345820-31df-4b78-835f-d02b8d42d3bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="08148ba8-00fe-4e5e-9090-0506ed1cc405"
>
</ReqRef><ReqRef
 Id="9e4cc30b-7c23-4202-aa4b-87839eea29a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9b2294c-13fd-4890-bfba-edbae0200f8d"
>
</ReqRef><Comment>Handles reception of axle load speed profile.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Axle Load Speed Profile available"
 Guid="1e7f5146-366a-46e9-8d04-d83d6c9d4170"
>
<PreConditions>
<PreCondition
 Guid="d97abedd-8a53-49a6-9359-0ff9d8414ae4"
>THERE_IS X IN Packets | (
  Available ( X.AXLE_LOAD_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.AXLE_LOAD_SPEED_PROFILE.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="f85a9ee5-579c-460a-b7b4-0d29067fe14f"
>Kernel.AcceptInformation.AxleLoadSpeedProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cf32b68a-6154-41af-94dc-9f198d2b7632"
>Kernel.TrackDescription.AxleLoad.AxleLoadProfileReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.AXLE_LOAD_SPEED_PROFILE) ).AXLE_LOAD_SPEED_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="302f7149-c2a0-49f1-9f23-322c2c6c0c60"
>
<ReqRef
 Id="3c872475-fbad-4a03-b13a-a6fa51c6a722"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ccfb1c6-6059-4fbd-947b-38ea5fda1b55"
>
</ReqRef><ReqRef
 Id="6b26f38c-d98d-4eee-a314-ae6b48256d36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="861b319b-386f-43db-996a-d7bbfd230c2f"
>
</ReqRef><Comment>Handles reception of track condition change of traction system.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level Transition Order available"
 Guid="5dd54e4f-b2f6-4729-a112-ec5200f78de7"
>
<PreConditions>
<PreCondition
 Guid="0623431c-638b-4151-a9ac-655efdd310ee"
>THERE_IS X IN Packets | (
  Available ( X.LEVEL_TRANSITION_ORDER )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="5e46145d-ac37-4367-8776-653aff822930"
>Kernel.AcceptInformation.LevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="403d7454-90a9-4ecf-917a-a3e89cfbff09"
>Kernel.LevelTransition.LTOReceived(
    Packet =&gt; (FIRST X IN Packets | Available(X.LEVEL_TRANSITION_ORDER) ).LEVEL_TRANSITION_ORDER,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Session Management available"
 Guid="617c0d85-e001-4ba2-9a2e-7ed40b53d7d6"
>
<ReqRef
 Id="18318a83-420a-41a7-b3eb-e4e67f1e3f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d1a78d9c-b705-485a-827e-46159c8a4b78"
>
</ReqRef><ReqRef
 Id="ff45f18e-7a7b-412e-8847-569b6605d632"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f2a0132-4a38-4a8a-9ee9-47bc7b5a6e6f"
>
</ReqRef><Comment>Handles reception of session management.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session Management available"
 Guid="1535de84-4fd0-4408-a56b-3b0d008655c4"
>
<PreConditions>
<PreCondition
 Guid="baf54c0d-8b2c-45d1-9b37-f44d09c72b31"
>THERE_IS X IN Packets | Available ( X.SESSION_MANAGEMENT )</PreCondition><PreCondition
 Guid="0ac2ca39-5359-4c0e-9c5d-570a3829a1ac"
>Kernel.AcceptInformation.SessionManagement( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="864aed8d-656b-44ab-97d1-b019cba9aeef"
>RBCConnection.Contact.TracksideOrderedSessionReceived ( Packet =&gt; (FIRST X IN Packets | Available(X.SESSION_MANAGEMENT) ).SESSION_MANAGEMENT )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Radio Network registration available"
 Guid="ed7d1e6a-a0a3-49c9-8fd4-be819eba3a56"
>
<ReqRef
 Id="031d12f5-b1df-4716-9eda-a3495861e160"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e91e2170-ac05-410c-94da-1aaa6ead98d4"
>
</ReqRef><ReqRef
 Id="da86aaf7-6b30-4a15-b59d-37e639bcdfc8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1df085a5-8517-41ca-9675-668ec9da5395"
>
</ReqRef><ReqRef
 Id="6476afb5-0645-4298-926a-e67147752ddf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a70cd81c-1509-4100-9065-62c294fe5476"
>
</ReqRef><Comment>Handles reception of radio network registration orders.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Radio Network registration available"
 Guid="e4a85e4e-5316-41c0-ab53-2952ce6faafd"
>
<PreConditions>
<PreCondition
 Guid="0832c897-e755-49da-b609-cfa0c2859a59"
>THERE_IS X IN Packets | Available ( X.RADIO_NETWORK_REGISTRATION )</PreCondition><PreCondition
 Guid="6fe68524-02b4-426b-8893-50f37ef646f8"
>Kernel.AcceptInformation.RadioNetworkRegistration( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f7218da0-0535-4404-9004-e803bf961c91"
>Terminal.RadioNetworkRegistrationReceived ( aPacket =&gt; (FIRST X IN Packets | Available(X.RADIO_NETWORK_REGISTRATION) ).RADIO_NETWORK_REGISTRATION )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Permitted Braking Distance Information available"
 Guid="43242704-87b6-4ec1-91bd-6109fd47ece5"
>
<ReqRef
 Id="1b02a3e8-5313-4a1e-8209-c203e96ab40f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32ab7057-11e9-4f91-8fe5-3fbbbf7d9df5"
>
</ReqRef><ReqRef
 Id="faca2edb-7220-4d55-bebe-f367d8f8d94a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae9883dd-6acd-464e-a025-e295bdd271cf"
>
</ReqRef><Comment>Handles reception of permitted braking distance information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Permitted Braking Distance Information available"
 Guid="2b0c5145-029b-4645-b762-7c08185c6d73"
>
<PreConditions>
<PreCondition
 Guid="9700ca83-0e34-4954-8d4b-e12a298aaee8"
>THERE_IS X IN Packets | (
  Available ( X.PERMITTED_BRAKING_DISTANCE_INFORMATION )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.PERMITTED_BRAKING_DISTANCE_INFORMATION.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="dad1a6c8-1e28-4d24-895f-31f31a3e90c7"
>Kernel.AcceptInformation.PermittedBrakingDistanceInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a031e3c7-aff6-4bed-bb49-72084de463ed"
>Kernel.TrackDescription.PermittedBrakingDistance.PermittedBrakingDistanceProfileReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.PERMITTED_BRAKING_DISTANCE_INFORMATION) ).PERMITTED_BRAKING_DISTANCE_INFORMATION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Movement Authority Request Parameters available"
 Guid="d246069e-15d2-49e9-b02f-d74d788b9fd2"
>
<ReqRef
 Id="0207a978-352d-4243-81cd-c58fb8228dc2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d8034b0-46d6-45ae-8ba2-96929eae8835"
>
</ReqRef><ReqRef
 Id="3a8b8f9a-8f3d-48b3-a57f-4955397ec4cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bb70bb4e-e09c-48ca-958a-1d005561a0fa"
>
</ReqRef><ReqRef
 Id="b67273e4-3130-454e-8325-67246db078fe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8857e43a-c3d9-4f4c-a7c1-13d60371874d"
>
</ReqRef><Comment>Handles reception of the movement authority request parameters.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Movement Authority Request parameters available"
 Guid="f690f045-757e-4168-850f-58888f04d1ab"
>
<PreConditions>
<PreCondition
 Guid="fb216486-6cdc-4b68-90d3-5e7377703f26"
>THERE_IS X IN Packets | Available ( X.MOVEMENT_AUTHORITY_REQUEST_PARAMETERS )</PreCondition><PreCondition
 Guid="6ee2cc7d-c7de-45c1-b81f-3024864141d7"
>Kernel.AcceptInformation.MARequestParameters( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="abe81056-9b8c-4250-9bda-c30cafef8c82"
>Kernel.MA.MARequest.MARequestParametersReceived( Packet =&gt; (FIRST X IN Packets | Available(X.MOVEMENT_AUTHORITY_REQUEST_PARAMETERS) ).MOVEMENT_AUTHORITY_REQUEST_PARAMETERS )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Position Report Parameters available"
 Guid="935df013-36d5-46e2-8fd1-1c22e87f3dfc"
>
<ReqRef
 Id="e832ef89-d8d7-4e89-86eb-ba4c29d6d5fe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3e5938e1-3ca7-41d6-ae46-5f9bca5e096f"
>
</ReqRef><ReqRef
 Id="0536f7d3-e066-46cf-b0ad-1cbd509d2e5d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc4fb4a5-7c28-4841-9043-01cfd812fde0"
>
</ReqRef><ReqRef
 Id="45c177ff-55f5-4aec-ae11-0629e0ae14d1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3924cfe0-0721-479c-927d-1a240380b0ae"
>
</ReqRef><Comment>Handles reception of report parameters.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Position Report Parameters available"
 Guid="8f6b94f8-5ebc-4d66-9acf-ddf51ba1d957"
>
<ReqRef
 Id="8e46d1f9-ece2-43e9-9a45-e2978111a3dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68ef5d9c-449c-40de-beea-e8affff46386"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="e736f8f8-7e25-47b8-95d9-3641a99d39cb"
>THERE_IS X IN Packets | Available ( X.POSITION_REPORT_PARAMETERS )</PreCondition><PreCondition
 Guid="3b740155-0a05-456c-b4ad-b101a4df63fc"
>Kernel.AcceptInformation.PositionReportParameters( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="066e716a-07aa-4d5a-a10b-7fc517f0f0b2"
>PositionReport.UpdatePositionReportParameters(
    Packet =&gt; (FIRST X IN Packets | Available(X.POSITION_REPORT_PARAMETERS) ).POSITION_REPORT_PARAMETERS,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG( NID_LRBG ) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Inhibition of Revocable TSRs available"
 Guid="af690be3-ef6e-4ea9-8205-18f02935969f"
>
<ReqRef
 Id="2d7160e1-6d9e-4cea-8b40-4d95ae0a8098"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f384b68-104e-4fb6-902b-d3885fbd50c1"
>
</ReqRef><ReqRef
 Id="21e37f96-9722-47c7-aa9c-e34cbf92f441"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c44b4902-07be-4be3-9b6d-174d46c271c7"
>
</ReqRef><ReqRef
 Id="cad48305-bd82-4eb5-888a-002e9591ce42"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d63c839-5df6-447c-b99b-0100bf3680c3"
>
</ReqRef><Comment>Handles reception of inhibition of revocable TSRs.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Inhibition of Revocable TSRs available"
 Guid="56131adf-96b9-4baa-a67e-e37203b207b9"
>
<PreConditions>
<PreCondition
 Guid="25bdf9ab-95af-4a6b-a732-5e577ae9f7d2"
>THERE_IS X IN Packets | Available ( X.INHIBITION_OF_REVOCABLE_TSRS_FROM_BALISES_IN_L2_3 )</PreCondition><PreCondition
 Guid="469f986d-0273-4b34-9d73-fdae2eedfd13"
>Kernel.AcceptInformation.InhibitionOfRevocableTSRs( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b8f22304-7266-46ae-a07a-d84a1cdb070d"
>Kernel.TSR.InhibitionOfRevocableTSRsReceived
(
  Packet =&gt; (FIRST X IN Packets | Available(X.INHIBITION_OF_REVOCABLE_TSRS_FROM_BALISES_IN_L2_3) ).INHIBITION_OF_REVOCABLE_TSRS_FROM_BALISES_IN_L2_3
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="982b0f9b-ef83-4321-b09d-b843609ebaa5"
>
<ReqRef
 Id="37cb1c8d-6ea0-43c6-85a9-6ce724bf590e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e2192cd9-c634-45fd-9b05-705ab90717d1"
>
</ReqRef><ReqRef
 Id="2d4205fe-a62e-4306-88c0-fa8ed50b9d93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c80da99e-c445-4c1b-a9f2-159e7394e613"
>
</ReqRef><Comment>Handles reception of inhibition of revocable TSRs.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="425f719d-1058-44ae-9dd2-807e99db6873"
>
<PreConditions>
<PreCondition
 Guid="5107aa7e-9c90-44b6-843a-954fe5a1bd95"
>THERE_IS X IN Packets | (
  Available ( X.TEMPORARY_SPEED_RESTRICTION )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.TEMPORARY_SPEED_RESTRICTION.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="92bd4ee7-5990-47e2-bc6b-0447bf292554"
>Kernel.AcceptInformation.TemporarySpeedRestriction
(
    aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC,
    aNID_TSR =&gt; (FIRST X IN Packets | Available(X.TEMPORARY_SPEED_RESTRICTION) ).TEMPORARY_SPEED_RESTRICTION.NID_TSR
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="05b58642-c75d-4adf-af23-b75c499d08ca"
>Kernel.TSR.TemporarySpeedRestrictionsProfileReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.TEMPORARY_SPEED_RESTRICTION) ).TEMPORARY_SPEED_RESTRICTION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="6cd36c2d-2895-401d-bc81-10615307f39f"
>
<ReqRef
 Id="fcf6574b-fd16-4246-81d9-07cda44db502"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4013999b-a95f-4c71-a673-b8f0c1aef10f"
>
</ReqRef><ReqRef
 Id="a12cbea0-bfe5-4f24-ae74-56261d93466b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2a6fe61-9166-4378-a6eb-edeb5e7add0a"
>
</ReqRef><Comment>Handles reception of inhibition of revocable TSRs.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="74ab415e-fc4c-4d58-8563-61e381e1b5e4"
>
<PreConditions>
<PreCondition
 Guid="ad83b3e8-693e-4d3d-9a21-007f0dee043c"
>THERE_IS X IN Packets | Available ( X.TEMPORARY_SPEED_RESTRICTION_REVOCATION )</PreCondition><PreCondition
 Guid="b68c35bc-115b-42ca-9776-4c3354bdd02f"
>Kernel.AcceptInformation.TemporarySpeedRestrictionRevocation ( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e014e166-992c-457a-9206-c0a815239a4b"
>Kernel.TSR.TemporarySpeedRestrictionRevocationReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.TEMPORARY_SPEED_RESTRICTION_REVOCATION) ).TEMPORARY_SPEED_RESTRICTION_REVOCATION
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition available"
 Guid="f65aaae4-4084-4485-b4a4-6f2e0de9dec7"
>
<ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eea45698-fa70-4b1f-86e8-65dc5ee375e7"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="101bcaf4-dcec-4cfd-9a2b-cf5b8d1a96fd"
>
</ReqRef><Comment>Handles reception of track condition change of traction system.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Track Condition available"
 Guid="ac43c813-98ab-484f-a349-7869fabac7e2"
>
<PreConditions>
<PreCondition
 Guid="a7fc3166-13e1-4edc-81d8-755dd4b7d3db"
>THERE_IS X IN Packets | (
  Available ( X.TRACK_CONDITION )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.TRACK_CONDITION.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="cb563604-5ce4-4c22-a86d-671b4ef2c5fd"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases ( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e6e8340d-4c48-4759-8a2e-496e884cee9c"
>Kernel.TrackDescription.TrackConditions.General.TrackConditionProfileReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.TRACK_CONDITION) ).TRACK_CONDITION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition Station Platforms available"
 Guid="f8dc9bf5-8f68-449f-8840-106eeb6b3f17"
>
<ReqRef
 Id="47c59e98-996c-4daa-84b7-bda20f4e45ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a01eef8c-019f-42b5-bfb7-77b84cd255d3"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13fbb525-221c-42e8-909d-b803d9e33ca7"
>
</ReqRef><Comment>Handles reception of track condition change of traction system.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Track Condition Station Platforms available"
 Guid="822c6587-431c-4aed-b6fb-92a297f20729"
>
<PreConditions>
<PreCondition
 Guid="4e138a63-72a6-4e2a-a8b1-45407a516372"
>THERE_IS X IN Packets | (
  Available ( X.TRACK_CONDITION_STATION_PLATFORMS )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.TRACK_CONDITION_STATION_PLATFORMS.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="823dcdf8-84e6-4b5f-9980-2f1bf623c417"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases ( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5f9d9e00-9e1a-48a5-9383-577cc3c95da6"
>Kernel.TrackDescription.TrackConditions.StationPlatform.SPTrackConditionProfileReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.TRACK_CONDITION_STATION_PLATFORMS) ).TRACK_CONDITION_STATION_PLATFORMS,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Route Suitability Data available"
 Guid="4aa1a01f-4254-4958-b0e8-99b5cb30cc20"
>
<ReqRef
 Id="3eae43ab-6f26-4908-9360-5a8ce0bec069"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="052af9bd-f74a-4e5a-b527-5d0041e154b5"
>
</ReqRef><ReqRef
 Id="655cd82d-364d-40cf-9540-62e1d8292f94"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b19d83b-5ecd-4868-bfd9-44b251c125bc"
>
</ReqRef><ReqRef
 Id="21443e68-000d-4c84-b4f4-17c5373d0a4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="062aec9c-dd57-4b7d-a94c-5238f37b366c"
>
</ReqRef><Comment>Handles reception of the route suitability data.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Route Suitability Data available"
 Guid="c0c990ba-89d9-47e6-b458-c64d95c8112c"
>
<PreConditions>
<PreCondition
 Guid="446284a7-38bb-4883-9c06-40ea15d59a53"
>THERE_IS X IN Packets | (
  Available ( X.ROUTE_SUITABILITY_DATA )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.ROUTE_SUITABILITY_DATA.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="2568fb4b-90f4-41bf-8a08-cf33c11f48c6"
>Kernel.AcceptInformation.RouteSuitabilityData( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1835b379-689c-41b7-82bd-bafdaa9df3c9"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfileReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.ROUTE_SUITABILITY_DATA) ).ROUTE_SUITABILITY_DATA,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Adhesion factor available"
 Guid="63447451-77ac-451a-8496-dc6f331171c6"
>
<ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="81aaa338-0e37-43a9-b7eb-391ef5cb8513"
>
</ReqRef><ReqRef
 Id="7ee3b877-7ff2-4541-aa86-6af70c0cb7c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d0db9b95-50bf-4851-b4ce-4fd424c56e2c"
>
</ReqRef><ReqRef
 Id="903134a0-7b20-4b2e-ab42-30cae27fea81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="54993d3a-2be5-4f19-921b-237cf7d7ad21"
>
</ReqRef><Comment>Handles reception of adhesion factor.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Adhesion factor available"
 Guid="c3c20079-c231-44d5-b5da-a15e0024e64f"
>
<PreConditions>
<PreCondition
 Guid="e339049f-b9f2-4ae1-be44-ab5320f968c6"
>THERE_IS X IN Packets | (
  Available ( X.ADHESION_FACTOR )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.ADHESION_FACTOR.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="9a957fa4-c308-4112-a13d-b66f4cc737e9"
>Kernel.AcceptInformation.AdhesionFactor ( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ea06da48-3ec0-46a1-813d-7a319085cb21"
>Kernel.TrackDescription.AdhesionFactors.AdhesionFactorReceived (
    aPacket =&gt; (FIRST X IN Packets | Available(X.ADHESION_FACTOR) ).ADHESION_FACTOR,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Plain text message available"
 Guid="f949498c-4264-473b-8fe3-dded70bc46b4"
>
<ReqRef
 Id="2b4cc227-208a-49c5-8f4c-a566e7eac74b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e2fc9c31-ae52-4b08-818d-26357ef38112"
>
</ReqRef><ReqRef
 Id="cc1f66d4-6eec-4fe4-a302-2e6287ccb3f0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="559e2427-e871-47d2-8791-f91c4e27f444"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a83fa9b9-3bac-4c51-9cb7-8e12c970bc19"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebcf4bce-e4b4-48a9-8d9b-cb7367451cde"
>
</ReqRef><Comment>Handles reception of session management.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Plain Text Message available"
 Guid="ca5611a1-ba25-4121-b582-8c676a1386d5"
>
<PreConditions>
<PreCondition
 Guid="ef0ec402-3f53-463f-9bbb-12ab9227b417"
>THERE_IS X IN Packets | (
  Available ( X.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="9eb2347d-6895-4ceb-9e5a-53d2c784592e"
>Kernel.AcceptInformation.PlainTextInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a5309523-8d2a-46aa-b43f-3be0cc08944c"
>Kernel.TextMessages.PlainTextMessageReceived(
    aPacket =&gt; (FIRST X IN Packets | Available(X.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES) ).PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Fixed text message available"
 Guid="662b0bb6-4120-49dc-885b-a473919c1a4f"
>
<ReqRef
 Id="52943307-1c06-4cc3-94d3-f778ce8dd8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05272a44-fcd0-4533-894a-9e77a272691a"
>
</ReqRef><ReqRef
 Id="85fef952-5e74-4514-b7d4-1c70f23587c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="857f23b6-8e5e-4b9e-9d3c-c6650827be74"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4253d583-bf9c-496c-ad1a-d5f6a2865092"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cf21aa5e-393c-445f-aaa5-ada915bad6f3"
>
</ReqRef><Comment>Handles reception of session management.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fixed text message available"
 Guid="5ae23c00-498d-4bca-99ee-98955a460120"
>
<PreConditions>
<PreCondition
 Guid="d65e932d-c9e3-4559-80fd-ad109096eed3"
>THERE_IS X IN Packets | (
  Available ( X.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="cf2bad88-ee55-4714-8ed3-49c2294e9efa"
>Kernel.AcceptInformation.FixedTextInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ee67f95f-e9e9-4457-b040-45460b5de679"
>Kernel.TextMessages.FixedTextMessageReceived(
    aPacket =&gt; (FIRST X IN Packets | Available(X.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES) ).PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Geographical Position Information available"
 Guid="c6392e10-ecba-405d-a76b-2510ba3260e4"
>
<ReqRef
 Id="bfb92914-1319-4a13-bb8f-c623e5f7e53a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="494e6f3a-b888-4d5e-87b9-b170d26f9c28"
>
</ReqRef><ReqRef
 Id="16e1df6b-c27b-4c82-8dcf-37b394753241"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed4a1347-61d7-4482-b12e-d703dc1d1f39"
>
</ReqRef><ReqRef
 Id="3f471e44-8594-4731-ba67-b7173dc06106"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3df9cc5-d087-45ea-8563-efa386b40fa4"
>
</ReqRef><Comment>Handles reception of geographical position information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Geographical Position Information available"
 Guid="61fbd0fd-4497-4000-98e8-49e1aeafeb65"
>
<PreConditions>
<PreCondition
 Guid="7e563bd6-c9f0-489a-a42f-b6e64a89d11b"
>THERE_IS X IN Packets | Available ( X.GEOGRAPHICAL_POSITION_INFORMATION )</PreCondition><PreCondition
 Guid="3f4bc60c-d534-4892-84c8-a8c4f1db6a84"
>Kernel.AcceptInformation.GeographicalPosition( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="93c1c20e-ed7d-474e-aa0b-b56128d38ef9"
>Kernel.GeographicalPosition.GeographicalPositionReceived( aPacket=&gt; (FIRST X IN Packets | Available(X.GEOGRAPHICAL_POSITION_INFORMATION) ).GEOGRAPHICAL_POSITION_INFORMATION )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level Crossing information available"
 Guid="4b63cc57-7d42-4bb0-9194-6e6a200dd02e"
>
<ReqRef
 Id="8a060a51-4b93-4eb7-aa9b-5b5c264b6820"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e7b8b268-2da0-45e9-b5f9-ed733f7f1bdb"
>
</ReqRef><ReqRef
 Id="4744429f-fce3-4833-817a-c0cd74ffcd7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44ae4d70-e206-406f-b614-ad97efd99e6b"
>
</ReqRef><Comment>Handles reception of adhesion factor.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level Crossing information available"
 Guid="328e1395-b91e-4ff8-9296-ff357b4876ca"
>
<PreConditions>
<PreCondition
 Guid="d60b11ed-f8c0-4335-885b-b5c545fb92cd"
>THERE_IS X IN Packets | (
  Available ( X.LEVEL_CROSSING_INFORMATION )
    AND  
  Messages.ConsiderRBCPacket(
    Q_DIR =&gt; X.LEVEL_CROSSING_INFORMATION.Q_DIR,
    NID_LRBG =&gt; NID_LRBG
  )
)</PreCondition><PreCondition
 Guid="cfb4b7a4-be2b-4314-828e-318245d38bc5"
>Kernel.AcceptInformation.LevelCrossingInformation ( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4bf9a490-5b1d-4d14-aca2-9fa5a6d9141c"
>Kernel.LX.LXReceived (
    Packet =&gt; (FIRST X IN Packets | Available(X.LEVEL_CROSSING_INFORMATION) ).LEVEL_CROSSING_INFORMATION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="RBC Transition Order available"
 Guid="bbd085cd-6114-4a8e-9372-7befdce23b2b"
>
<ReqRef
 Id="277de94f-c4cd-4612-97ca-ead1fdd29073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7371c655-70ff-4786-8af1-47e54b325fbc"
>
</ReqRef><ReqRef
 Id="fb5cdb2c-826a-4be7-babf-d16c11e9720c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c743c8f0-396e-4f62-90ff-46a86510ce47"
>
</ReqRef><ReqRef
 Id="813504ec-6af8-4d96-be72-5e3b6b595a0a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dcaed946-869b-4bb8-b26b-5cefaa97d851"
>
</ReqRef><ReqRef
 Id="f69899f9-70f7-4f0e-bc95-d9d97964dc81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6687edaa-37ef-40e7-abd9-d56afc2e3a64"
>
</ReqRef><Comment>Handles reception of RBC transition orders.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="RBC Transition Order available"
 Guid="53418cea-2cd8-4707-94b4-ccdc60514170"
>
<PreConditions>
<PreCondition
 Guid="e93e740d-2bf8-41d0-ab39-9fb5c7ea7fe3"
>THERE_IS X IN Packets | Available ( X.RBC_TRANSITION_ORDER )</PreCondition><PreCondition
 Guid="d2e9e812-4ba1-4643-a5e3-4fc44162c97b"
>Kernel.AcceptInformation.RBCTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9465d11b-3c0d-4be2-a91e-883e806e5d57"
>RBCConnection.RBCHandover.RBCTransitionOrderReceived ( aPacket =&gt; (FIRST X IN Packets | Available(X.RBC_TRANSITION_ORDER) ).RBC_TRANSITION_ORDER, aDistanceFromRef =&gt; 0.0 )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="d991fd29-3448-414c-b173-d33dc950f456"
>
<ReqRef
 Id="690dfc40-042d-4c8d-9e60-17b85d455fd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="695cbd0a-2d60-4273-9207-4f12b4517f07"
>
</ReqRef><ReqRef
 Id="f08e576d-1c61-4c2b-b742-29f729a5728f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8a0a0e4a-59f6-4ba6-8a44-24afc8156a17"
>
</ReqRef><ReqRef
 Id="f32ad7de-67d9-4075-bb38-75a13996ad98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b472d4e9-95b2-4baf-9db7-ee6c4fc212ff"
>
</ReqRef><ReqRef
 Id="c93e250c-fc42-406f-9706-6ec7488b8982"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="089b9fba-2bb7-463a-8dda-057dea445026"
>
</ReqRef><ReqRef
 Id="571b7bcf-500a-4e43-8f4b-dfb64cfd4845"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20354611-538d-4cae-8923-aae139a579ad"
>
</ReqRef><ReqRef
 Id="796923a0-8b8a-4e7b-8af3-43f3398b27dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe6c9879-e8c2-4819-bb52-efe9da28bb8a"
>
</ReqRef><ReqRef
 Id="54c20a27-60da-4df1-80ba-7ba841d7258f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c7f8ea16-8cd0-49a5-8d26-a4e92bdbf156"
>
</ReqRef><ReqRef
 Id="46356051-e464-4ceb-b54c-41ef8dc6017f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3dcb0ef9-9822-42d9-91e2-cf939b32bd1e"
>
</ReqRef><ReqRef
 Id="f3aec789-8e42-4041-befb-bf3d53519577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d9e6e46-d36c-48bf-bcc9-92cd34185d45"
>
</ReqRef><Comment>Handles reception of reversing area information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="8a00d353-62fa-4dcf-986c-2ccf3f3da7bf"
>
<PreConditions>
<PreCondition
 Guid="2060598f-0aa3-4dff-9cfc-d591ff131003"
>Messages.RevAreaPacketAvailable(
    aPacket =&gt; (FIRST X IN Packets | Available(X.REVERSING_AREA_INFORMATION) ).REVERSING_AREA_INFORMATION,
    NID_LRBG =&gt; NID_LRBG )

  OR  

Messages.RevSupPacketAvailable(
    aPacket =&gt; (FIRST X IN Packets | Available(X.REVERSING_SUPERVISION_INFORMATION) ).REVERSING_SUPERVISION_INFORMATION,
    NID_LRBG =&gt; NID_LRBG )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="80535626-724a-4983-90b1-d0fe24394982"
>Kernel.TrackDescription.ReversingArea.ReversingAreaOrSupervisionInformationReceived
(
    RvAreaPacket =&gt; Messages.ProvideRevAreaPacketToHandle(
        aPacket =&gt; (FIRST X IN Packets | Available(X.REVERSING_AREA_INFORMATION) ).REVERSING_AREA_INFORMATION,
        NID_LRBG =&gt; NID_LRBG ),
    RvSupPacket =&gt; Messages.ProvideRevSupPacketToHandle(
        aPacket =&gt; (FIRST X IN Packets | Available(X.REVERSING_SUPERVISION_INFORMATION) ).REVERSING_SUPERVISION_INFORMATION
        NID_LRBG =&gt; NID_LRBG ),
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(NID_LRBG) 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="LSSMA display toggle order available"
 Guid="cf3b6a56-0f48-4763-a9f3-26f5e0f6b0db"
>
<ReqRef
 Id="5ab8592b-d34d-449a-b9b4-a49404c758ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09fa92ee-7cd7-489c-9efc-7a8080c44a86"
>
</ReqRef><ReqRef
 Id="569567b3-3681-4d80-9bed-9a1376f4cd6f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be72b01c-5106-49a0-8a60-afd1ebd352bc"
>
</ReqRef><ReqRef
 Id="a6eade55-4b84-45f2-a021-fd589f3d1760"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a03429b2-9afe-492c-80cc-5f63197dd650"
>
</ReqRef><ReqRef
 Id="6eeca2b4-7feb-46e5-9918-59197fd2bd89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3839e80c-dbe7-49f0-8dad-7573afcffd6e"
>
</ReqRef><Comment>Handles reception of an LSSMA diplay toggle order.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="LSSMA display toggle order received"
 Guid="9a4a5819-03c2-4b8c-8d54-3e3ae43d3089"
>
<PreConditions>
<PreCondition
 Guid="20b8a664-9aa0-43cf-806f-77575b6c9d8b"
>THERE_IS X IN Packets | Available (X.LSSMA_DISPLAY_TOGGLE_ORDER)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="de78be94-0ff2-487f-b42a-b5d3406df13c"
>Kernel.Modes.LimitedSupervision.LSSMAToggleReceived(
    Packet =&gt;
(FIRST X IN Packets | Available(X.LSSMA_DISPLAY_TOGGLE_ORDER) ).LSSMA_DISPLAY_TOGGLE_ORDER,
    Timestamp =&gt; AddToDate
    (
        StartDate =&gt; Kernel.DateAndTime.StartDate,
        Increment =&gt; MessageTypes.TimeResolution(Time)
    )
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="10"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ProcessIncomingMessages"
 Guid="b9ea4dd2-c1d7-457b-b33c-62e49af0c65b"
>
<ReqRef
 Id="1800bf83-b2c2-4d37-8406-ca0c31b30f0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a606e07e-a10b-4b4e-8603-2f2e83dfbe50"
>
</ReqRef><ReqRef
 Id="28c19fbc-19ff-4bc3-ada2-6a631220fc26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f30771a6-bf8d-43a2-807f-d2f5707e516c"
>
</ReqRef><ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b8db74b-36ab-465e-afb5-17914182c6c6"
>
</ReqRef><ReqRef
 Id="ee60d01b-a74d-40b9-88b2-c24f3198e572"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cf1b65d0-79fd-45a4-bb33-2c5683f5d14e"
>
</ReqRef><ReqRef
 Id="762a9a50-d079-460f-80fd-c72d91c43331"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c0077fd-9971-4836-af4c-c0520c4e5bf7"
>
</ReqRef><Comment>This procedure is called for each message received from the Euroradio. It stores the received information into the internal variables.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.Message"
 Name="aMessage"
 Guid="72113823-2b1b-43bb-b457-15bf4f1f449d"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Linking information available"
 Guid="b523ec16-e78f-443e-bc71-c86ea98fb8ce"
>
<ReqRef
 Id="4a52b034-1229-440d-b33c-bd9b65c26dab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e11cda1a-2dd3-454b-b124-a3b78632dfdd"
>
</ReqRef><ReqRef
 Id="0d145136-9c1d-4c04-bd9a-5987931ed765"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f4d361e3-1cfe-4bbd-94d4-b1a7c56fc916"
>
</ReqRef><ReqRef
 Id="4ae178ee-6db4-474c-aa88-d5f8bd8ea1d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c41ff14e-78b1-4f53-9cc0-a7703f6ce438"
>
</ReqRef><Comment>Handles a new linking information before any other information, because the other informations may depend in it.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linking in General Message"
 Guid="e2260be2-664f-40d6-af8e-f96ae05315b3"
>
<Comment>Checks if Linking information is received in General message.</Comment>
<PreConditions>
<PreCondition
 Guid="6f88e63f-f761-40ce-a6fc-0944953d0bfc"
>Available(aMessage.GENERAL_MESSAGE)</PreCondition><PreCondition
 Guid="893e8cfd-3548-43a9-9549-e9ed8cd499e8"
>Kernel.AcceptInformation.Linking( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ecfaf44c-80b0-4fa6-b1f1-d6dfaa991828"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infilledLinking parameter.</Comment>
APPLY 
  BTM.Linking.LinkingProfileReceived(
    Packet =&gt; X.LINKING,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.GENERAL_MESSAGE.NID_LRBG) ,
    infilledLinking =&gt; False)
ON
  aMessage.GENERAL_MESSAGE.Sequence1 | (
    Available(X.LINKING)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LINKING.Q_DIR,
        NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG )
  )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking in Movement Authority"
 Guid="afa3411a-f36e-4f60-862e-30c6e8452293"
>
<Comment>Checks if Linking information is received in Movement Authority message.</Comment>
<PreConditions>
<PreCondition
 Guid="52493a22-004e-4d87-881f-b63899908efd"
>Available(aMessage.MOVEMENT_AUTHORITY)</PreCondition><PreCondition
 Guid="91260cde-0a87-47bc-8abe-ba8c921b1c32"
>Kernel.AcceptInformation.Linking( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4a346f7c-0664-47a4-be1f-7144c1c432e6"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infilledLinking parameter.</Comment>
APPLY 
  BTM.Linking.LinkingProfileReceived(
    Packet =&gt; X.LINKING,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MOVEMENT_AUTHORITY.NID_LRBG),
    infilledLinking =&gt; False )
ON 
  aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
    Available(X.LINKING)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LINKING.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
  )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking in MA with Shifted Location Reference"
 Guid="b46d7236-ec5e-4a0f-9553-f5bf804d1e52"
>
<Comment>Checks if Linking information is received in MA with shifted location message.</Comment>
<PreConditions>
<PreCondition
 Guid="12fd749c-c808-4f2d-a846-287916299175"
>Available(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE)</PreCondition><PreCondition
 Guid="68ffd3bf-4c20-4009-bb00-7e6fbeef4dd1"
>Kernel.AcceptInformation.Linking( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="92d85109-6e4e-40ca-af96-c6bbcc9c9133"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infilledLinking parameter.</Comment>
APPLY 
  BTM.Linking.LinkingProfileReceived(
    Packet =&gt; X.LINKING,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG),
    infilledLinking =&gt; False )
ON 
  aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
    Available(X.LINKING)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LINKING.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG )
  )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking in Infill MA"
 Guid="e3d5d867-b2c3-4011-ad85-da2bae9ab5b4"
>
<Comment>Checks if Linking information is received in infill MA Message.</Comment>
<PreConditions>
<PreCondition
 Guid="e25ae6f2-0a71-4924-bdc9-bb45782c8449"
>Available(aMessage.INFILL_MA)</PreCondition><PreCondition
 Guid="9c5ad4e1-9f90-4943-85cc-6a88fd0e3453"
>Kernel.AcceptInformation.Linking( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="103d17ab-78e1-499a-a5f3-2ae782ee0b76"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infilledLinking parameter.</Comment>
APPLY 
  BTM.Linking.LinkingProfileReceived(
    Packet =&gt; X.LINKING,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG),
    infilledLinking =&gt; False )
ON 
  aMessage.INFILL_MA.Sequence1 | (
    Available(X.LINKING)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LINKING.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG )
  )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="2de45eff-8689-46b3-81c8-51492ec1fe26"
>
<ReqRef
 Id="b5196e2e-7094-49d5-ac1b-4bcf4821fd9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c2e51ca-4751-440b-8864-b9548f1a9a9b"
>
</ReqRef><ReqRef
 Id="c858a6b4-4d06-4efa-83f0-ac640ef8c373"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cdb5e7eb-4bf0-415f-aebe-0fb335c19411"
>
</ReqRef><ReqRef
 Id="7e7c641f-fe52-42ac-9aa8-12e5c7dfd6b2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24e030fe-3725-4d26-b03a-cf76840e60b5"
>
</ReqRef><ReqRef
 Id="6b26f38c-d98d-4eee-a314-ae6b48256d36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e7317457-5f06-40d0-a649-b09c7a720ad2"
>
</ReqRef><ReqRef
 Id="3c872475-fbad-4a03-b13a-a6fa51c6a722"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f577497-1852-4b09-a497-5d7a862ae1a6"
>
</ReqRef><Comment>Handles a new level transition order before any other information, because the other informations may depend in it.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order in General Message"
 Guid="4d20447c-43e0-4db3-aeb9-5bbf7cd1a977"
>
<Comment>Checks if level transition order is received in general message.</Comment>
<PreConditions>
<PreCondition
 Guid="bb4f2ab9-a9d9-4c4b-bdc5-2ea9011cf544"
>Available(aMessage.GENERAL_MESSAGE)</PreCondition><PreCondition
 Guid="5745b878-1365-4ebe-a1f1-79141989b701"
>Kernel.AcceptInformation.LevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f500ee30-e279-4200-a5bf-7fff60a3b433"
>APPLY 
  Kernel.LevelTransition.LTOReceived(
    Packet =&gt; X.LEVEL_TRANSITION_ORDER,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.GENERAL_MESSAGE.NID_LRBG) )
ON 
  aMessage.GENERAL_MESSAGE.Sequence1 | (
    Available(X.LEVEL_TRANSITION_ORDER)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
        NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG )
  )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order in Movement Authority"
 Guid="f7a1dc51-67c4-425e-9b65-2464734eff10"
>
<Comment>Checks if level transition order is received in movement authority message.</Comment>
<PreConditions>
<PreCondition
 Guid="e387efcb-fcd8-4de7-9ccc-b0c1d68a9024"
>Available(aMessage.MOVEMENT_AUTHORITY)</PreCondition><PreCondition
 Guid="aedcc7e1-46be-4769-b733-b4f9d59550f0"
>Kernel.AcceptInformation.LevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1fec731b-b9d5-4318-a089-a21fbdc9a1a4"
>APPLY 
  Kernel.LevelTransition.LTOReceived(
    Packet =&gt; X.LEVEL_TRANSITION_ORDER,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MOVEMENT_AUTHORITY.NID_LRBG) )
ON 
  aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
    Available(X.LEVEL_TRANSITION_ORDER)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
  )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order in MA with Shifted Location Reference"
 Guid="06a9a23b-27e5-4ceb-8cab-217f2a3e348f"
>
<Comment>Checks if level transition order is received in MA with shifted location reference message.</Comment>
<PreConditions>
<PreCondition
 Guid="18604d52-578f-48d1-8e5e-fa7fdab6d166"
>Available(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE)</PreCondition><PreCondition
 Guid="a92d8bd2-7bef-4175-a80a-e0670e796c19"
>Kernel.AcceptInformation.LevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="56138b63-375e-4459-b3a4-e7d18e81eb8b"
>APPLY 
  Kernel.LevelTransition.LTOReceived(
    Packet =&gt; X.LEVEL_TRANSITION_ORDER,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG) )
ON 
  aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
    Available(X.LEVEL_TRANSITION_ORDER)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG )
  )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order in Infill MA"
 Guid="9c14853f-280a-4851-b7a2-f1c2e313eded"
>
<Comment>Checks if level transition order is received in infill MA message.</Comment>
<PreConditions>
<PreCondition
 Guid="24070c6a-6da6-4fcb-942b-c52a3660d859"
>Available(aMessage.INFILL_MA)</PreCondition><PreCondition
 Guid="7935e75b-234e-47d4-8655-b0a0cf804c8f"
>Kernel.AcceptInformation.LevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9717ae2e-d9c1-4070-8f6c-ed149c7c9a84"
>APPLY 
  Kernel.LevelTransition.LTOReceived(
    Packet =&gt; X.LEVEL_TRANSITION_ORDER,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )
ON 
  aMessage.INFILL_MA.Sequence1 | (
    Available(X.LEVEL_TRANSITION_ORDER)
      AND  
    Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG )
  )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SR authorisation message available"
 Guid="e847d1b0-8be3-41a3-8ffd-43e655a3a124"
>
<ReqRef
 Id="6dc87cd2-d3b8-4d7f-a8f0-26e60b30a71e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="658de14c-3157-4d55-84fd-a580054731dc"
>
</ReqRef><ReqRef
 Id="d97a231f-6ef1-4300-9bd9-d3dba7d434bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="75b6b428-5a43-4df5-aa76-0990b37dbfe2"
>
</ReqRef><ReqRef
 Id="478bdd4c-284c-4cc2-98a7-1b85116f19c2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f5d5bf71-140b-48ae-92bc-f8cfa73f4cf9"
>
</ReqRef><ReqRef
 Id="96e35d16-4055-40b8-811e-cb6738efd0c2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab0ef5fe-6a5a-4579-85d2-a7788d9c7135"
>
</ReqRef><ReqRef
 Id="9f918f6f-f470-4613-ab97-374dc595ce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="676ff9f6-361d-43cf-bd00-6a11ba7627eb"
>
</ReqRef><Comment>Handles reception of SR authorisation with the corresponding list of balises in SR authority, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SR authorisation message available"
 Guid="d118d140-ad45-45ff-852f-8cb03f830fa2"
>
<PreConditions>
<PreCondition
 Guid="aae29d37-06e2-4a68-af77-695ecbbe2651"
>Available ( aMessage.SR_AUTHORISATION )</PreCondition><PreCondition
 Guid="bf0c5958-be34-42d3-8249-8e5664b95c9e"
>Kernel.AcceptInformation.SRAuthorisation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="80d3a386-cf7c-4ca1-91f3-31d8046462f2"
>Kernel.Modes.StaffResponsible.SRAuthorisationReceived ( aMessage =&gt; aMessage.SR_AUTHORISATION )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Movement authority message available"
 Guid="626962c6-9ca8-4901-8a62-680c26f7dc7a"
>
<ReqRef
 Id="948cdca7-999f-4b57-8b4a-7ffc1873927f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93b1df7b-3be7-4595-ac53-eb958ee1749c"
>
</ReqRef><ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ac4a4f7-3e5f-4335-b743-e8ee7a7ce385"
>
</ReqRef><ReqRef
 Id="34124e11-dd20-40b4-8914-44b6b7397ff1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d52b2e1-2ae4-4fa4-a15b-a79f20a19041"
>
</ReqRef><ReqRef
 Id="ecaefeed-fa89-4186-b8b7-e63999df3603"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ffd2cec2-5da8-422b-a8c6-5fc4ce9751ba"
>
</ReqRef><ReqRef
 Id="c04116c0-24b6-4d81-ae02-cff4fa993bef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8fa0eaad-3da8-4e2a-b7c5-92f4db5a720d"
>
</ReqRef><ReqRef
 Id="200c6541-d8d8-43b9-b5c0-4f586318bbce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b95f307-32e9-4b7f-a263-33d54c3b4cee"
>
</ReqRef><ReqRef
 Id="e8c6ee53-8d52-44a6-9106-d841973941fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30933d45-2e05-4cf8-905e-f63341a878ec"
>
</ReqRef><Comment>Handles reception of MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Movement authority message available"
 Guid="b2ace9c6-9fcd-4829-b42f-393341b8a143"
>
<PreConditions>
<PreCondition
 Guid="cc9777a1-c95d-4abd-9469-632ab302b08b"
>Available ( aMessage.MOVEMENT_AUTHORITY )</PreCondition><PreCondition
 Guid="0a1244f7-fc1f-4b75-b7ab-0ca339366842"
>NOT (THERE_IS X IN Kernel.BrakeCommands.EmergencyStops | X.Reason == Kernel.BrakeCommands.BrakeReasonEnum.OrderFromRBC)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="539f7a0f-52e3-44ad-9ab0-68b3b3aaf17c"
>
<ReqRef
 Id="d96e7170-b578-4e28-bb03-82d0b7cc6a6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="efcc4e90-32d1-4522-9741-fccaf6483a15"
>
</ReqRef><ReqRef
 Id="e1e59e57-94a5-48ea-bb40-d183aa229e20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f92ced2-ff9b-4c8e-b0d9-a18f2b01b4b4"
>
</ReqRef><ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe5ff221-f09e-41e1-ac39-10691136d712"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="faa74451-ed37-495d-bbad-3e9496933b32"
>
</ReqRef><Comment>Handles reception of gradient profile received with the MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile Available"
 Guid="beef185c-ea8f-43e9-84d0-f3353e3dbec6"
>
<PreConditions>
<PreCondition
 Guid="15804d7c-33d0-4bfc-85bd-d4a4c1a8d315"
>THERE_IS X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)</PreCondition><PreCondition
 Guid="18ea085c-5396-4c0b-a2e3-b6032f611031"
>Kernel.AcceptInformation.GradientProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="84783058-b6d8-48dd-8897-dedcf0d04f7f"
>Kernel.TrackDescription.Gradient.GradientProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
        Available( X.GRADIENT_PROFILE )
          AND  
        ConsiderRBCPacket(
            Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
            NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG)
        ) ).GRADIENT_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MOVEMENT_AUTHORITY.NID_LRBG) 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="8864fbd0-0eae-4dce-8805-790e4f3551ee"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10d9f452-46dd-4978-967e-4e75792146df"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3adaef1-24a8-455c-89aa-f9b35652a8d1"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ecaa15f-bdde-4f57-a2e5-5abbad0fae88"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a6d2588-59ba-420a-b38f-09e4a6ea3bad"
>
</ReqRef><Comment>Handles reception of the international static speed profile received with the MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="bd9a92b7-41d2-4214-92f6-33a7d4278a14"
>
<PreConditions>
<PreCondition
 Guid="daa8826e-2423-45e0-af75-e2e3365df69f"
>THERE_IS X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)</PreCondition><PreCondition
 Guid="775aa417-c26d-4889-bf1c-90edb1d888bb"
>Kernel.AcceptInformation.InternationalSSP( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cb35e80d-d855-4a80-9c9a-b44f424b0fc7"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
        Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
          AND  
        Messages.ConsiderRBCPacket(
            Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
            NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
        ) ).INTERNATIONAL_STATIC_SPEED_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MOVEMENT_AUTHORITY.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="fcf5520f-ce3c-4f17-b984-02a819e47adb"
>
<ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c0e24bd2-6d1d-4cc1-b3d3-ed16112b088a"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d8a97d8-5e2c-45cf-b9f5-8e90fb857a7f"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1419c8f3-d266-46d9-93e9-687d709a6695"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fde75a6c-145b-40b6-a798-c6d6a379d3a2"
>
</ReqRef><Comment>Handles reception of the list of balises for SH area received with the MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="1ac428d8-87fc-45d9-a277-e609c689b426"
>
<PreConditions>
<PreCondition
 Guid="50fdfdf7-d5b4-4b7a-84b2-11828d779ff0"
>THERE_IS X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="302b5642-258f-499d-89b3-212a4433b74f"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; (FIRST X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)).LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle common packets"
 Guid="9d2b2f55-0898-4428-9183-70002729d631"
>
<Comment>Handle common packets (as described in Subset-026 Paragraph 8.4.4.4.1.1) received with the MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle common packets"
 Guid="06cf69bd-44fb-415c-b4de-0e8df36c62c1"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="534b7962-8df0-4881-a75a-7e88ce4d1d85"
>Messages.HandleCommonPackets
(
    Packets =&gt; aMessage.MOVEMENT_AUTHORITY.Sequence1,
    Time =&gt; aMessage.MOVEMENT_AUTHORITY.T_TRAIN,
    NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle the Movement Authority"
 Guid="7d82c686-4ecc-403f-abbd-e4c751de1bdf"
>
<ReqRef
 Id="63f87a6b-8c3e-4333-b97e-9e417e3623d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f322b5aa-3e52-44f8-b37d-b356be1b3b17"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="2d0a8ab9-9dae-4ed6-a748-95a39c9b153d"
>
</ReqRef><ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a622f005-ec93-4509-9936-58883e29eaa3"
>
</ReqRef><ReqRef
 Id="f0c86934-5f4c-4832-bb8d-5fce455e3e7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551b8673-8961-4cd9-8469-961d3530f9e6"
>
</ReqRef><ReqRef
 Id="f9ca42e2-644d-47a2-b6e3-80059c79e361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e80f884d-b06d-4fb7-89ee-1fb58f2f242f"
>
</ReqRef><ReqRef
 Id="00601485-94ca-4c66-a312-5037844661af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="626ef3ec-8126-47b1-8d9a-a4507f600f1d"
>
</ReqRef><Comment>At the end, handles the Movement Authority. This is done after all the packets were handled in order to be able to evaluate the track description, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle the Movement Authority"
 Guid="efe7c9f4-a17c-4a68-a757-697eabef2d1a"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="34f6db8a-45cd-4c94-b8e3-83e7ea450181"
>Kernel.MA.MALvl2or3ProfileReceived
(
    Packet =&gt; aMessage.MOVEMENT_AUTHORITY.LEVEL_2_3_MOVEMENT_AUTHORITY,
    NID_BG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG,
    SectionStartTimer =&gt; MessageTypes.TimeResolution ( time =&gt; aMessage.MOVEMENT_AUTHORITY.T_TRAIN ),
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MOVEMENT_AUTHORITY.NID_LRBG) 
)</Action><Action
 Guid="03bcefd6-b932-4560-84fe-4d09a3f2be6f"
>Kernel.MA.MATimers.LOATimerStart &lt;- MessageTypes.TimeResolution( time =&gt; aMessage.MOVEMENT_AUTHORITY.T_TRAIN )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="77eaf966-192f-4c0e-9990-7e4897dad4af"
>
<ReqRef
 Id="de18f207-08ba-467b-a877-d3c5a458123d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a402d46-e655-4ff8-ad35-7229f2ed2f0a"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="ae797155-a1ea-43a4-95f4-72ea15165d33"
>
</ReqRef><ReqRef
 Id="63f87a6b-8c3e-4333-b97e-9e417e3623d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b3ffeffc-b145-44a2-a355-aa32b1978837"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="932794cc-71cd-4b77-87c8-84d7360e01f3"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd84685b-2cf9-49e0-a979-a2579c169f6b"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ca503707-aa3a-473a-8823-68128acf21f1"
>
</ReqRef><Comment>Handles reception of mode profile received with the MA (only if the MA was accepted).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="009cc428-70b4-4b0a-b5df-468b677b743e"
>
<PreConditions>
<PreCondition
 Guid="9faa2fda-94d0-4d88-b999-35cbcbcf7f60"
>THERE_IS X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)</PreCondition><PreCondition
 Guid="e03da753-7cd6-4dc6-a1f4-d558ed56a340"
>Kernel.MA.MAIsAccepted</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1d0407c6-42f3-4cd3-9dbd-5721ca7faffe"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infillModeProfile parameter.</Comment>
Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.MOVEMENT_AUTHORITY.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)
).MODE_PROFILE,
    GenericLSMarker =&gt; False,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MOVEMENT_AUTHORITY.NID_LRBG),
    infillModeProfile =&gt; False 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Request to shorten MA message available"
 Guid="f573cc24-d8e7-4a5a-837b-fcfd15701f42"
>
<ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="54da9cb4-680f-43b6-b33a-03a77edf5ce4"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89f3be06-5ef7-468a-b825-4e1198285de5"
>
</ReqRef><ReqRef
 Id="8430bb84-5228-4341-b64b-f578dfc94604"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9bcc358-027f-447c-8982-38032c81b0fc"
>
</ReqRef><ReqRef
 Id="ecaefeed-fa89-4186-b8b7-e63999df3603"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ea53fc6-d681-41e6-9683-e9812a8a9b37"
>
</ReqRef><ReqRef
 Id="20a7a00d-396e-453b-8cd0-0a2ec8f83340"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f1cf6eb2-201c-4dbe-9594-553bc1a6c1ff"
>
</ReqRef><ReqRef
 Id="200c6541-d8d8-43b9-b5c0-4f586318bbce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b077f519-c4f7-4059-b4b7-090c9ffd6270"
>
</ReqRef><ReqRef
 Id="7c1c6cfb-0855-4d9a-95fc-7ee84622b5ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd142dc5-7203-4f17-9cab-07aba197f8f8"
>
</ReqRef><ReqRef
 Id="a7c70cd2-b836-4684-9ca8-e4ee4cf4f621"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42cf2326-0760-45c8-bd17-9be6de77bf30"
>
</ReqRef><ReqRef
 Id="9f918f6f-f470-4613-ab97-374dc595ce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0cb0ba2f-8eda-43f6-86c5-9b9e02bf595e"
>
</ReqRef><Comment>Handles reception of Request to shorten MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request to shorten MA message available"
 Guid="b3c21ffa-a5dc-4ee9-8a69-18a619d2a108"
>
<PreConditions>
<PreCondition
 Guid="324ed534-7ece-4d2d-83d2-634f8405934d"
>Available ( aMessage.REQUEST_TO_SHORTEN_MA )</PreCondition><PreCondition
 Guid="ac3c42b9-2925-4f5d-a63b-8248eade008e"
>NOT (THERE_IS X IN Kernel.BrakeCommands.EmergencyStops | X.Reason == Kernel.BrakeCommands.BrakeReasonEnum.OrderFromRBC)</PreCondition><PreCondition
 Guid="8a173bc3-dc84-4604-bb24-285a83717478"
>Kernel.AcceptInformation.MovementAuthority( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition><PreCondition
 Guid="ab8c98b5-fe4d-4bdb-955d-89bacc874dde"
>Kernel.ActiveFunctions.HandleCoOperativeMARevocation()</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="0118014c-9220-4336-9541-bf8317e774e2"
>
<ReqRef
 Id="de18f207-08ba-467b-a877-d3c5a458123d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b4661af-9e46-4ac4-9f54-c9ec3eb55d10"
>
</ReqRef><ReqRef
 Id="de18f207-08ba-467b-a877-d3c5a458123d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="745f1f3e-15fd-429b-964b-ea647b81965e"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b33dc4d8-c13f-4566-83fc-35d50ed9941d"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a4a31f6-d40d-4641-a969-733606f70c2e"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="260f9f16-e64f-4854-b4ec-57b318be59af"
>
</ReqRef><Comment>Handles reception of the mode profile received with the request to shorten MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="a57d89cc-ee5f-47b4-9486-73125c45cc4d"
>
<PreConditions>
<PreCondition
 Guid="6f406375-f0b0-4331-aa87-fa5c9fcc422c"
>THERE_IS X IN aMessage.REQUEST_TO_SHORTEN_MA.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)</PreCondition><PreCondition
 Guid="fdc59a8b-1dcc-4adc-b795-743a02ec17a5"
>Kernel.AcceptInformation.MovementAuthority( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="42923357-d030-4973-8f7e-66c4c0796d02"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infillModeProfile parameter.</Comment>
Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.REQUEST_TO_SHORTEN_MA.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG )
)
).MODE_PROFILE,
    GenericLSMarker =&gt; False,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.REQUEST_TO_SHORTEN_MA.NID_LRBG),
    infillModeProfile =&gt; False 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Shortened MA accepted"
 Guid="cceec5af-35c2-47b3-bc2d-d6c0c115605e"
>
<ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5481b1a-2e32-494e-80ec-405882131302"
>
</ReqRef><ReqRef
 Id="f0c86934-5f4c-4832-bb8d-5fce455e3e7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d45e8c84-d628-48f9-89b7-7969ac7f5b82"
>
</ReqRef><ReqRef
 Id="f9ca42e2-644d-47a2-b6e3-80059c79e361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="88086661-9850-4991-86d6-fdc3f7d416d2"
>
</ReqRef><ReqRef
 Id="00601485-94ca-4c66-a312-5037844661af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9ce54f0d-e573-46c8-ab8a-4cb9a0f66dda"
>
</ReqRef><ReqRef
 Id="26d39c75-1c24-46e6-b725-d71bd2fbd1c3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68b21689-1656-4950-ba6d-9f6f2acfd329"
>
</ReqRef><ReqRef
 Id="c11c2ace-e3a5-4fe7-9621-b28a5a50f720"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26c9e98c-6dfc-4341-8953-1c86b2181fe4"
>
</ReqRef><ReqRef
 Id="d88061c9-dc9a-4ffc-8134-4bc8eef39511"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3351e4ec-4c63-42a2-b92c-f33d8f68049d"
>
</ReqRef><ReqRef
 Id="0385292a-59d1-48df-b95b-ac8936ef26aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d51832e2-d31d-449a-9e23-92956ae8e466"
>
</ReqRef><Comment>If the MA is accepted, it is handled normally and the LOA timer is handled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Shortened MA accepted"
 Guid="1ae7c0c9-87c4-4840-a378-4f75c26cbdbb"
>
<Comment>If the shortened MA is accepted, it is stored on-board and the RBC is informed.</Comment>
<PreConditions>
<PreCondition
 Guid="cc96c7be-eee9-4b2b-9b03-f57493fb0d0d"
>Kernel.MA.ShortenedMAIsAccepted( aShortenedMA =&gt; aMessage.REQUEST_TO_SHORTEN_MA.LEVEL_2_3_MOVEMENT_AUTHORITY )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d4fb8501-640d-4856-92c1-a168eeed555f"
><Comment>Saves the time stamp of the new MA for the LOA timer.</Comment>
Kernel.MA.MATimers.LOATimerStart &lt;- MessageTypes.TimeResolution( time =&gt; aMessage.REQUEST_TO_SHORTEN_MA.T_TRAIN )</Action><Action
 Guid="6702a997-d01c-4601-b7d0-cf2f0f22ec85"
>Kernel.MA.MALvl2or3ProfileReceived
(
    Packet =&gt; aMessage.REQUEST_TO_SHORTEN_MA.LEVEL_2_3_MOVEMENT_AUTHORITY,
    NID_BG =&gt; aMessage.MOVEMENT_AUTHORITY.NID_LRBG,
    SectionStartTimer =&gt; MessageTypes.TimeResolution ( time =&gt; aMessage.MOVEMENT_AUTHORITY.T_TRAIN ),
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.REQUEST_TO_SHORTEN_MA.NID_LRBG) 
)</Action><Action
 Guid="02fcd07f-ac43-4f48-82e0-6a487cf9d95a"
>Kernel.HandlingOfAcceptedAndStoredInformation.CooperativeMARevocationIsGranted &lt;- True</Action><Action
 Guid="47bf888f-72f4-47d4-92c7-32847fd36109"
>RBCConnection.CurrentRBCConnection().SendRequestToShortenMAIsGranted( TimeStamp =&gt; aMessage.REQUEST_TO_SHORTEN_MA.T_TRAIN )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Shortened MA rejected"
 Guid="5c78aaf4-7c26-4359-8c40-b958d51f3776"
>
<Comment>If the shortened MA is rejected, the RBC is informed.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="bb347d32-fad8-4c16-80dc-e39b3329c50d"
>RBCConnection.CurrentRBCConnection().SendRequestToShortenMAIsRejected( TimeStamp =&gt; aMessage.REQUEST_TO_SHORTEN_MA.T_TRAIN )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Conditional emergency stop message available"
 Guid="6219bab3-329e-48c8-ac3b-43208d1cff15"
>
<ReqRef
 Id="4f290d49-e10d-41ae-a385-d9a756df04d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9643411f-14d6-4b2c-959f-9fdb865d1d3a"
>
</ReqRef><ReqRef
 Id="2b2cca84-5637-4f57-be10-029b36aa0f1a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="463dce3d-0288-4eed-a4c4-19a70f55208e"
>
</ReqRef><ReqRef
 Id="f6e5eaf6-2bea-486e-b3f7-3e854c745b5d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24f871fa-9964-45bb-a5f8-e1716603f5f0"
>
</ReqRef><ReqRef
 Id="bc320eeb-6eb1-4cb8-a15d-72281a99dbc3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc2ea5af-c651-451f-815d-a20703607dfd"
>
</ReqRef><ReqRef
 Id="33e62917-dd34-4df6-ad24-d4c5147a5987"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5755a7ce-3b97-4b40-b165-27cec57d51c4"
>
</ReqRef><ReqRef
 Id="109283cb-5caa-4b81-ae13-b60b061e831b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="676f5621-b60c-4e5c-b2de-c44151bfed21"
>
</ReqRef><Comment>Handles reception of Conditional Emergency Stop message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Conditional emergency stop message available"
 Guid="3c618754-ea0f-49ef-8876-9f2dcb57eaeb"
>
<PreConditions>
<PreCondition
 Guid="7ee563c7-9f56-4ea4-a306-7f427f0e871d"
>Available ( aMessage.CONDITIONAL_EMERGENCY_STOP )</PreCondition><PreCondition
 Guid="2fddd0ff-dfd7-4de4-8714-bf166f357b71"
>Kernel.AcceptInformation.ConditionalEmergencyStop( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition><PreCondition
 Guid="30f7c7de-fcc5-4a94-ba86-fc1a4030a303"
>Kernel.ActiveFunctions.ManageConditionalEmergencyStop()</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Verify if the train has passed the stop location"
 Guid="a3dde26d-052a-40b9-91b8-f0946f5668e9"
>
<ReqRef
 Id="e0cce2b4-2341-4ff7-8496-f341142799d3"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="c654505e-1d72-4ca8-a573-c98379db1ce8"
>
</ReqRef><Comment>If the train has not yet passed the stop location, the emergency stop is stored; otherwise it is rejected.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Train has not reached stop location"
 Guid="906d528d-1a88-4d5d-8ab4-4532dd386338"
>
<ReqRef
 Id="f40c3edb-de6e-4b83-98fc-97be15c1f7a3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b566403b-039c-48c5-a295-e471c0eb7220"
>
</ReqRef><Comment>If the train has not yet reached the stop location defined in the message, the stop location is the new EOA and SvL</Comment>
<PreConditions>
<PreCondition
 Guid="b45902ce-1ad5-4544-b07a-efd3ce8b7857"
>Kernel.TrainPosition.FrontEndPosition( PointOfInterest=&gt;DistanceIntervalEnum.Min )  &lt; DistanceFromCurrentLRBG(aMessage.GENERAL_MESSAGE.NID_LRBG) + MessageTypes.QScaleDistance(
    distance =&gt; aMessage.CONDITIONAL_EMERGENCY_STOP.D_EMERGENCYSTOP,
    scale =&gt; aMessage.CONDITIONAL_EMERGENCY_STOP.D_EMERGENCYSTOP
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="13e508f8-8fd5-4eab-af3b-ebd073c96e70"
>Kernel.BrakeCommands.AddEmergencyStop( aMessage )</Action><Action
 Guid="0c732be4-110b-4fc8-97df-216421d855ca"
>Kernel.HandlingOfAcceptedAndStoredInformation.ConditionalEmergencyStopExecuted &lt;- True</Action><Action
 Guid="03d9f8ef-8b8c-491f-bd45-0b6c39088993"
>RBCConnection.CurrentRBCConnection().SendAcknowledgementOfEmergencyStop(
     aMessage =&gt; aMessage,
     Qualifier =&gt; Messages.Q_EMERGENCYSTOP.Conditional_Emergency_Stop_accepted__with_update_of_EOA__ref_3_10_2_2
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Train has passed stop location"
 Guid="676caee5-da37-43fb-b10b-cfe4fbb2ac70"
>
<Comment>If the train has already passed the stop location, the emergency stop is rejected and the RBC is informed.</Comment>
<PreConditions>
<PreCondition
 Guid="d576cf7f-55e9-49ee-8461-75648e378b60"
>Kernel.TrainPosition.FrontEndPosition( PointOfInterest=&gt;DistanceIntervalEnum.Min )  &gt;= DistanceFromCurrentLRBG(aMessage.GENERAL_MESSAGE.NID_LRBG) + MessageTypes.QScaleDistance(
    distance =&gt; aMessage.CONDITIONAL_EMERGENCY_STOP.D_EMERGENCYSTOP,
    scale =&gt; aMessage.CONDITIONAL_EMERGENCY_STOP.D_EMERGENCYSTOP
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="40cd1d56-1167-44a7-a25a-cdddeccd30bd"
>Terminal.CurrentTerminal().RBCConnection.SendAcknowledgementOfEmergencyStop(
    aMessage =&gt; aMessage,
    Qualifier =&gt; Messages.Q_EMERGENCYSTOP.Conditional_Emergency_Stop_rejected__because_the_train_has_passed_the_emergency_stop_location__ref_3_10_2_2
 )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Unconditional emergency stop message avaialbe"
 Guid="d181ba0c-6ecc-4a2b-9f9b-3d3ea2832731"
>
<ReqRef
 Id="2b2cca84-5637-4f57-be10-029b36aa0f1a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="85d11b25-dd44-4bb1-b9df-67a55173645e"
>
</ReqRef><ReqRef
 Id="0043347f-c382-4046-b7ae-6c3e73575ec6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a2e1044-20d8-4600-a7ca-c4e2dadc2427"
>
</ReqRef><ReqRef
 Id="562e7a97-e32b-4ab7-aa2a-be203bda68f7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46ea00ef-caf1-431e-81c7-5a834b97b98d"
>
</ReqRef><ReqRef
 Id="5b84aa5e-12e2-49e0-bafe-11832a934de5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7fbac781-a79c-4edf-b6f2-aa1fb94468b3"
>
</ReqRef><ReqRef
 Id="ada86afd-dbbc-4429-a7e3-d9c5ad6c1ff6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bdf81ab8-1a5a-41fc-a0f1-7ec2dd079781"
>
</ReqRef><ReqRef
 Id="109283cb-5caa-4b81-ae13-b60b061e831b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="16cc1c5f-ee5f-48af-9f66-5c34f96919ca"
>
</ReqRef><Comment>Handles reception of an Unconditional Emergency Stop message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Unconditional emergency stop message available"
 Guid="2c426004-97a7-4ae6-8fa9-767322005526"
>
<PreConditions>
<PreCondition
 Guid="2a1175db-f9be-4516-b844-38ee6b37cd28"
>Available ( aMessage.UNCONDITIONAL_EMERGENCY_STOP )</PreCondition><PreCondition
 Guid="9b5b805b-2848-4216-ae3b-8f906ef667cc"
>Kernel.AcceptInformation.UnconditionalEmergencyStop( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition><PreCondition
 Guid="fa67b753-f811-4e3e-b9e3-4db1d8523cc5"
>Kernel.ActiveFunctions.ManageUnconditionalEmergencyStop()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="14b50c09-3233-48b7-8e73-bbdeae756ac9"
>Kernel.BrakeCommands.AddEmergencyStop( aMessage )</Action><Action
 Guid="71cbd6a5-2189-4ec1-8418-4abc955214e2"
>RBCConnection.CurrentRBCConnection().SendAcknowledgementOfEmergencyStop(
     aMessage =&gt; aMessage,
     Qualifier =&gt; Messages.Q_EMERGENCYSTOP.Not_relevant__Unconditional_Emergency_Stop___ref_3_10_2_3 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Emergency stop revocation message availabe"
 Guid="369b1a3a-96e2-4bf7-879d-2459dcb3a412"
>
<ReqRef
 Id="562e7a97-e32b-4ab7-aa2a-be203bda68f7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7462f34-9c6c-485e-8037-5894d8b83ab1"
>
</ReqRef><ReqRef
 Id="19082c8b-d1cc-4d23-a9da-8581737a0760"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6293d9b3-e329-4294-b522-6dff8f6a4d3d"
>
</ReqRef><ReqRef
 Id="448cbdb9-e658-4c29-9d9d-c6ecbd93bad8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d059b82-1a1d-4b00-b2df-b7eb42d8a760"
>
</ReqRef><ReqRef
 Id="a911a02d-c12c-41f6-9111-27edfeceb382"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f17199a-b75f-46bb-89c0-0c46f8f73196"
>
</ReqRef><ReqRef
 Id="5ce0c851-ac56-420a-a310-02c29ec898ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc015b1d-861a-4126-8a1f-b88d10ac4a72"
>
</ReqRef><ReqRef
 Id="ada86afd-dbbc-4429-a7e3-d9c5ad6c1ff6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4417ddd4-0cd9-4bf8-8d3a-6c1bc549c568"
>
</ReqRef><ReqRef
 Id="109283cb-5caa-4b81-ae13-b60b061e831b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="abf83c22-1f3b-4ba1-a616-730ae00401bd"
>
</ReqRef><ReqRef
 Id="b0883199-89ae-4c45-aa2d-e2ea6f20c0a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="647ea050-8e75-4459-a2c2-b6d0cc961c63"
>
</ReqRef><Comment>Handles reception of an Unconditional Emergency Stop message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Emergency stop revocation message available"
 Guid="fea37d05-21ec-43f7-bca3-44902c64d56a"
>
<PreConditions>
<PreCondition
 Guid="b27400e6-67d5-420f-a0bd-3105a306886a"
>Available ( aMessage.REVOCATION_OF_EMERGENCY_STOP)</PreCondition><PreCondition
 Guid="b9e4437b-1ced-4006-8c2c-17a81d3beadb"
>Kernel.AcceptInformation.RevocationOfEmergencyStop( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition><PreCondition
 Guid="fd264b1c-375a-4cb7-9b24-a318edd2873b"
>Kernel.ActiveFunctions.ManageUnconditionalEmergencyStop()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f805b9c3-0775-43d3-b682-ee371e41c2bb"
>Kernel.BrakeCommands.RemoveEmergencyStop( aMessage.REVOCATION_OF_EMERGENCY_STOP.NID_EM )</Action><Action
 Guid="85bd82e2-713f-4050-8723-67cadc68b831"
>RBCConnection.CurrentRBCConnection().SendAcknowledgement()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="General message available"
 Guid="e53756b8-59a0-40ca-aa4c-9eca78feb0b4"
>
<ReqRef
 Id="4dea631e-f3ef-4f67-8232-6d867ebc7c34"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="311ecfe7-ea5c-4667-a285-a1892d7774f7"
>
</ReqRef><ReqRef
 Id="7791130c-94a3-4a45-9437-4a4835707e9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fc12ef86-a020-42c5-a007-275d305a6e17"
>
</ReqRef><ReqRef
 Id="b6bf5b80-f375-47d6-b7b5-a9f901be75f0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb662fb7-c905-430c-97ae-95c8a73ee7aa"
>
</ReqRef><Comment>Handles reception of the General message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="General message available"
 Guid="73ad08e9-e929-4ea4-93c0-5cb635407280"
>
<PreConditions>
<PreCondition
 Guid="379edce7-f62e-4d83-8b49-c4b6bf2389a9"
>Available ( aMessage.GENERAL_MESSAGE )</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="4a9a4eb7-1bc1-4708-b7c1-58bc9ff5914e"
>
<ReqRef
 Id="d96e7170-b578-4e28-bb03-82d0b7cc6a6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2a469db-3a16-4148-bdf6-d07d17599791"
>
</ReqRef><ReqRef
 Id="e1e59e57-94a5-48ea-bb40-d183aa229e20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a24fcee-e40d-498f-8921-716b327d329e"
>
</ReqRef><ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5135329e-d60e-41e9-a79f-c33c738decf5"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a537d8eb-15b6-49a0-8e1f-6a9f3dc6e017"
>
</ReqRef><Comment>Handles reception of gradient profile received with the General Message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile Available"
 Guid="250d685f-78c7-478a-b4af-068dd2c6b382"
>
<PreConditions>
<PreCondition
 Guid="bce3c2ab-e40c-4ea5-9fb3-b581ec79fd44"
>THERE_IS X IN aMessage.GENERAL_MESSAGE.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG )
)</PreCondition><PreCondition
 Guid="e5348204-a770-4e15-aee7-789452b59e2c"
>Kernel.AcceptInformation.GradientProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b95413c9-b053-461c-a7bb-e31ef156aed8"
>Kernel.TrackDescription.Gradient.GradientProfileReceived ( 
    Packet =&gt; (FIRST X IN aMessage.GENERAL_MESSAGE.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG )
)).GRADIENT_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.GENERAL_MESSAGE.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="e2613834-c158-44ec-aaf6-2f914c3bbeaf"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a8e2a71-a558-43dc-b72b-605487ba3ee2"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f74f429a-7c80-47af-990d-a38a3b0ddb8e"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b946f21e-9ee3-4634-abaa-51fd9b4d13bd"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d945dae1-9921-4445-90a9-970545a60971"
>
</ReqRef><Comment>Handles reception of the international static speed profile received with the General Message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="c401bc07-c5eb-4046-b624-622f53e9dc39"
>
<PreConditions>
<PreCondition
 Guid="8e8f3f52-d8c0-4552-b7e9-ee1e7968ce73"
>THERE_IS X IN aMessage.GENERAL_MESSAGE.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG )
)</PreCondition><PreCondition
 Guid="e11ca8f5-dd57-467b-96b7-d5c2ad61cb21"
>Kernel.AcceptInformation.InternationalSSP( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50146264-35cc-4101-9232-7100545ee454"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.GENERAL_MESSAGE.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG )
)).INTERNATIONAL_STATIC_SPEED_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.GENERAL_MESSAGE.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle common packets"
 Guid="e4f3055e-8206-43cb-ad1e-69339e7e0c22"
>
<Comment>Handle common packets (as described in Subset-026 Paragraph 8.4.4.4.1.1) received with the General Message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle common packets"
 Guid="092cc2ad-1645-4dcf-8469-7fa7fb773205"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="30b31d73-66f4-4e11-a0ae-a3bf2c3166c3"
>Messages.HandleCommonPackets (
    Packets =&gt; aMessage.GENERAL_MESSAGE.Sequence1,
    Time =&gt; aMessage.GENERAL_MESSAGE.T_TRAIN,
    NID_LRBG =&gt; aMessage.GENERAL_MESSAGE.NID_LRBG
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SH authorised message available"
 Guid="4bb7073f-95bc-4318-8d3f-3caa5247ea0c"
>
<ReqRef
 Id="a9c3b99f-ed94-4e53-9926-e303c3898b8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e98a66ec-b3a6-46c1-ade8-a2123a480ae2"
>
</ReqRef><ReqRef
 Id="38d45e49-f55c-4765-9dfc-1faf09f9a446"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb037c3a-2341-462f-a1b4-cb08fb84ccff"
>
</ReqRef><ReqRef
 Id="e092d627-9a93-4224-bacf-76290eea5837"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="58abc946-6810-4db7-a5f5-e19ea394b9e5"
>
</ReqRef><Comment>Handles reception of Shunting Authorised.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SH authorised message available"
 Guid="9df194d9-d435-4491-af34-2b1bdab6c098"
>
<PreConditions>
<PreCondition
 Guid="b6beabb3-2162-4140-bf62-6c441dbea7c6"
>Available ( aMessage.SH_AUTHORISED )</PreCondition><PreCondition
 Guid="b26f084c-4648-4f9b-9f89-fc43cc187626"
>Kernel.AcceptInformation.SHAuthorised( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="National Values available"
 Guid="9a3c053d-b15b-46ab-9d8d-50795ecd1cef"
>
<ReqRef
 Id="da594ef9-d8e9-4553-af3e-77f9102ec171"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05d3a53f-98cd-4182-9aef-f1af7bd320be"
>
</ReqRef><ReqRef
 Id="967fe971-b137-4079-b900-5f6c1f5f25ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="925cd921-1d79-4c8e-9183-c03fb78b6525"
>
</ReqRef><Comment>Handles reception of the list of national values received with the SH authorized message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="National Values available"
 Guid="6f1b7a50-35b4-4f74-a049-19d708150979"
>
<PreConditions>
<PreCondition
 Guid="e483a815-f059-4d29-850c-e0bc4283e121"
>THERE_IS X IN aMessage.SH_AUTHORISED.Sequence1 | (
  Available ( X.NATIONAL_VALUES )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.NATIONAL_VALUES.Q_DIR,
        NID_LRBG =&gt; aMessage.SH_AUTHORISED.NID_LRBG )
)</PreCondition><PreCondition
 Guid="33f224f8-59b9-4d2c-975d-5990a8f74c33"
>Kernel.AcceptInformation.NationalValues( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c591202a-bf0c-4820-b865-d89a5c3e1eee"
>Kernel.NationalValues.NationalValuesReceived (
    Packet =&gt; (FIRST X IN aMessage.SH_AUTHORISED.Sequence1 | (
  Available ( X.NATIONAL_VALUES )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.NATIONAL_VALUES.Q_DIR,
        NID_LRBG =&gt; aMessage.SH_AUTHORISED.NID_LRBG )
)
).NATIONAL_VALUES,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.SH_AUTHORISED.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="bab31a37-d08a-4b35-824b-86657028cd02"
>
<ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1090654d-d01d-42a4-818f-4a17052ced2a"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55b1c0b6-1e42-4718-839a-5bff9cf957e7"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="61793a79-ffe4-42c0-9e0f-2b0e30efac70"
>
</ReqRef><Comment>Handles reception of the list of balises for SH area received with the SH authorized message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="6233e753-a04e-4c0f-b2c5-015ebf664b77"
>
<PreConditions>
<PreCondition
 Guid="921e273d-a33d-440e-be97-1a4e4d049569"
>THERE_IS X IN aMessage.SH_AUTHORISED.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.SH_AUTHORISED.NID_LRBG)
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="39dae7aa-8f70-4814-8257-74acd3cd2e81"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; (FIRST X IN aMessage.SH_AUTHORISED.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.SH_AUTHORISED.NID_LRBG)
)).LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="MA with shifted location reference message available"
 Guid="c827bc7f-c31b-4e5b-b1d7-0c40f0977756"
>
<ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f201ac46-7bc8-4573-abb2-42dd3c495037"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c19718f7-8892-4eec-822e-47429c73ee54"
>
</ReqRef><ReqRef
 Id="17ca4691-52af-4571-83b8-d4e345bcc557"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3a85200b-d4dc-4c63-ab3f-58ace0758c7c"
>
</ReqRef><ReqRef
 Id="ecaefeed-fa89-4186-b8b7-e63999df3603"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="375a6cbf-421a-4321-8edd-7f8a1766d267"
>
</ReqRef><ReqRef
 Id="97eca6f5-ba51-4c2e-a71f-3e5752290f21"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="965919c6-b6c4-4cf8-9e69-97d8915441fb"
>
</ReqRef><ReqRef
 Id="200c6541-d8d8-43b9-b5c0-4f586318bbce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bad02f96-86eb-4715-beab-10bb92b43d68"
>
</ReqRef><ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fbeb28a-e767-429f-b689-781bdadbc096"
>
</ReqRef><ReqRef
 Id="f0c86934-5f4c-4832-bb8d-5fce455e3e7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a17f545-62a2-415b-9648-05f864f135d4"
>
</ReqRef><ReqRef
 Id="00601485-94ca-4c66-a312-5037844661af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="297eefcb-fe92-4160-b242-3593360731db"
>
</ReqRef><ReqRef
 Id="e3117105-3ce2-4744-9f44-b3d27fe82522"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1449571d-031d-41d6-9637-bd816e4f9638"
>
</ReqRef><ReqRef
 Id="9f918f6f-f470-4613-ab97-374dc595ce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f11e6051-1abf-486e-9a3a-e93b03ba2da1"
>
</ReqRef><Comment>Handles reception of MA with shifted location reference.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA with shifted location reference message available"
 Guid="e0951c53-d0ce-491c-8f51-9d84c8f49e55"
>
<ReqRef
 Id="f9ca42e2-644d-47a2-b6e3-80059c79e361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d62bbe47-2ec4-482e-b95a-9f103e40bfeb"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="4b26ec5f-a027-4caa-bca8-cd8c1bb56153"
>Available ( aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE )</PreCondition><PreCondition
 Guid="1d3581de-d6a2-4ce9-aa78-ab337178f1a0"
>NOT (THERE_IS X IN Kernel.BrakeCommands.EmergencyStops | X.Reason == Kernel.BrakeCommands.BrakeReasonEnum.OrderFromRBC)</PreCondition><PreCondition
 Guid="b64a17be-a369-4227-8a64-806ce5246093"
>Kernel.AcceptInformation.MovementAuthority( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4f874ce0-62dc-4762-ae3b-b8e6efe9f83b"
>Kernel.MA.MALvl2or3ProfileReceived (
    Packet =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.LEVEL_2_3_MOVEMENT_AUTHORITY,
    NID_BG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG,
    SectionStartTimer =&gt; MessageTypes.TimeResolution ( time =&gt; aMessage.MOVEMENT_AUTHORITY.T_TRAIN),
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)</Action><Action
 Guid="50e62eff-bd12-4fa0-b4e8-45ee5c8367fa"
>Kernel.MA.MATimers.LOATimerStart &lt;- MessageTypes.TimeResolution( time =&gt; aMessage.MOVEMENT_AUTHORITY.T_TRAIN )</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="efd7e4a0-0976-4e75-a0bf-44bf43ea2d60"
>
<ReqRef
 Id="d96e7170-b578-4e28-bb03-82d0b7cc6a6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ff5dcd7-fe8c-4935-a366-45ba90782a7c"
>
</ReqRef><ReqRef
 Id="e1e59e57-94a5-48ea-bb40-d183aa229e20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb1402be-bd1c-4b6d-8595-3da378ee1c86"
>
</ReqRef><ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e62eeb4-d58e-4f3a-9b18-e8820c406729"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4cc24e9-8dc6-4876-9d7b-50056065804b"
>
</ReqRef><Comment>Handles reception of gradient profile received with the MA with shifted location reference message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile Available"
 Guid="e9fe62d0-1640-44f1-9c36-c482cd55f30c"
>
<PreConditions>
<PreCondition
 Guid="a5e3f812-5a61-4d2a-a9e0-fecf227bd597"
>THERE_IS X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)</PreCondition><PreCondition
 Guid="b77dcd5e-c2c8-4793-a2fe-7b8ca03a5003"
>Kernel.AcceptInformation.GradientProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="de6a5e1e-348b-4e9c-bccf-982f442bbe08"
>Kernel.TrackDescription.Gradient.GradientProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)
).GRADIENT_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="49a0e5a1-4301-4f0d-bc43-dde40199e6ea"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a57c4791-c694-4651-b08c-5df6e04bbaf0"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="43c6e11f-3417-4e26-97b8-c7670a26fc5c"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b425dba-b901-4b19-a647-e5d3d787cc03"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33517ac4-079c-406b-b78d-662e175b0540"
>
</ReqRef><Comment>Handles reception of the international static speed profile received with the MA with shifted location reference message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="fd27123e-582d-4239-ac06-c8c812562d93"
>
<PreConditions>
<PreCondition
 Guid="1e449a09-2d58-4e98-bf96-e4c20fedc9a7"
>THERE_IS X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)</PreCondition><PreCondition
 Guid="bb21a3a7-49d9-4e2e-9d18-88cde3c927d4"
>Kernel.AcceptInformation.InternationalSSP( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="17168c31-dd74-4a16-955d-9457e6b8c283"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)
).INTERNATIONAL_STATIC_SPEED_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="a912d48d-042d-4141-9dfa-c604721ebf86"
>
<ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="730778b3-1d19-40be-be00-a57d0c264188"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a84fadee-f346-4d75-89b5-3c3e5a6b6728"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9def430a-656d-4fbf-be90-42fbbe5a8174"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0df2b3b7-70f9-4662-9009-e5ff1f7c5c4f"
>
</ReqRef><Comment>Handles reception of the list of balises for SH area received with the MA with shifted location reference.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="14ee4ae9-28d9-4315-ba82-e446fe5c33b3"
>
<PreConditions>
<PreCondition
 Guid="2b0920fa-84f2-444d-bb33-ffc6c05d228c"
>THERE_IS X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="976a9269-bc7f-4f83-bd50-8a46545db62f"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; (FIRST X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)).LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="d438dc8b-7936-4bcf-8833-97af765a4527"
>
<ReqRef
 Id="de18f207-08ba-467b-a877-d3c5a458123d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0ed54168-0a74-4d24-88f7-fcbdd7fbf41d"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c99cb77c-5ecb-4070-a2bb-c51caf609161"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="009de7e6-01e2-4a88-b881-6f25fba67f45"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a4ec81e-1c59-40cb-aee3-2d648ef31416"
>
</ReqRef><Comment>Handles reception of mode profile received with MA with shifted location reference message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="5fd08ada-39f6-43b7-bb09-1af3639e5a10"
>
<PreConditions>
<PreCondition
 Guid="4db7c2bd-92a6-46fa-8e2a-21d174da1a53"
>THERE_IS X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)</PreCondition><PreCondition
 Guid="ee2a8e11-244d-4347-8cba-8d262cc63430"
>Kernel.AcceptInformation.MovementAuthority(aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6fc1e57f-7584-4af7-b92a-c41bcf7f6e58"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infillModeProfile parameter.</Comment>
Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG)
)
).MODE_PROFILE,
    GenericLSMarker =&gt; False,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG),
    infillModeProfile =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle common packets"
 Guid="869557a0-0507-4938-a986-1cd81407d126"
>
<Comment>Handle common packets (as described in Subset-026 Paragraph 8.4.4.4.1.1) received with a MA with shifted location reference message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle common packets"
 Guid="b190dcf2-d2fd-42bb-a13b-1f32d317ef08"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c7f0a384-3a4a-444b-b3e3-fdb95fb71bd0"
>Messages.HandleCommonPackets (
    Packets =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1,
    Time =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.T_TRAIN,
    NID_LRBG =&gt; aMessage.MA_WITH_SHIFTED_LOCATION_REFERENCE.NID_LRBG
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track ahead free request message available"
 Guid="94458279-c5f8-4ad9-8905-dba6a4e03d8e"
>
<ReqRef
 Id="9f590dd5-5917-4dd1-bc6d-a17f6fff66a8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c6f1dafb-4228-4bbf-9cf0-3dc3b6b2b7ba"
>
</ReqRef><ReqRef
 Id="39d3a3da-a2a7-44e3-858d-5549ecf03336"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="723fe0d6-1315-48b0-b567-e63d38f4b7b4"
>
</ReqRef><ReqRef
 Id="d791550a-a843-44fe-8bf3-174bad2c8112"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a323a74e-0b84-4ac3-9ccc-2adc8bbae466"
>
</ReqRef><ReqRef
 Id="2a9d3fd0-c8d7-4772-96d9-a87b680e4435"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="423a9267-acf6-41ab-9f8a-55141ab330ce"
>
</ReqRef><ReqRef
 Id="2c9bebd4-e758-4982-ae9b-92e657bfcba2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="02c0575a-4d03-411b-a11d-1aa64b1cd3d9"
>
</ReqRef><Comment>Handles reception of Track ahead free request.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Track ahead free request message available"
 Guid="ab7cd9b2-b961-4259-b7d7-183625d8add1"
>
<PreConditions>
<PreCondition
 Guid="49e1775e-6397-4477-91a0-21ca5473c6f7"
>Available ( aMessage.TRACK_AHEAD_FREE_REQUEST )</PreCondition><PreCondition
 Guid="36fb851a-d153-48c9-ad48-90abca5408c1"
>Kernel.AcceptInformation.TrackAheadFreeRequest( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a9e8f466-9aaf-47c1-ae92-7d4f01e53b0c"
>Kernel.TrackAheadFree.TrackAheadFreeRequestReceived(  aMessage =&gt; aMessage.TRACK_AHEAD_FREE_REQUEST )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Infill MA message available"
 Guid="ed471ca1-d692-4236-a58c-bfb34482b2b2"
>
<ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ffd8fa69-6a8a-4a28-b335-5593a40ea323"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d6de3548-9a65-4ada-a1ea-64a1c5951ce6"
>
</ReqRef><ReqRef
 Id="eca6c9fc-15bb-4b61-8142-88af3b8e685f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="83a5a26a-12f1-455a-9292-86eb8210ba4e"
>
</ReqRef><ReqRef
 Id="ecaefeed-fa89-4186-b8b7-e63999df3603"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fa7cb1f2-644d-4672-b24d-350205f7137f"
>
</ReqRef><ReqRef
 Id="6e740969-1d8d-40d5-bcaf-7bf18e08aa4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="59aa4caf-5770-4786-9d48-e880bbbf674a"
>
</ReqRef><ReqRef
 Id="00d98bf0-9d6e-4e2d-a5fb-90d444caf626"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2ce9fccf-40a0-4df1-b7bd-f56c19f2e794"
>
</ReqRef><Comment>Handles reception of Infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Infill MA message available"
 Guid="d88ca5bb-9db1-4adf-b76e-e87731cb14a6"
>
<PreConditions>
<PreCondition
 Guid="2218137b-5a46-48c7-996e-77239bd0276d"
>Available ( aMessage.INFILL_MA )</PreCondition><PreCondition
 Guid="ef9e6dde-adf6-4d12-a2ca-7091646da7e6"
>NOT (THERE_IS X IN Kernel.BrakeCommands.EmergencyStops | X.Reason == Kernel.BrakeCommands.BrakeReasonEnum.OrderFromRBC)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="809de9ec-27ff-497b-9205-0e2b6911d6f0"
>
<ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8b1d94b9-e02c-457e-946a-939fa8d57364"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad60a6bc-c5f5-4cd4-98a5-c2cb32f5ff0b"
>
</ReqRef><Comment>Handles reception of the gradient profile received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="4218fd19-8f26-4510-9ae3-e18dfbf6ecbd"
>
<PreConditions>
<PreCondition
 Guid="bcf830a4-2cb8-4f5c-aece-406e34675d43"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="a8c048dc-51d4-4ce1-8831-889a2580ac48"
>Kernel.AcceptInformation.GradientProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a2b38d73-5e60-42ea-9e2c-6a64eaf7cf69"
>Kernel.TrackDescription.Gradient.GradientProfileReceived ( Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.GRADIENT_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.GRADIENT_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).GRADIENT_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="09c578a2-b125-4623-afb8-2ba76f8bdb6b"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="517c059e-f669-4041-9fbe-8d91259a0f77"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="060b78b2-fcda-468c-b20a-0ca58063a19a"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="df1a7404-8367-423d-ae16-b80a7dc9b39a"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f8a3146-5f2a-4c24-9107-0c83d059a02f"
>
</ReqRef><Comment>Handles reception of the international static speed profile received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="5fb0e108-73b2-4fc9-b70a-4f267c4b45ba"
>
<PreConditions>
<PreCondition
 Guid="68ee575c-5c2b-46a0-a81b-62544325fcd2"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="4545c7d0-e8f0-4a34-9b7c-56e858fe7d45"
>Kernel.AcceptInformation.InternationalSSP( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b3cb23ea-9165-4bcb-a880-353cfca91157"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.INTERNATIONAL_STATIC_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).INTERNATIONAL_STATIC_SPEED_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition Change of traction system available"
 Guid="bf72a2dd-3b8e-4bf1-a7db-38827dd90bcf"
>
<ReqRef
 Id="9221690b-b0bc-4a5c-9307-9de49243cfef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="759aae95-d295-4dfd-82db-b901188aea27"
>
</ReqRef><ReqRef
 Id="2559c745-3a6f-444a-b3bd-fb143a2a1fc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95d8b73a-d2b7-47d8-bb7b-c58145965d72"
>
</ReqRef><Comment>Handles reception of the track condition change of traction system received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of traction system available"
 Guid="fa19a9c3-b371-40e8-8cb1-144915f25dbd"
>
<PreConditions>
<PreCondition
 Guid="e55c11f5-00ce-46cb-a710-7565fae7d0a9"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="fb6c8bad-7126-47a1-b4ad-eadbcf445669"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fa850432-63d9-48ae-b47d-299243354066"
>Kernel.TrackDescription.TrackConditions.TractionSystems.HandleTractionSystemProfile (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="49a1737e-f58b-41ac-a045-65ff9c2dc65a"
>
<ReqRef
 Id="3b292c0a-1360-49a7-9047-9707757f6e7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e67c35c-f142-43e8-b6e3-6d0d2b810729"
>
</ReqRef><ReqRef
 Id="526da681-fc2c-4e56-908e-7d41f5632d7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5d5a033-7370-4b9a-999f-881bc90eff7a"
>
</ReqRef><Comment>Handles reception of the track condition change of allowed current consumption received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="84b6618c-3b05-4dd6-9f7d-8bbe31c3e461"
>
<PreConditions>
<PreCondition
 Guid="9182c05b-0dce-4b58-800a-2c16e7b2202d"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="3f5bd08b-7cc8-4e0a-84ed-db9ed6881250"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4c693d85-576a-4809-a9df-e549a0f76bc1"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.HandleCCTrackConditionProfile (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="1e3c7c24-198c-43ed-975b-dbe5a441caf3"
>
<ReqRef
 Id="7e7c641f-fe52-42ac-9aa8-12e5c7dfd6b2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c6272465-206f-4fd5-958d-983191281a02"
>
</ReqRef><Comment>Handles reception of level transition orders received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="b23111b6-dc5d-4ef3-bcdc-8872f1653ec4"
>
<PreConditions>
<PreCondition
 Guid="8eba5cd9-0030-4d92-826b-c91887c836ed"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.LEVEL_TRANSITION_ORDER )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="b42d48ad-3250-438c-a195-c97d3cb743b4"
>Kernel.AcceptInformation.LevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fd9f395f-4d3f-45ad-b8bf-3444ca9d3d17"
>Kernel.LevelTransition.LTOReceived ( Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.LEVEL_TRANSITION_ORDER )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_TRANSITION_ORDER.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).LEVEL_TRANSITION_ORDER , aDistanceFromRef =&gt; 0.0 )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="e2d83bd2-c2ef-4510-88fa-5f6292e75a18"
>
<ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bf036364-b9e1-4453-bb0c-eb346d6174fe"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a60107c0-a357-412b-b3f0-d6a4c4139a49"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4b007e56-4b83-41fd-a3d5-e4716d4e0331"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1a455433-c3fe-46b5-bc9f-655a56809ec5"
>
</ReqRef><Comment>Handles reception of the list of balises for SH area received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="List of Balises for SH Area available"
 Guid="8339dfdf-bed3-49c0-92a1-bc0b9c521c0d"
>
<PreConditions>
<PreCondition
 Guid="8d1d3d3e-10f9-4723-8aa8-2915362a224f"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="28f92ddd-95f2-4488-804f-e67699a4bd42"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.LIST_OF_BALISES_FOR_SH_AREA)
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)).LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Axle Load Speed Profile available"
 Guid="2da3df56-f97f-4132-bcb9-3f125bd7d0fe"
>
<ReqRef
 Id="a3345820-31df-4b78-835f-d02b8d42d3bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="87ae5fbf-da3e-4c27-9ec5-33b188572d1b"
>
</ReqRef><ReqRef
 Id="9e4cc30b-7c23-4202-aa4b-87839eea29a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a8758e3b-cab7-40df-abb4-acba8a6e6027"
>
</ReqRef><Comment>Handles reception of axle load speed profile received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Axle Load Speed Profile available"
 Guid="5a6d43be-4c48-4591-9ac8-1da28f5da208"
>
<PreConditions>
<PreCondition
 Guid="558b0d5e-62b6-4ffb-8ee9-ef1aa6a58f16"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.AXLE_LOAD_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.AXLE_LOAD_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="5f6c012a-e456-42e2-aa5e-7c27ef1f9429"
>Kernel.AcceptInformation.AxleLoadSpeedProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e5f68e11-6242-45e0-8deb-9bc9335d325a"
>Kernel.TrackDescription.AxleLoad.AxleLoadProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.AXLE_LOAD_SPEED_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.AXLE_LOAD_SPEED_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)).AXLE_LOAD_SPEED_PROFILE,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Permitted Braking Distance Information available"
 Guid="b6df4d30-4c3f-4a9f-934d-3aa594e3e8da"
>
<ReqRef
 Id="1b02a3e8-5313-4a1e-8209-c203e96ab40f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73d23260-02d9-4bd6-a0cf-8464b1764f5c"
>
</ReqRef><ReqRef
 Id="faca2edb-7220-4d55-bebe-f367d8f8d94a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c462ab8-8908-4783-94c0-4637c690ff08"
>
</ReqRef><Comment>Handles reception of permitted braking distance information received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Permitted Braking Distance Information available"
 Guid="2cea8dc7-e49e-4495-ab64-e4a9b68556e1"
>
<PreConditions>
<PreCondition
 Guid="b8f813f2-f279-4d39-ae91-c7323f1d65da"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.PERMITTED_BRAKING_DISTANCE_INFORMATION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.PERMITTED_BRAKING_DISTANCE_INFORMATION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="3f657473-2f73-41ca-b89e-0c9a0df91a17"
>Kernel.AcceptInformation.PermittedBrakingDistanceInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="93e1181a-16f8-460e-8ca9-87d3734f27d1"
>Kernel.TrackDescription.PermittedBrakingDistance.PermittedBrakingDistanceProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.PERMITTED_BRAKING_DISTANCE_INFORMATION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.PERMITTED_BRAKING_DISTANCE_INFORMATION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).PERMITTED_BRAKING_DISTANCE_INFORMATION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="1b6bd578-165b-4fb1-9f00-7ab79fcac232"
>
<ReqRef
 Id="37cb1c8d-6ea0-43c6-85a9-6ce724bf590e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ce31a7e-9d7d-414b-8150-3ede9f3d4f22"
>
</ReqRef><ReqRef
 Id="2d4205fe-a62e-4306-88c0-fa8ed50b9d93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ddbcb61-3169-4872-a64a-5e5ec0ce232c"
>
</ReqRef><Comment>Handles reception of temporary speed restrictions received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="476d7583-5d10-415d-b0ed-904df12a1a4d"
>
<PreConditions>
<PreCondition
 Guid="84ba19f9-9586-4ea4-84c6-0d52ebd85280"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TEMPORARY_SPEED_RESTRICTION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TEMPORARY_SPEED_RESTRICTION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="8495a813-c5d6-4966-81b6-5fca256033a3"
>Kernel.AcceptInformation.TemporarySpeedRestriction
(
    aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC,
    aNID_TSR =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TEMPORARY_SPEED_RESTRICTION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TEMPORARY_SPEED_RESTRICTION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).TEMPORARY_SPEED_RESTRICTION.NID_TSR
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="842e8657-fcae-4e63-ab39-8b4349754b37"
>Kernel.TSR.TemporarySpeedRestrictionsProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TEMPORARY_SPEED_RESTRICTION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TEMPORARY_SPEED_RESTRICTION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).TEMPORARY_SPEED_RESTRICTION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="adaf9552-d0bf-4ffa-9cc0-43e5cc271f17"
>
<ReqRef
 Id="fcf6574b-fd16-4246-81d9-07cda44db502"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9ddc7025-60aa-44fe-a64b-0cd48a6b766c"
>
</ReqRef><ReqRef
 Id="a12cbea0-bfe5-4f24-ae74-56261d93466b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ec3efb6-a89a-4f3a-9429-73df5c52b48b"
>
</ReqRef><Comment>Handles reception of TSR revocation received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="0dd78097-fd2d-4ca0-bd6f-47fe7a626b7a"
>
<PreConditions>
<PreCondition
 Guid="24ba1ee6-88bd-42ca-af8a-378c8a906432"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TEMPORARY_SPEED_RESTRICTION_REVOCATION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TEMPORARY_SPEED_RESTRICTION_REVOCATION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="2cc6a543-e080-4624-9a63-b5e9d24f8090"
>Kernel.AcceptInformation.TemporarySpeedRestrictionRevocation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a551717a-738e-4270-a6fa-d850669383d4"
>Kernel.TSR.TemporarySpeedRestrictionRevocationReceived
(
  Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TEMPORARY_SPEED_RESTRICTION_REVOCATION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TEMPORARY_SPEED_RESTRICTION_REVOCATION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)).TEMPORARY_SPEED_RESTRICTION_REVOCATION
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition available"
 Guid="8ad11f95-a253-408a-83a8-df1141565a3d"
>
<ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3183b991-9b4f-48d9-b7b3-a5c640c26284"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="526c6ec2-2a18-4432-8cda-e3d9364ef438"
>
</ReqRef><Comment>Handles reception of the track condition data received with infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Track Condition available"
 Guid="bd372374-d044-4c4a-b376-b5a25caf3af3"
>
<PreConditions>
<PreCondition
 Guid="5fb5c054-c0a3-4bd2-820e-bff4cd6e12de"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="8c14af74-7fe8-4240-ac87-1ff0fb823ca6"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b18cbdb5-19a4-4699-97c7-9862eea93972"
>Kernel.TrackDescription.TrackConditions.General.TrackConditionProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).TRACK_CONDITION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track Condition Station Platforms available"
 Guid="eb92efe4-d6f4-4df3-bc7a-218c5505af7c"
>
<ReqRef
 Id="47c59e98-996c-4daa-84b7-bda20f4e45ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2ed3082-e73e-450c-a788-b0a7e8e9d8da"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2647b78f-77cb-451d-a408-5c9a282a1115"
>
</ReqRef><Comment>Handles reception of the track condition station platforms data received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Track Condition Station Platforms available"
 Guid="8b338002-2827-4de2-99a1-9477e7136665"
>
<PreConditions>
<PreCondition
 Guid="2ebef2d7-48ab-4ab2-bca0-1a8434414856"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION_STATION_PLATFORMS )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION_STATION_PLATFORMS.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="c725eead-ee8d-49e4-b98c-6bac616c815e"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5aee1fbb-a67c-4c02-b152-8f88f43df22b"
>Kernel.TrackDescription.TrackConditions.StationPlatform.SPTrackConditionProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.TRACK_CONDITION_STATION_PLATFORMS )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.TRACK_CONDITION_STATION_PLATFORMS.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).TRACK_CONDITION_STATION_PLATFORMS,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Route Suitability Data available"
 Guid="1cfcd676-857b-4365-ae5e-e92d658219b7"
>
<ReqRef
 Id="3eae43ab-6f26-4908-9360-5a8ce0bec069"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1aa70151-07e5-4921-beff-f097d27213fd"
>
</ReqRef><ReqRef
 Id="655cd82d-364d-40cf-9540-62e1d8292f94"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b12c597f-dc05-4f1b-970f-b7959d209833"
>
</ReqRef><ReqRef
 Id="21443e68-000d-4c84-b4f4-17c5373d0a4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="beb41e31-cb2a-4888-8dce-3f9fa2fdbdd3"
>
</ReqRef><Comment>Handles reception of the route suitability data received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Route Suitability Data Available"
 Guid="cfe0f284-c660-462a-b15f-f16501bcb05d"
>
<PreConditions>
<PreCondition
 Guid="a9a94a8a-24a1-42dd-bba4-78709ada8176"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.ROUTE_SUITABILITY_DATA )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.ROUTE_SUITABILITY_DATA.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="c4325ecd-7393-4142-9901-6ccdacf41399"
>Kernel.AcceptInformation.RouteSuitabilityData( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7cd439db-30ed-4037-bc40-1110364e540b"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.ROUTE_SUITABILITY_DATA )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.ROUTE_SUITABILITY_DATA.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)).ROUTE_SUITABILITY_DATA,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Adhesion factor available"
 Guid="1cc78b43-035a-41fb-8dfb-df492da7fc7e"
>
<ReqRef
 Id="7ee3b877-7ff2-4541-aa86-6af70c0cb7c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8cac07d0-dfd1-48c1-acac-7604cba50859"
>
</ReqRef><ReqRef
 Id="903134a0-7b20-4b2e-ab42-30cae27fea81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a5ceb48-4176-42ca-90ff-b2568c293889"
>
</ReqRef><Comment>Handles reception of the adhesion factor data received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Adhesion factor available"
 Guid="257ea289-d1d8-49d7-9704-b48712ad8798"
>
<PreConditions>
<PreCondition
 Guid="80408613-850b-4542-af2f-1b2a0349748d"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.ADHESION_FACTOR )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.ADHESION_FACTOR.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="d4beeaaf-a204-4d36-93ec-efccec1d2c23"
>Kernel.AcceptInformation.AdhesionFactor( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9eea0944-023f-458e-b011-51c3a16f9c71"
>Kernel.TrackDescription.AdhesionFactors.AdhesionFactorReceived (
    aPacket =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.ADHESION_FACTOR )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.ADHESION_FACTOR.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)).ADHESION_FACTOR,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="ba5e7903-74f0-416c-ace9-cdc1392a7a73"
>
<ReqRef
 Id="de18f207-08ba-467b-a877-d3c5a458123d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="890d979e-b69a-40ed-9fb9-9575e833679d"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="016e39a9-3d5e-4d6c-b7b4-277c5eb831c0"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5849976f-31a9-427a-bf65-722539d848e9"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="839a263a-042a-4c77-b7f1-60be6a6315af"
>
</ReqRef><Comment>Handles reception of mode profile received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mode profile available"
 Guid="5723e1bb-1530-43ae-b94a-8989fd2a71a0"
>
<PreConditions>
<PreCondition
 Guid="568a6d32-c46c-450a-86ed-fa1646521c57"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="69c58278-8f01-4110-8454-5af79862a1d3"
>Kernel.AcceptInformation.MovementAuthority( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3913ccf6-bc3b-423b-a4da-7742b09c8e22"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the infillModeProfile parameter.</Comment>
Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.MODE_PROFILE )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.MODE_PROFILE.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)).MODE_PROFILE,
    GenericLSMarker =&gt; False,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG),
    infillModeProfile =&gt; False 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level Crossing information available"
 Guid="83d31b12-3729-4612-a022-6a378471613a"
>
<ReqRef
 Id="8a060a51-4b93-4eb7-aa9b-5b5c264b6820"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93cd11fc-bb31-4241-a0b8-c95d7b9c0a1b"
>
</ReqRef><ReqRef
 Id="4744429f-fce3-4833-817a-c0cd74ffcd7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ade4197-9d72-460f-91cd-d2d2647b5870"
>
</ReqRef><Comment>Handles reception of the level crossing data received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level Crossing information available"
 Guid="f1f88752-42c8-46c1-949f-32f54334922e"
>
<PreConditions>
<PreCondition
 Guid="68268669-c6e7-4284-9590-1d554915b124"
>THERE_IS X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.LEVEL_CROSSING_INFORMATION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_CROSSING_INFORMATION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)</PreCondition><PreCondition
 Guid="7ab7aa09-5db4-4952-aeea-41dca5bb4a26"
>Kernel.AcceptInformation.LevelCrossingInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3618ea68-ad8e-4bc6-98ef-e85daf77e060"
>Kernel.LX.LXReceived (
    Packet =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | (
  Available ( X.LEVEL_CROSSING_INFORMATION )
    AND  
  Messages.ConsiderRBCPacket(
        Q_DIR =&gt; X.LEVEL_CROSSING_INFORMATION.Q_DIR,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG)
)
).LEVEL_CROSSING_INFORMATION,
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="3f894663-c54e-41c2-a609-1a567adb163c"
>
<ReqRef
 Id="571b7bcf-500a-4e43-8f4b-dfb64cfd4845"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c9a3d6a-a47e-4525-a5b6-2b54ace48bde"
>
</ReqRef><ReqRef
 Id="796923a0-8b8a-4e7b-8af3-43f3398b27dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d02d5846-bae2-414d-a6ae-fb865c435047"
>
</ReqRef><ReqRef
 Id="54c20a27-60da-4df1-80ba-7ba841d7258f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98547e0c-96df-4baf-9a68-09fe44eca0db"
>
</ReqRef><ReqRef
 Id="46356051-e464-4ceb-b54c-41ef8dc6017f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dbc0f25b-ddbb-4685-8420-8e4b0a7a1bfd"
>
</ReqRef><ReqRef
 Id="f3aec789-8e42-4041-befb-bf3d53519577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32ef624a-a4cc-426a-931b-7c4f6e927002"
>
</ReqRef><ReqRef
 Id="f32ad7de-67d9-4075-bb38-75a13996ad98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2bf1f164-969b-4492-9156-240f05d94b83"
>
</ReqRef><ReqRef
 Id="c93e250c-fc42-406f-9706-6ec7488b8982"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79a06afb-3269-4e4e-a2ce-e28a5cf657fb"
>
</ReqRef><ReqRef
 Id="690dfc40-042d-4c8d-9e60-17b85d455fd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7f1b68f-0c7a-4303-889c-6209ea0a101c"
>
</ReqRef><ReqRef
 Id="f08e576d-1c61-4c2b-b742-29f729a5728f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b41b796d-ad7e-48bc-b807-67420d2b64bf"
>
</ReqRef><Comment>Handles reception of reversing area information (and possibly reversing supervision information) received with the infill MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="abc54951-3a16-4e4b-9f70-5973641d7308"
>
<PreConditions>
<PreCondition
 Guid="ce890c1b-352c-4169-aac9-4eae048a5315"
>Messages.RevAreaPacketAvailable(
    aPacket =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | Available(X.REVERSING_AREA_INFORMATION)).REVERSING_AREA_INFORMATION,
   NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG )

  OR  

Messages.RevSupPacketAvailable(
    aPacket =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | Available(X.REVERSING_SUPERVISION_INFORMATION)).REVERSING_SUPERVISION_INFORMATION,
    NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="69e91bbd-8a57-46be-bda5-64b428bb0975"
>Kernel.TrackDescription.ReversingArea.ReversingAreaOrSupervisionInformationReceived
(
    RvAreaPacket =&gt; Messages.ProvideRevAreaPacketToHandle(
        aPacket =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | Available(X.REVERSING_AREA_INFORMATION)).REVERSING_AREA_INFORMATION,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG ),
    RvSupPacket =&gt; Messages.ProvideRevSupPacketToHandle(
        aPacket =&gt; (FIRST X IN aMessage.INFILL_MA.Sequence1 | Available(X.REVERSING_SUPERVISION_INFORMATION)).REVERSING_SUPERVISION_INFORMATION,
        NID_LRBG =&gt; aMessage.INFILL_MA.NID_LRBG ),
    aDistanceFromRef =&gt; DistanceFromCurrentLRBG(aMessage.INFILL_MA.NID_LRBG) 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initiation of a communication session message available"
 Guid="3e9c2f71-7759-4362-8ed1-97a91010386c"
>
<ReqRef
 Id="5c22942d-5616-44c5-8707-c8edf2889ba9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e499a6d-626e-4b40-8786-2c0ce268c05c"
>
</ReqRef><ReqRef
 Id="0e6b5d89-69d9-43ff-8971-5f84c02aa2d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3d9f4ac-c494-49dd-aca2-336102819dfe"
>
</ReqRef><ReqRef
 Id="5553cd84-d563-49a7-8514-0b4890a35066"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f978fd61-c163-44bb-9cb9-4a96cc73951f"
>
</ReqRef><Comment>Handles reception of Inifiation of a communication session.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initiation of a communication session message available"
 Guid="8a935a5f-97b3-472e-b592-2d1156866e13"
>
<PreConditions>
<PreCondition
 Guid="235a0300-92ec-446e-821a-89a960c55b93"
>Available ( aMessage.INITIATION_OF_A_COMMUNICATION_SESSION )</PreCondition><PreCondition
 Guid="2939df48-9c54-4058-a752-b3f241d051a2"
>Kernel.AcceptInformation.InitiationOfSession( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="12ed8134-932c-460b-b43c-93b9450e806e"
>RBCConnection.HandleInitiationOfACommunicationSession ( aMessage =&gt; aMessage.INITIATION_OF_A_COMMUNICATION_SESSION )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Train accepted message available"
 Guid="725718e5-f5f3-4f4d-b754-8dc45947c867"
>
<ReqRef
 Id="1494c427-572b-4bfa-bfea-2aa68994f26e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="35b0fb55-f322-40c7-b19f-c98132dbe02f"
>
</ReqRef><ReqRef
 Id="7c2005be-ddda-445e-89ca-07171e96ad2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="733d7266-45ff-4358-93bb-e366e518f3ce"
>
</ReqRef><ReqRef
 Id="ea01ea66-b8e6-438d-93a4-4207dbd3797f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="51612e0f-e310-42bd-a501-f786fe711fe1"
>
</ReqRef><Comment>Handles reception of Train accepted by the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Train accepted message available"
 Guid="2dfc97cc-3038-4f6e-aa93-0ae81b2b5952"
>
<PreConditions>
<PreCondition
 Guid="004c4b64-a44e-4794-961c-bbe0398ae621"
>Available ( aMessage.TRAIN_ACCEPTED )</PreCondition><PreCondition
 Guid="ae45ae11-9483-4bb0-8603-0ae950a964e3"
>Kernel.AcceptInformation.TrainAccepted( aSource =&gt; Kernel.AcceptInformation.SourceEnum.RBC )</PreCondition></PreConditions>
<Actions>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Prepare acknowledgement if requested"
 Guid="05f32dd2-3e73-453b-8a77-e33513624811"
>
<ReqRef
 Id="5d32be4c-e8c6-495c-851d-1b636031e4a8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a15ebf8d-52d8-4401-9ec2-e5b74d7c7a42"
>
</ReqRef><ReqRef
 Id="b0883199-89ae-4c45-aa2d-e2ea6f20c0a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1f005e0-ca68-4d0e-81ff-ff30cb629e47"
>
</ReqRef><Comment>If the received message requires an acknowledgement, immediately prepare the message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Prepare acknowledgement if requested"
 Guid="73d9e923-767a-4b43-b010-f00927f93139"
>
<PreConditions>
<PreCondition
 Guid="c1dca0d3-0c3e-4b48-861c-8a4487b94bdc"
>Messages.MESSAGE.TRACK_TO_TRAIN.GetM_ACK(Messages.UpdatedReceivedMessage( RBCConnection.CurrentRBCConnection())) == Messages.M_ACK.Acknowledgement_required</PreCondition></PreConditions>
<Actions>
<Action
 Guid="19b6e284-2a5e-48ed-8f16-6aa19fd8ac3e"
>RBCConnection.CurrentRBCConnection().SendAcknowledgement()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="10"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProcessOutgoingMessages"
 Guid="c36b656b-aa9b-4f02-a9d4-d503cfa217a4"
>
<Comment>The outgoing messages are sent when specific actions are performed by the on-board equipment.

But at the end of the cycle the conditions required for sending of position report can become satisfied =&gt; they are evaluated and if satisfied, the position report is sent.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send position report"
 Guid="72736422-33d7-492a-81ac-6cfd6cf0eefd"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send position report"
 Guid="30a80c20-5a69-4859-9aba-ef425f481c6d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="506f0d2b-e726-4168-92cc-489acdd72744"
>PositionReport.SendPositionReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="10"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RemoveAcknOfTrainDataFromMessage"
 Guid="5bf5af4f-ca3b-4886-a2f7-634315c9a975"
>
<ReqRef
 Id="c887c56e-758e-426a-a728-cf723b3b2baf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1631831e-a674-4479-8bc2-3fac7a8be03e"
>
</ReqRef><Comment>Removes Acknowledgement of Train Data from the message.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.Message"
 Name="aMessage"
 Guid="a024ac83-92fc-4c42-be6c-32bf34baccfd"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Remove Acknowledgement of Train Data from message"
 Guid="1d9f0278-f821-4a69-9457-5de267cb854f"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove Acknowledgement of Train Data from message"
 Guid="4cd952f4-5d0e-44f2-ad7e-66a192579cb4"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0afb9105-bdf8-47d2-9a68-8ec3761547af"
>aMessage.ACKNOWLEDGEMENT_OF_TRAIN_DATA &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="IncomingMessagesCol"
 DefaultValue="[]"
 VariableMode="Internal"
 X="600"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MessagesToHandle"
 Guid="f2c2d0cc-af62-45b6-b849-b52dd4eb46dc"
>
<ReqRef
 Id="c887c56e-758e-426a-a728-cf723b3b2baf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c900db09-2078-4202-9b78-6a61d34165d9"
>
</ReqRef><Comment>Stores the messages sent by the Accepting RBC before it becomes the supervising RBC.</Comment>
</Variable></Variables>
</NameSpace>
