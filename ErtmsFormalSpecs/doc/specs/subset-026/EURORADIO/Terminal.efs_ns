<NameSpace
 X="500"
 Y="40"
 Width="100"
 Height="50"
 Name="Terminal"
 Guid="e36fb349-046c-4d72-aac4-b928e223150a"
>
<Comment>Contains functionalities to handle terminals, terminal registrations.</Comment>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Default=""
 X="90"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TerminalStruct"
 Guid="d55c89a9-b712-45c6-a15c-1829f68822b8"
>
<ReqRef
 Id="865bbdd6-2010-4869-ab3e-bc538ce5fe4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d479d3a-f46e-441c-92ba-733d4471c6c5"
>
</ReqRef><Comment>Represents a mobile terminal.</Comment>
<Rules>
<Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Clean up"
 Guid="a7a5c641-f9f0-4813-9ea4-63b191323610"
>
<Comment>Erases the previous value of registration request sent.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clean up"
 Guid="6cdf394b-5ffd-4007-96bd-eeab3500fefa"
>
<PreConditions>
<PreCondition
 Guid="daa5316d-ac57-4417-88bb-cbc142397970"
>RegistrationRequestState.RequestState == RequestEnum.Response</PreCondition></PreConditions>
<Actions>
<Action
 Guid="67bdc697-5152-42c0-875d-a9a1b7fd2d46"
>RegistrationRequestState.RequestState &lt;- Default.RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
<Procedures>
<Procedure
 X="220"
 Y="900"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ResetRegistrationStateSMAndRegister"
 Guid="d350e2ac-bc56-4b36-a24f-d6a8bc66af49"
>
<ReqRef
 Id="07af900f-f07f-4018-abe3-bab8be32b2a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a37cfb33-89a5-490b-8116-d6e93003de18"
>
</ReqRef><ReqRef
 Id="e0778e14-e6ea-4f06-8c69-56236250b636"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b87ed868-f960-48c3-91a2-44e8bd93c8fe"
>
</ReqRef><ReqRef
 Id="68a814aa-d977-4ba8-8329-54aaaec00081"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62e13287-9274-4a10-a8d9-61bc43743daf"
>
</ReqRef><ReqRef
 Id="9f6c605e-3f76-4367-a7a4-7f4fa458ef67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acf5fff6-c2c1-4942-9f14-cfbc91462662"
>
</ReqRef><ReqRef
 Id="dcc51a42-0407-4ab9-855a-55dc04e2ce4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ccb5fde5-2b51-4838-82b0-b9adb86d4ab8"
>
</ReqRef><ReqRef
 Id="dba4721e-ecc7-46a8-945a-ca408198338c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7c5bd59-b00c-4d77-b69d-b4029a7261c1"
>
</ReqRef><Comment>The procedure starts the registering of the provided mobile terminal to the provided network, except if the terminal is already registered to the provided netword.</Comment>
<Parameters>
<Parameter
 Type="String"
 Name="aNetworkId"
 Guid="e87cbc10-8580-4bf6-b693-a86c31134b3b"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Register a terminal"
 Guid="e516dbd5-4acd-486c-9834-992ad3cfad91"
>
<ReqRef
 Id="fc32fb41-1c57-4753-a923-fe676aabf35d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98711b81-9e6c-4e8d-b7fe-f10d346bccba"
>
</ReqRef><Comment>Requests the registering of the provided mobile terminal to the provided network, if it is not already registered to that network.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Register"
 Guid="cbfd45b9-bf06-425c-8c44-df597f0f3cbd"
>
<PreConditions>
<PreCondition
 Guid="2e61b99c-8683-4040-8fab-78a11e0ea11a"
>NOT
(
  THIS.RegistrationState in TerminalStruct.RegistrationStateSM.Registered
    AND
  THIS.NetworkId == aNetworkId
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c47132cf-3f4d-4a06-9fcd-2c032a0104d5"
>THIS.NetworkId &lt;- &apos;&apos;</Action><Action
 Guid="96b3c678-84b0-4d67-949a-b1b9875d16f6"
>THIS.RegistrationRequestState.Response &lt;- False</Action><Action
 Guid="490a35a6-043f-4a5b-b79f-616b2b906f3e"
>THIS.RegistrationRequestState.RequestState &lt;- Default.RequestEnum.Disabled</Action><Action
 Guid="2bd9f770-4284-492c-bfce-076f3a3933fd"
>THIS.RegistrationState &lt;- TerminalStruct.RegistrationStateSM.NotRegistered</Action><Action
 Guid="cb5b6cd3-3863-4ab9-91a9-2dda18617be6"
>THIS.NetworkIdToRegister &lt;- aNetworkId</Action><Action
 Guid="90b0a548-226b-4bf1-b54e-6f0cae7bc962"
>THIS.RegistrationOrderIsReceived &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<StructureElement
 TypeName="String"
 Default="&apos;&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="Id"
 Guid="94afdc00-ee3b-416f-a426-21fea264a34c"
>
<Comment>Identifier of the mobile terminal.</Comment>
</StructureElement><StructureElement
 TypeName="String"
 Default="&apos;&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="NetworkId"
 Guid="a38f3a7d-5646-4e2c-9bf3-7329e3d2d746"
>
<Comment>Identifier of the network.</Comment>
</StructureElement><StructureElement
 TypeName="RBCConnection.RBCStruct"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 Name="RBCConnection"
 Guid="0af6403f-d522-46ef-ae39-17e5433e5c02"
>
<Comment>RBC connected on this terminal.</Comment>
</StructureElement><StructureElement
 TypeName="TerminalStruct.RegistrationStateSM"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="RegistrationState"
 Guid="d3a02124-c1af-448b-9925-2d693ae4c23c"
>
<Comment>Current state of registration of the terminal.</Comment>
</StructureElement><StructureElement
 TypeName="RegisteringRequestStruct"
 Default=""
 Mode="Incoming"
 Implemented="TRUE"
 Name="RegistrationRequestState"
 Guid="e54404f3-0fbf-432d-ae9d-d9cef9d49d41"
>
<Comment>Set to True when the mobile terminal was succesfully registered.</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Implemented="TRUE"
 Name="RegistrationOrderIsReceived"
 Guid="24785dd8-cf71-4f1e-b851-d1636061acba"
>
<Comment>Indicates if an order to register the mobile terminal has been received.</Comment>
</StructureElement><StructureElement
 TypeName="String"
 Default="&apos;&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="NetworkIdToRegister"
 Guid="44ce713d-dc37-4cd2-8042-0d7087e19d7d"
>
<Comment>Indicates which is the id of the network that has to be registered.</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Implemented="TRUE"
 Name="IsMainTerminal"
 Guid="212af2e8-b723-4e52-a7bf-4f428fe9aa38"
>
<Comment>Tells whether the terminal is the main one, i.e. the one to be used for every connection except for handover procedure.</Comment>
</StructureElement><StateMachines>
<StateMachine
 Default="TerminalStruct.RegistrationStateSM.NotRegistered"
 Implemented="TRUE"
 Name="RegistrationStateSM"
 Guid="67db97c6-7141-4e02-b661-ddca7847fe17"
>
<Comment>Represents the possible states of registering of mobile terminals.</Comment>
<States>
<State
 X="70"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NotRegistered"
 Guid="a7ea90ef-b040-4d71-a9e9-e24df229eef5"
>
<Comment>Initial state: the mobile terminal is not registered</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="df983598-b3b9-457b-a1d5-566901b957e1"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Registration order is received"
 Guid="beafd460-f29a-4e33-84a4-555c89a79170"
>
<Comment>If a registration order has been received, a request to register terminal is sent and the system goes to Registering state.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Registration order is received"
 Guid="7df57111-c014-46f5-9c21-22d1c682901e"
>
<ReqRef
 Id="4aa98857-a1f3-4fee-ab3c-0af871807ad8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f45b1a7b-a61b-4e25-91d5-96d6da4375bd"
>
</ReqRef><ReqRef
 Id="aa345d0e-f599-4016-b5b5-c68601d642fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad2432a5-4b3f-4b67-bb43-08e82d0ad932"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="ad7f21b5-0b7e-44df-92f1-1a7e950f69b6"
>RegistrationOrderIsReceived</PreCondition><PreCondition
 Guid="17000d60-a63d-4a8d-87a0-47828aabccfe"
>EstablishCommunicationSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9e7d5d30-f543-42e0-a83f-36e13134cba0"
>THIS &lt;- TerminalStruct.RegistrationStateSM.Registering</Action><Action
 Guid="7ef1e2fe-d075-4c5b-becf-9767795c2a0e"
>RegistrationRequestState.RequestState &lt;- RequestEnum.Request</Action><Action
 Guid="03529777-8a74-4e2a-94dc-699b28efc826"
>RegistrationOrderIsReceived &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="360"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Registering"
 Guid="0bc71bd3-f982-452e-b883-81975aa5f9ed"
>
<Comment>When an order to register the mobile terminal is received, it is in registering state</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="0d150d6b-3421-4277-8d94-8eadf4911f0d"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Registration confirmed"
 Guid="bc3769ca-433a-431f-9f52-a8bcc56bc688"
>
<Comment>When the registration to the network has been confirmed, the system goes to Registered state.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Registration confirmed"
 Guid="1161b101-0f1d-468b-b5bc-3ce06b2625e6"
>
<PreConditions>
<PreCondition
 Guid="bd93048d-c524-419d-900c-9922b8ace478"
>RegistrationRequestState.RequestState == RequestEnum.Response</PreCondition><PreCondition
 Guid="da51b472-503a-4b81-8f6b-7a8b44fa039e"
>RegistrationRequestState.Response == True</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6df5355e-80ab-4d30-9c50-07679b269768"
>THIS &lt;- TerminalStruct.RegistrationStateSM.Registered</Action><Action
 Guid="fc9c3c1f-c4be-4231-949b-288450751e54"
>NetworkId &lt;- NetworkIdToRegister</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="670"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Registered"
 Guid="b9d68c28-a04f-46a1-93f9-10dde8bbb604"
>
<Comment>When the registration confirmation is received, the mobile network is in registered state</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="f4eb8fe7-c356-4800-96ff-ac657fbcd4c7"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle registration order and Accepting RBC contact order"
 Guid="56426945-901b-44ba-9d61-d2a52a9c235d"
>
<ReqRef
 Id="9f6c605e-3f76-4367-a7a4-7f4fa458ef67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8b3f5bf-0756-4503-b92b-40aa7e757ae4"
>
</ReqRef><ReqRef
 Id="efe0a2e1-60d1-4ead-b9be-018ab45d680c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8093e127-4a44-427d-bd03-7259ca779ae8"
>
</ReqRef><ReqRef
 Id="cbb3ad4b-7d33-4161-b151-347463291135"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d855d27-e15b-4c37-9046-f2a19f825d7f"
>
</ReqRef><ReqRef
 Id="bd6563bc-06fe-447b-8afc-e210141cc921"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="071ad0a8-fb80-4bee-ab49-2dcc89fa9331"
>
</ReqRef><Comment>If an order to register to a network is received from the trackside, when it is ignored if a safe radio connection is being set-up or a communication session is already established.

Once the communication session is terminated and the safe radio connection is released, the radio network registration will be initiated for the requested network.

Note: a safe radio connection can only be set-up when the RBC connection is in state Connecting or Connected.

After that, if an order to contact an Accepting RBC was received, it will be handled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Registration order is received"
 Guid="00fe2530-9466-43d0-a4ea-93ff0660ebec"
>
<ReqRef
 Id="fc32fb41-1c57-4753-a923-fe676aabf35d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2bc826f-5bbc-465a-9345-7adec40ad738"
>
</ReqRef><ReqRef
 Id="2faeb97f-3af1-456a-b8c7-70c5bfa05105"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6f9085d8-6845-452d-9ad9-37afe7463d20"
>
</ReqRef><ReqRef
 Id="0717ecbb-ac03-4120-9e37-d836facf9136"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc99c28c-a112-4dc1-b005-ff770e16b8a1"
>
</ReqRef><ReqRef
 Id="faeb3c32-a982-46f8-b780-09e1573916e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfac7475-249d-4f29-8980-1d21c1096d3c"
>
</ReqRef><ReqRef
 Id="dba4721e-ecc7-46a8-945a-ca408198338c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c1127ba-470c-42b3-ac17-34480f6bbdeb"
>
</ReqRef><ReqRef
 Id="dcc51a42-0407-4ab9-855a-55dc04e2ce4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="70803c4a-a5f0-48d9-9141-9b8fe4177bfe"
>
</ReqRef><Comment>First, if a registration order is received, register to the network.</Comment>
<PreConditions>
<PreCondition
 Guid="750af1cd-78f4-49b1-912d-21c46b11e6fe"
>RegistrationOrderIsReceived</PreCondition><PreCondition
 Guid="b0ae7084-c070-4a83-88ad-3044024b465c"
>RBCConnection.ConnectionState not in [ RBCConnection.RBCStruct.ConnectionStateSM.Connecting, RBCConnection.RBCStruct.ConnectionStateSM.Connected ]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="065155db-ddc9-4232-a264-ba308cf6546f"
>THIS &lt;- TerminalStruct.RegistrationStateSM.Registering</Action><Action
 Guid="16d4c11f-71c2-438c-aed7-a3050f42a226"
>RegistrationRequestState.RequestState &lt;- Default.RequestEnum.Request</Action><Action
 Guid="6b794970-4b5b-4735-93d3-112b10af6e7d"
>RegistrationOrderIsReceived &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></StateMachines>
</Structure><Structure
 Default=""
 X="90"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RegisteringRequestStruct"
 Guid="aea700ad-b19c-4974-80b6-5d22976aca39"
>
<Comment>Structure to store the request of registration to a terminal : its state and response.</Comment>
<StructureElement
 TypeName="RequestEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestState"
 Guid="1674a4ba-821f-42ff-af95-0dd3e0e5d109"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Response"
 Guid="88f080df-f16a-4dd8-b0d7-d15c99981800"
>
<Comment>Contains the answer to the registration request.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="EURORADIO.Terminal.TerminalStruct"
 MaxSize="2"
 Default="[]"
 X="300"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TerminalsCol"
 Guid="5a30f190-5c2e-4e88-bd9b-c62a9ec64f57"
>
<Comment>Will contain the available terminals.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="Boolean"
 Default=""
 X="360"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TerminalIsRegistered"
 Guid="3bd20f4e-148d-4de7-89af-efb974a82094"
>
<Comment>Indicates if the provided terminal is registered.</Comment>
<Parameters>
<Parameter
 Type="Terminal.TerminalStruct"
 Name="aTerminal"
 Guid="12711288-b128-4515-ac14-d0435e91c454"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="fbe56933-1e1c-4565-830d-b4da4c31441b"
>
<Expression>aTerminal != EMPTY
  AND
aTerminal.RegistrationState in Terminal.TerminalStruct.RegistrationStateSM.Registered</Expression>
</Case></Cases>
</Function><Function
 Type="Terminal.TerminalStruct"
 Default=""
 X="360"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SecondaryTerminal"
 Guid="844d4dfe-8658-4309-a26a-3711661d3127"
>
<Comment>Provides the secondary terminal (for the accepting RBC).</Comment>
<Cases>
<Case
 Name="Several terminals available"
 Guid="5d46b97b-d730-410e-915d-a476b1f9fcff"
>
<PreConditions>
<PreCondition
 Guid="ba6bb1a1-9499-4d43-9488-846379412b3a"
>COUNT Terminals IN AvailableTerminals() &gt;= 2</PreCondition></PreConditions>
<Expression>FIRST Terminal IN AvailableTerminals() | NOT Terminal.IsMainTerminal</Expression>
</Case><Case
 Name="Only one terminal available"
 Guid="50c9ca94-020d-422e-a244-90030f6115c9"
>
<PreConditions>
<PreCondition
 Guid="1d9ec5a7-389d-4a08-8c6d-fd7020373e72"
>COUNT Terminals IN AvailableTerminals() == 1</PreCondition></PreConditions>
<Expression>FIRST Terminal IN AvailableTerminals()</Expression>
</Case><Case
 Name="No terminal available"
 Guid="16ea3502-6efd-4dad-b078-de8cff11db18"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RegistrationStatus"
 Guid="9cd9e082-0ccc-4be4-ac5f-207a724911a6"
>
<Comment>Checks whether an answer to the registration request was provided.</Comment>
<Cases>
<Case
 Name="AnswerReceived"
 Guid="b72bae4c-f483-4e08-9c28-6b2cf2ca6801"
>
<PreConditions>
<PreCondition
 Guid="9560d358-50ba-4019-aebd-3c00c8619157"
>CurrentTerminal().RegistrationRequestState.RequestState == RequestEnum.Response</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Default"
 Guid="67a14467-48f0-4dc2-b67d-4878a8b5a8f6"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RegistrationAnswer"
 Guid="307c1f2e-a545-46f3-bf4e-ef6c28767a21"
>
<Comment>Checks whether the an answer to the request was provided and give it, otherwise returns False.</Comment>
<Cases>
<Case
 Name="AnswerReceived"
 Guid="e6f5f504-32e8-4b22-a0d4-6b7b21c5bb85"
>
<PreConditions>
<PreCondition
 Guid="becf8991-6253-4b25-acd5-f7165f4ca79c"
>CurrentTerminal().RegistrationRequestState.RequestState == RequestEnum.Response</PreCondition></PreConditions>
<Expression>CurrentTerminal().RegistrationRequestState.Response</Expression>
</Case><Case
 Name="Default"
 Guid="78c9048a-28e4-4e3d-b564-5a4bb8e8c709"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Terminal.TerminalStruct"
 Default=""
 X="250"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentTerminal"
 Guid="1578f217-c304-4c22-98c7-cb41f87ae7b7"
>
<Comment>Provides the current, i.e. main, terminal. Noth that both terminals CANNOT be 
set as main at the same time. To avoid problems, use procedure EURORADIO.SetMainTerminal.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="44b79efa-d98d-4dc3-8cbc-6eaa37f11f4d"
>
<PreConditions>
<PreCondition
 Guid="a8a42f1a-d64c-49af-9943-4154d6aab89b"
>COUNT Terminals IN AvailableTerminals() != 0</PreCondition></PreConditions>
<Expression>FIRST Terminal IN AvailableTerminals() | Terminal.IsMainTerminal</Expression>
</Case><Case
 Name="Otherwise"
 Guid="4ee189ed-7288-4bc0-969d-4b32f4885cc4"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="OneMobileTerminalIsAvailable"
 Guid="e31f0ce4-5ca7-4615-9f01-e835968b6bb2"
>
<ReqRef
 Id="d88669ab-b014-4a92-b565-0f1e46f40945"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ea3d211-ac31-4faa-8ba9-4587b570b2aa"
>
</ReqRef><Comment>Indicates if at least one terminal is available.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="8a425b2a-af9b-4a02-9cbc-8d1d15189bb3"
>
<Expression>Terminal.Terminal1 != EMPTY
  OR
Terminal.Terminal2 != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="360"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="EstablishCommunicationSession"
 Guid="cc4f4bfd-00bb-4541-a811-7d04769f9382"
>
<ReqRef
 Id="4aa98857-a1f3-4fee-ab3c-0af871807ad8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2de0df57-ffa5-45fb-a62c-8a1d3498619d"
>
</ReqRef><ReqRef
 Id="49ac5c2f-c76c-4903-a7c8-2a28ea61c09c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae8519af-3c8e-4135-8b65-54a072f5fe25"
>
</ReqRef><ReqRef
 Id="72a514b1-acd2-473d-a39b-87d8f86f1624"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f45a4e2d-0cc3-4c93-88ad-1e1262803e9a"
>
</ReqRef><Comment>Is true if the on-board should establish a communication session.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="afd88ff5-02a2-4f63-a8f6-443811e90293"
>
<Expression>Kernel.ActiveFunctions.ManageCommunicationSession()
  AND  
Kernel.Mode not in [ModeEnum.SH, ModeEnum.PS]</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="250"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MobileTerminalRegisteredToNetwork"
 Guid="af2b63fd-7a74-4d0c-9dd5-640bccd97f2c"
>
<ReqRef
 Id="65314800-5286-475e-b755-60e19e8cb01d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86dca3f3-96a5-4716-aab2-e171d185f8eb"
>
</ReqRef><ReqRef
 Id="25c7ba02-1985-488d-b506-b24eef2b11b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21560c78-c017-4f92-82b7-164ed6fbfc5a"
>
</ReqRef><ReqRef
 Id="ff5aeaff-49e3-489d-816f-c49fc05bc951"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ffddbae-852a-4c6a-b270-2c53874223d9"
>
</ReqRef><Comment>Indicates if at least one mobile terminal is registered to a Radio Network.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="8d5b3f0d-e99a-4b78-a893-b7f25eb488a9"
>
<Expression>Terminal.Terminal1.RegistrationState in Terminal.TerminalStruct.RegistrationStateSM.Registered
  OR
Terminal.Terminal2.RegistrationState in Terminal.TerminalStruct.RegistrationStateSM.Registered</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="250"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HasActiveSession"
 Guid="7b48d082-5d7b-4d27-8757-6e110b3f9f7d"
>
<ReqRef
 Id="a2f8c5d0-9029-4c1f-b5bf-fee1dca550f7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7366702-ff1d-4278-b4d6-ab392caaab2b"
>
</ReqRef><ReqRef
 Id="f4b1a027-643a-48c1-a840-1735e19ae661"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1585da45-384c-4bb1-8d20-801a20e325b3"
>
</ReqRef><ReqRef
 Id="58b99381-a184-4b10-8c25-d125705b5194"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="267a1a1e-4342-4fb3-8e7e-2665a3bbf0de"
>
</ReqRef><ReqRef
 Id="0a55611b-2936-44a8-89fb-8b7fa083a761"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89286c79-15e3-4d68-8bcc-c7bef8ead11d"
>
</ReqRef><Comment>Indicates if a communication session is established with an RBC.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="10904d1f-8fc9-4d89-a374-c156b560a9fe"
>
<Expression>Terminal.Terminal1.RBCConnection.ConnectionState in RBCConnection.RBCStruct.ConnectionStateSM.Connected
  OR
Terminal.Terminal2.RBCConnection.ConnectionState in RBCConnection.RBCStruct.ConnectionStateSM.Connected</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="250"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NoTerminalRegistered"
 Guid="4fc77eaa-02d4-47ba-9c24-b05b6de0349e"
>
<ReqRef
 Id="00910a19-7134-4f24-a20b-6c88aa996ff1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0fd53875-7198-4f65-998d-556a746f45eb"
>
</ReqRef><Comment>In case no terminal is registered, connection messages must be refused. 
This function gives a quick access to this information.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="cf9003d4-f934-4481-ad3e-ee70fd8c65ae"
>
<Expression>(
Terminal1 == EMPTY
  OR
NOT TerminalIsRegistered(Terminal1)
)
  AND
(
Terminal2 == EMPTY
  OR
NOT TerminalIsRegistered(Terminal2)

)</Expression>
</Case></Cases>
</Function><Function
 Type="EURORADIO.Terminal.TerminalsCol"
 Default=""
 X="360"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AvailableTerminals"
 Guid="11b8babf-ad56-4624-aac4-731fd76ff17f"
>
<Comment>Conveninece function returning the collection of available terminals.</Comment>
<Cases>
<Case
 Name="TwoTerminals"
 Guid="c533b7f7-61a0-457c-b83b-2eb2d91246fc"
>
<PreConditions>
<PreCondition
 Guid="9e4f0dac-8c57-4750-9857-0872405e5831"
>Available(EURORADIO.Terminal.Terminal1)</PreCondition><PreCondition
 Guid="03512471-e5a6-47f4-84f1-8a915a50f891"
>Available(EURORADIO.Terminal.Terminal2)</PreCondition></PreConditions>
<Expression>[
    EURORADIO.Terminal.Terminal1,
     EURORADIO.Terminal.Terminal2
]</Expression>
</Case><Case
 Name="Terminal1 only"
 Guid="ddfc68d8-400e-4701-b925-a951efe7e0a5"
>
<PreConditions>
<PreCondition
 Guid="25bbf885-a54d-46a8-95c8-21cd3be0d2ec"
>Available(EURORADIO.Terminal.Terminal1)</PreCondition></PreConditions>
<Expression>[
    EURORADIO.Terminal.Terminal1
]</Expression>
</Case><Case
 Name="Terminal2 only"
 Guid="7ef159d5-0753-4277-8690-a0e0b0565c0a"
>
<PreConditions>
<PreCondition
 Guid="49db5b8f-c0d5-4eec-b6b4-b43e877100d4"
>Available(EURORADIO.Terminal.Terminal2)</PreCondition></PreConditions>
<Expression>[
    EURORADIO.Terminal.Terminal2
]</Expression>
</Case><Case
 Name="No terminal"
 Guid="3379cf30-20cd-4af1-b3e9-4c2d8fc28aea"
>
<Expression>[]</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="20"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RadioNetworkRegistrationReceived"
 Guid="0b3f4004-daf2-4f22-a675-61269508d61e"
>
<ReqRef
 Id="865bbdd6-2010-4869-ab3e-bc538ce5fe4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f1efa44-e607-4495-a768-a7e92c45951a"
>
</ReqRef><ReqRef
 Id="031d12f5-b1df-4716-9eda-a3495861e160"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2188301b-ce9b-461c-be01-a945fc88e97d"
>
</ReqRef><ReqRef
 Id="68a814aa-d977-4ba8-8329-54aaaec00081"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="36e920c8-9a91-4d15-83c4-9402d1c70f6d"
>
</ReqRef><ReqRef
 Id="e0778e14-e6ea-4f06-8c69-56236250b636"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d1c00597-b875-43be-a6b1-b9727c36bf78"
>
</ReqRef><ReqRef
 Id="9f6c605e-3f76-4367-a7a4-7f4fa458ef67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc235dda-70f6-4e15-b17d-83882a1010c6"
>
</ReqRef><ReqRef
 Id="dcc51a42-0407-4ab9-855a-55dc04e2ce4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7b3e488-4174-403c-9eab-07cabf6e2618"
>
</ReqRef><ReqRef
 Id="dba4721e-ecc7-46a8-945a-ca408198338c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc40c72d-0651-46df-9b81-ede406c9b2b5"
>
</ReqRef><ReqRef
 Id="fc32fb41-1c57-4753-a923-fe676aabf35d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ffa87291-19d7-49b9-86de-124c42e0c5ec"
>
</ReqRef><Comment>Handles reception of network registration order received from the trackside.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION.Message"
 Name="aPacket"
 Guid="9770ebbd-df05-4fdc-800f-a32ef4ebd176"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle radio network registration"
 Guid="51e0899c-678f-4938-8150-70c6f5208527"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle radio network registration"
 Guid="925227fc-89b7-43b1-886e-679d77350bf4"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="847054a6-9b00-4448-832a-5edaa16863c2"
>RegisterMobileTerminals ( aPacket.NID_MN )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="20"
 Y="410"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RegisterMobileTerminals"
 Guid="51a30ec7-ce1f-46f1-a57c-72cb7965af62"
>
<ReqRef
 Id="0d0678a7-632a-4a9e-9a4a-87d46d1383b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98d92943-9b78-430b-a271-7935c2cb0a2f"
>
</ReqRef><ReqRef
 Id="865bbdd6-2010-4869-ab3e-bc538ce5fe4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="384307ff-cbf9-4473-b59e-a03b4fa28aa9"
>
</ReqRef><ReqRef
 Id="9f6c605e-3f76-4367-a7a4-7f4fa458ef67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="053892f7-7928-480d-8a24-b7dfdd54ae64"
>
</ReqRef><ReqRef
 Id="dcc51a42-0407-4ab9-855a-55dc04e2ce4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03093ed4-945f-40bc-8369-806a295db5c7"
>
</ReqRef><ReqRef
 Id="68a814aa-d977-4ba8-8329-54aaaec00081"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a52ee743-0de6-4d9f-86b6-2606224cf76c"
>
</ReqRef><ReqRef
 Id="e0778e14-e6ea-4f06-8c69-56236250b636"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae2c75eb-5575-4a11-82ff-caec0db0bd2a"
>
</ReqRef><ReqRef
 Id="dba4721e-ecc7-46a8-945a-ca408198338c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d02b08e-4621-48ca-9ca0-53130eac81ef"
>
</ReqRef><ReqRef
 Id="fc32fb41-1c57-4753-a923-fe676aabf35d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d437a7b-af72-4620-a9df-d2ca2686e1cb"
>
</ReqRef><ReqRef
 Id="573d0d6d-98df-43fa-8065-22f5dae937f3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0bbe939d-9ee9-4f15-8ddf-731a12b94c96"
>
</ReqRef><Comment>Registers the mobile terminals to a radio network.</Comment>
<Parameters>
<Parameter
 Type="String"
 Name="aNetworkId"
 Guid="06100028-08c1-4f2b-9385-ab9e1edc17bc"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Register terminals"
 Guid="86956c33-030e-4d1f-8f75-ab22dffbfcdd"
>
<Comment>If the provided id is valid or the last known nework id is valid, then the mobile terminals are registered.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Provided id is valid"
 Guid="615728d0-acd8-40e3-94ea-aebf1f7bfc01"
>
<Comment>If the provided id is valid, it is used to register the terminals.</Comment>
<PreConditions>
<PreCondition
 Guid="e65e63b1-fd62-4950-b031-05d1d1109e1c"
>aNetworkId != &apos;&apos;</PreCondition></PreConditions>
<Actions>
<Action
 Guid="78ee6641-812f-4c2a-afbe-b0e4ada5e038"
>Terminal.Terminal1.ResetRegistrationStateSMAndRegister
(
    aNetworkId
)</Action><Action
 Guid="32182ac6-6175-40d8-b9ba-e83cb3c402b7"
>Terminal.Terminal2.ResetRegistrationStateSMAndRegister
(
    aNetworkId
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise, use the default Radio Network id"
 Guid="c02b6e39-340c-4bf8-a4fd-910b6087bc05"
>
<ReqRef
 Id="5e068e1e-2be5-45b6-b9eb-d1151df93748"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9092e686-fa55-4fa2-93f9-8086146ec060"
>
</ReqRef><Comment>Otherwise the default Radio Network id is used.</Comment>
<PreConditions>
<PreCondition
 Guid="301efa69-de1e-4a8d-a59f-c0c7afcbe928"
>Terminal.DefaultRadioNetworkId != &apos;&apos;</PreCondition></PreConditions>
<Actions>
<Action
 Guid="25c3fc69-9b60-4bb1-a2d1-b74d2cd381a9"
>Terminal.Terminal1.ResetRegistrationStateSMAndRegister
(
    Terminal.DefaultRadioNetworkId
)</Action><Action
 Guid="5442134a-9062-458e-a3e8-adf01cbfa296"
>Terminal.Terminal2.ResetRegistrationStateSMAndRegister
(
    Terminal.DefaultRadioNetworkId
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update last known network id"
 Guid="bfb78b5e-119a-4e09-af0e-35138fc12848"
>
<ReqRef
 Id="9bf96521-7fd6-4183-ab61-1276d48d3996"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6901fdd4-16ee-4f98-bee3-2fea0d726482"
>
</ReqRef><Comment>The received network id is memorized in order to be able to use it when the on-board equipment is powered-on.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update last known network id"
 Guid="908aae06-faac-4683-acfa-a0943eeb9c8f"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e1e7e813-961e-4771-8bdc-7606677f8c40"
>Terminal.LastKnownNetworkId &lt;- aNetworkId</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="130"
 Y="410"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SetMainTerminal"
 Guid="6219cbe5-3977-499c-b5b3-17a7118129d0"
>
<Comment>Sets the main terminal and ensues the other is no longer &apos;main&apos;.</Comment>
<Parameters>
<Parameter
 Type="EURORADIO.Terminal.TerminalStruct"
 Name="aTerminal"
 Guid="09b4d05a-dd10-4862-9c58-c8bb9688d0cf"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Sets the main terminal."
 Guid="9ce457e8-b11b-447c-bf29-b9435630a92d"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal1"
 Guid="fd11e93c-d5df-4238-a011-8c1af821f10a"
>
<Comment>Sets Terminal1 as main terminal.</Comment>
<PreConditions>
<PreCondition
 Guid="15825c16-5157-42e4-b965-ea2d24e45fca"
>aTerminal == EURORADIO.Terminal.Terminal1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="082535bc-4d76-41b4-bc23-80be3aacbc42"
>EURORADIO.Terminal.Terminal1.IsMainTerminal &lt;- True</Action><Action
 Guid="a6e5c388-248a-4538-b62c-ac66abb9677f"
>EURORADIO.Terminal.Terminal2.IsMainTerminal &lt;- False</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal2"
 Guid="da0a4f96-e5fc-43f2-9fbb-7bc5699b75de"
>
<Comment>Sets Terminal2 as main terminal.</Comment>
<PreConditions>
<PreCondition
 Guid="cffa0c7a-f615-4b6f-857d-438995d44f23"
>aTerminal == EURORADIO.Terminal.Terminal2</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cc8f860a-c260-41b5-be75-7509dee0f059"
>EURORADIO.Terminal.Terminal2.IsMainTerminal &lt;- True</Action><Action
 Guid="f3b02c49-79cf-4708-8971-c55205be4a71"
>EURORADIO.Terminal.Terminal1.IsMainTerminal &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="130"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SwitchMainTerminal"
 Guid="5e949164-2fb2-426e-b218-f39c1e816f46"
>
<Comment>Switch the main status of the two terminals, if there are two available terminals.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Switch Main Terminal"
 Guid="403b5346-d004-4e05-be90-fac8eec70ef0"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Two terminals available"
 Guid="4df57a19-4bda-4c72-b26d-7ac322eb06ea"
>
<PreConditions>
<PreCondition
 Guid="7f03e404-557a-4051-bfdc-260c0bb94bcf"
>COUNT Terminals IN AvailableTerminals() &gt;= 2</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="From 1 to 2"
 Guid="29219093-8211-44f5-a7ff-8a61ed8536c3"
>
<Comment>Terminal2 becomes main terminal.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="From1To2"
 Guid="b66be759-9fcd-4dcd-9a11-7cdf3e93c1ba"
>
<PreConditions>
<PreCondition
 Guid="05b3ec9a-3734-491b-b204-b41ffc625825"
>CurrentTerminal() == Terminal1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4220abea-9ef2-4291-bd53-05bb0ea68baa"
>SetMainTerminal(Terminal2)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="From 2 to 1"
 Guid="a20574c2-36dd-41f3-93bd-996f60121aee"
>
<Comment>Terminal1 becomes main terminal.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="From2To1"
 Guid="369d4209-eb38-4bc6-ad55-b2fac08cd11b"
>
<PreConditions>
<PreCondition
 Guid="620e4e76-2e92-48e2-86a4-847931029155"
>CurrentTerminal() == Terminal2</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ee6cff26-8509-4c69-901a-97150eb19b34"
>SetMainTerminal(Terminal1)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TerminalStruct"
 DefaultValue="EMPTY"
 VariableMode="InOut"
 X="20"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Terminal1"
 Guid="b9169f5f-b1a9-481e-8d17-7b9aee24c60e"
>
<ReqRef
 Id="865bbdd6-2010-4869-ab3e-bc538ce5fe4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94da1534-d4e2-409f-94e9-6c7efcd8d7b5"
>
</ReqRef><Comment>First terminal struct.</Comment>
</Variable><Variable
 Type="TerminalStruct"
 DefaultValue="EMPTY"
 VariableMode="InOut"
 X="160"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Terminal2"
 Guid="14bc979c-299e-41a1-b18b-77e58ca89e59"
>
<ReqRef
 Id="865bbdd6-2010-4869-ab3e-bc538ce5fe4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6e9b5735-16ad-4ad3-89ff-7df9a6f5141b"
>
</ReqRef><Comment>Second mobile terminal.</Comment>
</Variable><Variable
 Type="String"
 DefaultValue="&apos;&apos;"
 VariableMode="Internal"
 X="420"
 Y="20"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LastKnownNetworkId"
 Guid="4c27382c-64a2-4c88-8d58-ff66b400ad51"
>
<ReqRef
 Id="9bf96521-7fd6-4183-ab61-1276d48d3996"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e601cf1c-a807-4f9a-a762-522cf4cf6d78"
>
</ReqRef><Comment>The last received Radio Network identity.</Comment>
</Variable><Variable
 Type="String"
 DefaultValue="&apos;Default&apos;"
 VariableMode="Internal"
 X="290"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DefaultRadioNetworkId"
 Guid="2899d0b5-6c7a-4333-b3c0-d5226c93ec7e"
>
<ReqRef
 Id="5e068e1e-2be5-45b6-b9eb-d1151df93748"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8b46767d-0979-4a7a-9437-5ca9d5f363ac"
>
</ReqRef><ReqRef
 Id="5e068e1e-2be5-45b6-b9eb-d1151df93748"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa7dc0c0-dce3-4fb0-9217-e463d4e2fc72"
>
</ReqRef><Comment>Gives the values of the default radio network, to be used when no Radio Network identity was received from trackside or from driver.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Verification"
 X="610"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="First setting of the main terminal"
 Guid="16971da8-9cad-4100-a279-715cd510cf06"
>
<Comment>One terminal has to be set as the main one. It will receive standard, i.e. no handover, connections. 
Handover procedures will switch the terminals.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="First setting of main terminal"
 Guid="ad5583c5-8451-4b5b-96d7-db7dfa188fb7"
>
<PreConditions>
<PreCondition
 Guid="c5a341a2-0288-4e64-8d73-c115c3bcff16"
>Terminal.Terminal1 != EMPTY 
  AND 
NOT Terminal.Terminal1.IsMainTerminal</PreCondition><PreCondition
 Guid="79e5b9bb-1be3-4be0-93be-74656e82f5c0"
>Terminal.Terminal2 != EMPTY
  AND 
NOT Terminal.Terminal2.IsMainTerminal</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5c21afc3-795d-447f-8969-d8d860cb3682"
>Terminal.SetMainTerminal(Terminal.Terminal1)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="730"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Ensure CurrentTerminal is the registered one (if any)"
 Guid="1b2a6809-1494-489a-9824-d7a9a2a63434"
>
<ReqRef
 Id="00910a19-7134-4f24-a20b-6c88aa996ff1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1cb0f983-040f-4f4b-a3db-5ceb8166e524"
>
</ReqRef><Comment>The CurrentTerminal is used by default to manage communication sessions. This ensures that if at least 
one terminal is registered, then the CurrentTerminal is registered.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Switch MainTerminal if needed"
 Guid="650d983b-c250-4d2e-b92c-dfe822d53ead"
>
<PreConditions>
<PreCondition
 Guid="816b6b7f-6708-4b6c-959b-b756f1d07760"
>Available(CurrentTerminal())</PreCondition><PreCondition
 Guid="b2179998-a60a-4bee-a93a-afeaa23ec9ae"
>NOT TerminalIsRegistered(CurrentTerminal())</PreCondition><PreCondition
 Guid="d3bc24d4-ed0e-4a2a-af5d-8079558a1df8"
>TerminalIsRegistered(SecondaryTerminal())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9f7810c0-bf5a-48f6-a174-18cef5877b25"
>SwitchMainTerminal()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
