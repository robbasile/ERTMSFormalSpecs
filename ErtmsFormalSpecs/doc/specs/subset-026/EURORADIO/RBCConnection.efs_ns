<NameSpace
 X="20"
 Y="40"
 Width="100"
 Height="50"
 Name="RBCConnection"
 Guid="bf81a1b6-b116-436e-aa63-9ded47202151"
>
<Comment>Functionalities needed to handle the session communication between 
onboard and RBC, including safe radio connection management.</Comment>
<NameSpaces>
<NameSpaceRef
 Name="RBCHandover"
 Guid="741e1d2f-0976-4fbd-9876-c5208489b060"
>
</NameSpaceRef><NameSpaceRef
 Name="Contact"
 Guid="4be2c4d6-ec26-46b4-ace7-c4cdc229aa10"
>
</NameSpaceRef><NameSpaceRef
 Name="Data"
 Guid="d7da256c-3e12-4aee-b129-b371eb47b7dd"
>
</NameSpaceRef><NameSpaceRef
 Name="SafeRadioConnection"
 Guid="6e1bab84-3c09-4ab3-a552-6bcb546b82e5"
>
</NameSpaceRef><NameSpaceRef
 Name="SessionManagement"
 Guid="71558042-d141-423a-861a-7eea7c468f8d"
>
</NameSpaceRef></NameSpaces>
<Enumerations>
<Enum
 Default="SafeRadioConnectionStatusEnum.NoConnection"
 X="360"
 Y="190"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafeRadioConnectionStatusEnum"
 Guid="fe039c94-e8dc-416a-b815-f5ad8300c526"
>
<ReqRef
 Id="747bae2e-7720-4f04-ac58-bf2f7feb9e50"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a75773a-005e-4c35-993c-02bb41df811e"
>
</ReqRef><Comment>Possible safe connection statuses.</Comment>
<Values>
<EnumValue
 Value="0"
 Name="NoConnection"
 Guid="56356f1b-8662-4507-a0d9-ec8a7d4cd272"
>
</EnumValue><EnumValue
 Value="1"
 Name="ConnectionLostOrSetUpFailed"
 Guid="6e15a44f-7a64-4aef-8094-c6cd3222235a"
>
</EnumValue><EnumValue
 Value="2"
 Name="ConnectionUp"
 Guid="865de485-ea5e-45e3-9dbe-9d63433a1a2e"
>
</EnumValue></Values>
</Enum><Enum
 Default="SpecialCaseSessionEstablishmentReasonEnum.DoNotEstablish"
 X="360"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SpecialCaseSessionEstablishmentReasonEnum"
 Guid="205157d3-e3d5-4060-8439-329289efb6d9"
>
<ReqRef
 Id="752d0832-7cfa-4424-96f7-d3fbb447a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd9be4e8-c89a-4f1f-9884-24c1c72593bd"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e2bd3a2b-8e66-4417-8ce5-b57742fe72d3"
>
</ReqRef><Comment>If a communication session has to be established, this enum indicates why it has to be established.</Comment>
<Values>
<EnumValue
 Value="0"
 Name="DoNotEstablish"
 Guid="da2bfe4b-c5ce-49be-8c38-1b0be8e6a929"
>
</EnumValue><EnumValue
 Value="1"
 Name="EstablishDueToLossOfConnection"
 Guid="bba21269-f466-4cd8-9c35-a758a5872258"
>
</EnumValue><EnumValue
 Value="2"
 Name="EstablishDueToRadioHole"
 Guid="e66584f1-3758-4b8b-88fc-04937d7e7201"
>
</EnumValue><EnumValue
 Value="3"
 Name="EstablishDueToModeChangeReport"
 Guid="582d1927-ae02-4bbf-b7c2-2c10234069af"
>
</EnumValue></Values>
</Enum></Enumerations>
<Structures>
<Structure
 Default=""
 X="360"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RBCStruct"
 Guid="a486085f-3201-4bf5-8db8-cf3027c03815"
>
<ReqRef
 Id="becb430f-a4f2-4817-ad08-3672ed05f855"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb738b09-f0d3-4a4e-8c82-014ee43482cc"
>
</ReqRef><Comment>Represents one instance of communication with RBC.</Comment>
<Rules>
<Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Clear input message"
 Guid="46319b75-1481-4c0f-aa43-2ddac6249e60"
>
<Comment>Ah the end of the cycle, the message has to be erazed (otherwise at the beginning of the following cycle the system will consider that this message is received again).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear input message"
 Guid="48c4a0a3-7c51-4de9-86b1-e4e9433a8cde"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0271d2ba-8432-4ab8-9751-21368dd80660"
>Data.MessageIn.SystemVersion2 &lt;- EMPTY</Action><Action
 Guid="ac0fb6ef-3f22-4447-b1d1-69b1d4a36537"
>Data.MessageIn.SystemVersion1 &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear output message"
 Guid="0339f48d-dd3c-4427-bb71-c2b0692813a5"
>
<Comment>In the beginning of the cycle, the previously sent message is erazed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear output message"
 Guid="b8277cd5-cb64-43eb-b93c-592bf2cbe729"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a88d3410-4254-4ea2-b4be-62c09e71fb63"
>Data.MessageOut.SystemVersion2 &lt;- EMPTY</Action><Action
 Guid="798b1369-7cf8-4c83-8a3c-9a9a4fec6355"
>Data.MessageOut.SystemVersion1 &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Verification"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Supervise max time between received messages"
 Guid="c5d62060-3b89-489b-be3b-b0b8944f4282"
>
<ReqRef
 Id="a3ae1dd4-1e9a-44e2-85d0-b0ebc947ebc1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73849776-b2c8-4e81-94f4-f6a3976c2bb0"
>
</ReqRef><ReqRef
 Id="6950f2b1-0c72-4e10-9f34-e93e44498694"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bf640674-13b2-49ad-bbb2-fe0aa0a5c49f"
>
</ReqRef><ReqRef
 Id="60e39a2f-4380-44e7-bf85-7142748b200f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebaa08b9-8a5f-4e0b-afc4-44c1ecdca0ca"
>
</ReqRef><ReqRef
 Id="3d4a4bc1-0bca-4a3b-9856-b6e42e4c9d03"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="342cdeb8-ffd0-43ee-9bf6-2e3db389f260"
>
</ReqRef><ReqRef
 Id="4aafaa1d-6dad-4116-9c76-919faa0a29e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae241e7f-21f0-453f-9802-7f6c9b88324f"
>
</ReqRef><ReqRef
 Id="c70bfa9f-8666-4350-a99f-e648bd25c511"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="feca8e4a-cf18-4594-a82c-3f895513d4a1"
>
</ReqRef><ReqRef
 Id="75998632-b501-408b-884c-9389aefb1de7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="724ff2d3-e565-4a18-801b-67ef2998aad9"
>
</ReqRef><ReqRef
 Id="88cc77ff-7146-4934-be41-451d8f3ce0bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5eeebf3e-d94a-4c7c-8b3d-bd01f71cbc4f"
>
</ReqRef><ReqRef
 Id="0b314991-9ddf-4e48-bbbc-ef8083339ea7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b1b5283-c5d1-4fea-8df8-167fe49692ed"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c25eb8fc-8bea-4d3f-98a1-3dfc447208b0"
>
</ReqRef><Comment>When connected to the RBC, the on-board may require (depending on the national value T_NVCONTACT) that the RBC send a message with a certain frequency.
If the RBC does not send a consistent message within the period T_NVCONTACT, the on-board will apply the reaction specified by the national value M_NVCONTACT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Supervise max time between received messages"
 Guid="517f696f-ec26-45ed-b7b3-ca89f3d42492"
>
<Comment>If the on-board timer reaches the value of T_NVCONTACT since the last consistent message was received from the RBC, apply the reaction.</Comment>
<PreConditions>
<PreCondition
 Guid="1927d6d3-b902-49fb-8659-ba192ce507d3"
>Kernel.DateAndTime.CurrentTime &gt; OnboardReference_MessageTimer + Kernel.NationalValues.CurrentNV().MaxTimeSinceCreationInTheRBCOfLastReceivedTelegram</PreCondition><PreCondition
 Guid="48586d1f-c5f2-41a2-a230-9552e9516335"
>NOT THERE_IS BrakeCommand IN Kernel.BrakeCommands.ServiceBrakeCommands | BrakeCommand.Reason == Kernel.BrakeCommands.BrakeReasonEnum.NoRadioMessageInDueTime</PreCondition><PreCondition
 Guid="047d557f-5809-47bc-bd4b-a2ebcda881e8"
>ContactTimerSupervised</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Apply reaction"
 Guid="9fee50da-35cb-4fef-9b9b-9c3ed89b0277"
>
<Comment>Apply the reaction determined by M_NVCONTACT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Train trip"
 Guid="8c1f6e2e-18b0-4317-971b-15b80b2396e4"
>
<ReqRef
 Id="bc9fa0cb-b1ef-4c53-a9bb-3b13192f1b2f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3a910894-9dad-48df-b601-a4d0b73fc47a"
>
</ReqRef><Comment>Trip the train.
Keep the reason for it to be displayed to the driver.</Comment>
<PreConditions>
<PreCondition
 Guid="e1ae4709-9dd0-404c-a5fe-fd8e2afddc56"
>Kernel.NationalValues.CurrentNV().SystemReactionIfRadioChannelMonitoringTimeLimitExpires == Messages.M_NVCONTACT.Train_trip</PreCondition></PreConditions>
<Actions>
<Action
 Guid="35c7ae19-379e-4fe1-9f80-bbfeed7fb8e3"
>EURORADIO.TrainTripDueToMaxTimeBetweenMessagesExceeded &lt;- True</Action><Action
 Guid="df2fb773-415b-49bc-8066-df20f0a0c275"
>INSERT Kernel.BrakeCommands.EmergencyStopStruct
{
    IsConditional =&gt; False,
    Id =&gt; 0,
    StopLocation =&gt; 0.0,
    Reason =&gt; Kernel.BrakeCommands.BrakeReasonEnum.NoRadioMessageInDueTime,
    StartTime =&gt; Kernel.DateAndTime.Now()
}
IN Kernel.BrakeCommands.EmergencyStops</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Apply service brake"
 Guid="d5e4d836-372a-40d6-a902-d33f8de1ee2a"
>
<ReqRef
 Id="bc9fa0cb-b1ef-4c53-a9bb-3b13192f1b2f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b2a3f8d4-0fad-4b14-b2ad-1486321cc154"
>
</ReqRef><Comment>Apply the service brake.
Keep the reason for it to be displayed to the driver.</Comment>
<PreConditions>
<PreCondition
 Guid="2a983f3f-e8df-4254-962a-27e521c59306"
>Kernel.NationalValues.CurrentNV().SystemReactionIfRadioChannelMonitoringTimeLimitExpires == Messages.M_NVCONTACT.Apply_service_brake</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f97da9de-0e29-4726-9112-51860fdea0f0"
>Kernel.BrakeCommands.CommandServiceBrake(Kernel.BrakeCommands.BrakeReasonEnum.NoRadioMessageInDueTime)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No reaction"
 Guid="bfa2c3ea-f5bf-49a4-b810-b364e15e60ba"
>
<Comment>No reaction.</Comment>
<PreConditions>
<PreCondition
 Guid="2b1d39cb-0822-457d-8275-eb81b7828733"
>Kernel.NationalValues.CurrentNV().SystemReactionIfRadioChannelMonitoringTimeLimitExpires == Messages.M_NVCONTACT.No_Reaction</PreCondition></PreConditions>
<Actions>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Release brake command"
 Guid="e764e9dd-b8ac-4d3e-8db0-f8a2916366da"
>
<ReqRef
 Id="1d090478-a64a-43b9-bbaf-2cdfb2d81d32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="737cdd8f-9f6d-4925-9d55-b66d8557799b"
>
</ReqRef><ReqRef
 Id="e7ac0b5d-5b94-4f8d-85af-20c7e79216b9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8bf9650e-0ca2-4198-bebe-e878271cbb5d"
>
</ReqRef><ReqRef
 Id="4c72e2f8-34a5-4066-86d2-067ebbdb7465"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5d332479-b2b0-4438-9c3c-984681d7e8c2"
>
</ReqRef><Comment>If the service brake was applied because no consistent message was received in the required period, the brake command is revoked if a message is received from the RBC or if the train reaches standstill.</Comment>
<PreConditions>
<PreCondition
 Guid="c5a8af33-3e15-4fc3-97f7-d563354a6ec6"
>THERE_IS BrakeCommand IN Kernel.BrakeCommands.ServiceBrakeCommands | BrakeCommand.Reason == Kernel.BrakeCommands.BrakeReasonEnum.NoRadioMessageInDueTime</PreCondition><PreCondition
 Guid="dd697769-1f0a-42ce-a530-f721f5b8cb67"
>Odometry.TrainIsAtStandstill()
  OR  
(
  Available(Messages.UpdatedMessageIn(THIS))
    AND  
  Messages.IncomingMessageIsConsistent(Messages.UpdatedMessageIn(THIS))
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ec756cc9-1422-4ce1-9f0c-f25195a8d5c9"
>Kernel.BrakeCommands.ReleaseSBCommand(Kernel.BrakeCommands.BrakeReasonEnum.NoRadioMessageInDueTime)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Verification"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Restart connection after radio silence"
 Guid="ae11d585-832b-4f57-ac07-856b1534bf33"
>
<ReqRef
 Id="314c9698-d68d-4f63-ae14-0d4aad3e6388"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97560492-9bc2-435a-9ceb-18684eb20657"
>
</ReqRef><ReqRef
 Id="88cc77ff-7146-4934-be41-451d8f3ce0bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94483242-e35d-47af-a97f-7740025ac0fe"
>
</ReqRef><Comment>If no message is received for 60 seconds after the period T_NVCONTACT, the on-board restarts the safe radio connection without ending the communication session.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Restart connection after"
 Guid="e757408c-26bf-4a29-ad78-ee3c910980a0"
>
<PreConditions>
<PreCondition
 Guid="2fa270a6-cb59-4b15-a2ed-7a01bfded428"
>Kernel.DateAndTime.CurrentTime &gt; OnboardReference_MessageTimer + Kernel.NationalValues.CurrentNV().MaxTimeSinceCreationInTheRBCOfLastReceivedTelegram + DelayToDisconnect</PreCondition><PreCondition
 Guid="72bb38b1-b631-4c66-8fc6-c5c562962109"
>ContactTimerSupervised</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9f0b8b99-968a-4132-a255-930a6cfcfa7c"
>SafeRadioConnection.ConnectionIsEstablished &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SessionTimer management"
 Guid="385ad190-d992-4b29-82b7-f26e734e9798"
>
<Comment>Generic, default rule for starting and/or stopping the session timer. 
No that other events might trigger the start and stop.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Start timer"
 Guid="a45c2383-77ca-4fb6-82b9-59cf039bdfb6"
>
<ReqRef
 Id="308624ea-ea91-4451-b8c4-1cfbc9094f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="76c3c788-33a8-40c8-8616-6dd345ac9204"
>
</ReqRef><Comment>Session timer should be started as soon as the safe radio connection is lost.</Comment>
<PreConditions>
<PreCondition
 Guid="c1a3ff6c-28d2-42c2-b292-388f1d62962e"
>NOT Timer.Started(MaintainSessionTimer)</PreCondition><PreCondition
 Guid="caada11a-0276-432c-b5d5-ae994297a816"
>SafeRadioConnection.ConnectionIsEstablished == False</PreCondition><PreCondition
 Guid="263449af-50e3-4b09-82e2-3245c72a727f"
>ConnectionState in [ConnectionStateSM.Connected.ConnectionEstablished]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="877e012e-58c8-4020-a940-ae4bcc4d4680"
>Timer.StartTimer(MaintainSessionTimer)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop timer"
 Guid="e192e168-1545-4bfe-92f9-6eae80ad1a56"
>
<Comment>Stops the session timer is the connection is re-established or no longer needed.</Comment>
<PreConditions>
<PreCondition
 Guid="0d92ace6-438a-4c66-982c-1935933d3186"
>Timer.Started(MaintainSessionTimer)</PreCondition><PreCondition
 Guid="ff93921c-326f-4466-8fdb-7b975c1aa3f9"
>(SafeRadioConnection.ConnectionIsEstablished == True
  AND
ConnectionState in [ConnectionStateSM.Connected])
  OR
ConnectionState in [ConnectionStateSM.Inactive, ConnectionStateSM.Terminating,
ConnectionStateSM.NoConnection]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0ecd71e0-ee8f-455e-a8c8-5208db14eacd"
>Timer.StopTimer(MaintainSessionTimer)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ConnectionStatusTimer management"
 Guid="96459f67-2587-42e5-95c9-b08540b1ebb4"
>
<Comment>The ConnectionStatusTimer is started by the procedure sending the connecton request.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop timer"
 Guid="992a6314-edf4-491b-9e7b-9fb90ac8d64f"
>
<PreConditions>
<PreCondition
 Guid="ef9f48be-db1f-4682-be93-0b8c90534479"
>Timer.Started(SafeRadioConnection.ConnectionStatusTimer)</PreCondition><PreCondition
 Guid="e8aa6235-cfc9-4ff7-b173-cacb111aee76"
>SafeRadioConnection.ConnectionIsEstablished</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7bfa0022-d368-4b69-89fa-fcd5662f9103"
>Timer.StopTimer(SafeRadioConnection.ConnectionStatusTimer)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle AcceptingRBCContactOrder"
 Guid="e66231c6-b086-4462-9aae-1fbf2a90c2a8"
>
<ReqRef
 Id="dba00c16-82a7-40b8-b31c-2978dd6bbd82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="840126eb-3454-4302-af6d-c1d6871a0736"
>
</ReqRef><ReqRef
 Id="00b663b2-ab3b-4e6d-b810-4819654b3685"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c44b0bd-f080-4b4b-bd3a-7a0d133f0709"
>
</ReqRef><ReqRef
 Id="adc412e3-1c5f-4c95-a667-303e6aabee27"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="334e4d08-2d01-4086-a06c-b26f99418690"
>
</ReqRef><ReqRef
 Id="6fa8d8fc-f346-4592-b64d-ce1831a6cc98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae103444-eba5-445a-b06c-1e94f3599d18"
>
</ReqRef><ReqRef
 Id="6a073136-951c-4624-92a2-1b2f704d25ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d185f128-493d-42b3-87b4-8ba2400b43ef"
>
</ReqRef><Comment>To manage the possibility of having one or two terminals for handover, 
the RBCTransitionOrder is first stored in AcceptingRBCContactOrder 
(the choice of the terminal itself is made at reception of the order) 
and moved to ContactRBCOrder as soon as the RBCConnection has 
no open(ing) communication session. This way, handover with one terminal 
will establish the new connection only after terminated the first one while 
handover with two terminals will initiate the new communication session at once.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Accepting RBC contact order"
 Guid="8adcc888-e57c-41cd-86bf-55d7042f0cd0"
>
<PreConditions>
<PreCondition
 Guid="6609a8b2-f994-43be-92b5-da74987f9e89"
>AcceptingRBCContactOrder != EMPTY</PreCondition><PreCondition
 Guid="794b5113-e251-4f4a-8dc9-b8188f7513d9"
>ConnectionState not in [ RBCConnection.RBCStruct.ConnectionStateSM.Connecting, RBCConnection.RBCStruct.ConnectionStateSM.Connected ]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4c9bfa8e-9202-472b-bf80-8e30b3ea5552"
>HandleAcceptingRBCContactOrder()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
<Procedures>
<Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SendPositionReport"
 Guid="d551c0f2-3853-4033-86fa-bb55a4747107"
>
<ReqRef
 Id="3bb3db5b-9c3d-4113-bc32-973de664a85a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11feaa20-6859-4c99-ab39-3827646c0c43"
>
</ReqRef><ReqRef
 Id="7a161d4e-9daf-4632-afbc-9c0ba1b37e6c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09327bdb-9d58-4926-b3a2-1027c8bdccdf"
>
</ReqRef><ReqRef
 Id="8512700f-a6d7-4b0c-a289-782c95b3ff9c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d08954a5-8ebe-44c6-adbf-88347835cb98"
>
</ReqRef><ReqRef
 Id="57f6f903-9f6e-4b2c-8772-6ba6ca0aec3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7cc47f49-8040-44c9-85fc-80683474352c"
>
</ReqRef><ReqRef
 Id="1ad3279a-9643-4da5-9373-74edaa89c5fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c2f5041-bbeb-4b22-bca7-b8b8e02d22bb"
>
</ReqRef><ReqRef
 Id="2cede8a1-5372-48a2-b195-db43cc0d3c3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4a848f6-728b-40c5-9b16-6b080357e43f"
>
</ReqRef><ReqRef
 Id="6133d02d-e7a6-49f8-b647-7da1e187169e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d482b5b-0de4-4111-8690-895b041abc8c"
>
</ReqRef><ReqRef
 Id="1bf8b9b6-79f5-474e-b31e-1e946b2adaf1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="337f2199-195a-474f-b7cb-4fc34bd60c52"
>
</ReqRef><ReqRef
 Id="e6ece399-f216-4956-a5c8-811ae465ba7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e80bb6b4-e499-4d46-adb0-d0197da94c5d"
>
</ReqRef><ReqRef
 Id="53a6f7f6-fea5-40a1-8d58-a40fa642022f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9add7f4-2bdf-4f5d-a164-931a4a10e8d9"
>
</ReqRef><ReqRef
 Id="7481e941-1b42-49cb-8cfd-e80d9da9949b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e111074-2075-4292-9f06-c4171e380ebc"
>
</ReqRef><ReqRef
 Id="c777f0b7-86fb-438a-91dc-20b12ceec0b0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="721666d4-528a-432f-9242-b334b15978d9"
>
</ReqRef><ReqRef
 Id="bc9d05af-2451-4f8c-8e90-24b256a572fa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3bc18cf8-9de1-4584-8d71-57a4196111c4"
>
</ReqRef><ReqRef
 Id="18834f9f-2f32-40fe-9d9a-97c8e2991f93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c23f9da-024a-4809-bf9e-71300155836e"
>
</ReqRef><Comment>Sends the Position report message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="1e838a0b-1365-4864-a698-9b6294d2c77d"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="The message can be sent"
 Guid="1326e3c1-f9f4-4e39-a552-d0f91ba0ed9e"
>
<Comment>In the case the communication session is opened, the message is sent.</Comment>
<PreConditions>
<PreCondition
 Guid="0322d270-b2d6-49d2-ac91-1123f4364021"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d36b5e14-701a-47f8-a07f-2c20c9a57a79"
>InitializeOutMessage()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Prepare message"
 Guid="0a4339b6-f580-4dca-a29e-5b02266c4bfb"
>
<Comment>Imports the Position Report into the MessageOut.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Prepare message"
 Guid="eafd8d49-47e4-425e-9aea-c5bc7e00361c"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="79dbebec-3f39-4331-b8b2-edabf9c5149b"
>Data.MessageOut.SystemVersion2.TRAIN_POSITION_REPORT &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.TRAIN_POSITION_REPORT.Message
{
    L_MESSAGE =&gt; EMPTY,
    NID_ENGINE =&gt; Kernel.NidEngine,
    NID_MESSAGE =&gt; 136,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport(),
    Sequence1 =&gt; [],
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime)
}</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level transition border"
 Guid="bef3e5da-8b8c-4b0e-96c9-cbca4f5d4b3c"
>
<Comment>Keeps track of the fact the a position report was sent for passing the current level transition border from level 2/3 with the min safe rear end.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level transition border"
 Guid="6102b727-3b48-4a7b-8bba-bdd309b747c1"
>
<PreConditions>
<PreCondition
 Guid="0a027266-6bd5-40ea-a8fd-448122fb34d3"
>Messages.PositionReport.SendReportDueToLevelTransitionBorderPassedWithMinSafeRearEnd()</PreCondition><PreCondition
 Guid="3c31d773-a498-4ec6-8bba-79be2966b47b"
>Available( CurrentRBCConnection().Data.MessageOut.SystemVersion2.TRAIN_POSITION_REPORT )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c3e16fa7-8736-4446-a631-3c458cd9d1e0"
>Kernel.LevelTransition.LevelTransitionOrder.PositionReportSent &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Include error report"
 Guid="d9f908d5-de87-4bab-91ce-da2c66953c63"
>
<ReqRef
 Id="9e2c2d2b-5db5-4ed7-ac2d-0ff95a23e76f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddac13ec-1b48-4d26-9286-afd5f82d7e7f"
>
</ReqRef><Comment>If a safety critical fault was detected in this cycle, send it to the RBC</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add packet 4"
 Guid="083c5a7e-665e-4129-b81b-334094135d71"
>
<PreConditions>
<PreCondition
 Guid="6ae49c95-7d4b-42c1-8330-6a69edd591a3"
>THERE_IS Fault IN Kernel.SafetyCriticalFaults | Fault.Timestamp == Kernel.DateAndTime.Now()</PreCondition><PreCondition
 Guid="4c9bb920-8b4f-41e8-b06d-5ef689c0e285"
>THIS.SessionManagementData.SystemVersion.Value == VersionManagement.SystemVersionEnum.Version2_0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e07dcf11-0ce2-47e9-879e-4b160dbf579e"
>INSERT Messages.MESSAGE.TRAIN_TO_TRACK.TRAIN_POSITION_REPORT.SubStructure1{
    ERROR_REPORTING =&gt; Messages.PACKET.TRAIN_TO_TRACK.ERROR_REPORTING.Message{
        NID_PACKET =&gt; 4,
        L_PACKET =&gt; 0,
        M_ERROR =&gt; (FIRST X IN Kernel.SafetyCriticalFaults | X.Timestamp == Kernel.DateAndTime.Now()).Fault
    }
}
 IN Data.MessageOut.SystemVersion2.TRAIN_POSITION_REPORT.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="The message cannot be sent"
 Guid="dd2c92ac-da7a-4d3b-9279-fd1cf283922a"
>
<ReqRef
 Id="fbaaf410-a59f-40cd-b972-aa1e84116831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67eccd8c-dae4-4c14-a3eb-147b9f08ccc2"
>
</ReqRef><Comment>In the case the communication session is not open, and the position report is sent due to mode change not considered as end of mission, a new session will be opened and the message will then be sent.</Comment>
<PreConditions>
<PreCondition
 Guid="aba612e6-4965-48ec-b40a-4541e169456d"
>Messages.PositionReport.SendReportDueToModeChange()</PreCondition><PreCondition
 Guid="6fb82fcc-1dd5-40c1-a0a7-87279e71cf42"
>Kernel.HandleModeChange not in Kernel.HandleModeChangeSM.EndOfMission</PreCondition><PreCondition
 Guid="5367589d-d8aa-4929-8097-c8ee899fbb19"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d67963d3-60e6-4eed-8fac-e91efefafe50"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason &lt;- SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToModeChangeReport</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendSOMPositionReport"
 Guid="e3220a82-2afc-4b5c-a090-53f9bb36659b"
>
<ReqRef
 Id="aa43ddb6-13a5-4b3e-bbcc-bf985bea4175"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="767f0bfd-f651-4416-b879-f414c2f79cea"
>
</ReqRef><ReqRef
 Id="6375b0de-0293-4d16-abdf-cb5f39a35143"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4dccb90-05ce-4571-9f3f-3523708d0a38"
>
</ReqRef><ReqRef
 Id="dff3b2f7-dd70-412e-8eef-75f2fefa03c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bb20a6c3-3ed9-4fe0-a1f0-8c592dfaa248"
>
</ReqRef><ReqRef
 Id="fd5c097e-b4c0-466b-850d-99f930692988"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1134427a-c5d3-4ec0-b45a-6466e4654205"
>
</ReqRef><ReqRef
 Id="7d3615d3-8bd3-4134-8d72-fcfc017f1749"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="12f43f32-bf6f-4c8a-9d86-82374158c0f9"
>
</ReqRef><ReqRef
 Id="4608349b-50d4-4c14-9c72-18d03706ed89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3897d6ee-b98b-434e-9ac9-ac77e749e0ce"
>
</ReqRef><ReqRef
 Id="9f0eacfe-16d9-4bf2-936d-fe62a645918e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d8990a7a-0edf-4046-8552-36fe5fbe3074"
>
</ReqRef><ReqRef
 Id="21f08a64-2ded-47ef-b209-47e6f1df9f9f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="39451b82-9ea9-4cd9-8062-d8e060923a21"
>
</ReqRef><ReqRef
 Id="bbaed3c1-8068-4694-b20d-a574f61aff20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09ec1b86-50a8-4254-83e9-52a2ffa7d300"
>
</ReqRef><ReqRef
 Id="0cec34e4-d359-4da6-bf72-ec307144efab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ce5682ad-b177-4039-9281-20d06800207a"
>
</ReqRef><ReqRef
 Id="f3ff7f4d-3f24-4101-8ad4-d2902c011869"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4bf359f-5f00-45c6-8992-f01ef6401d54"
>
</ReqRef><Comment>Sends the Start of Mission position report message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="3764661a-62ed-4d3e-bad8-e44f0cfca265"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="2deed0a5-79d6-41a9-8564-92acc7625ca2"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b1ccb1c5-b9fd-4818-b709-5d94d5c2e4b1"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="a12be67a-f112-414a-af20-7873c6b0671e"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="3c9531c1-a642-4e1b-b3dd-dc4e7ab35d2c"
>
<PreConditions>
<PreCondition
 Guid="51eef2a5-c279-4323-a925-b48791cf1653"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ee5a0c21-596d-4adf-9f6e-f3f46a1437d7"
>Data.MessageOut.SystemVersion2.SOM_POSITION_REPORT &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.SOM_POSITION_REPORT.Message
{
    L_MESSAGE =&gt; EMPTY,
    NID_ENGINE =&gt; Kernel.NidEngine,
    NID_MESSAGE =&gt; 157,
    Q_STATUS =&gt; Messages.PositionReport.FillQStatus(),
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport(),
    Sequence1 =&gt; EMPTY,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime)
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="InitializeOutMessage"
 Guid="c3a62f8f-4ddb-4ad9-b370-6cb6b66ac72b"
>
<Comment>This procedure has to be called before filling the out message with some information.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize out message"
 Guid="6d4d6846-0184-40cc-87a6-19c04a568c69"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize out message"
 Guid="383c3a6c-4b8b-411f-b5a0-6dacf0dfa9bd"
>
<PreConditions>
<PreCondition
 Guid="96e96db5-efb2-4460-8166-cd2593b2ee48"
>Data.MessageOut.SystemVersion2 == EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2d00e9a8-4356-42a6-a9b3-cdf669db2f2b"
>Data.MessageOut.SystemVersion2 &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.Message
{
    VALIDATED_TRAIN_DATA =&gt; EMPTY,
    TRAIN_POSITION_REPORT =&gt; EMPTY,
    REQUEST_FOR_SHUNTING =&gt; EMPTY,
    MA_REQUEST =&gt; EMPTY,
    TRAIN_POSITION_REPORT =&gt; EMPTY,
    REQUEST_TO_SHORTEN_MA_IS_GRANTED =&gt; EMPTY,
    REQUEST_TO_SHORTEN_MA_IS_REJECTED =&gt; EMPTY,
    ACKNOWLEDGEMENT =&gt; EMPTY,
    ACKNOWLEDGEMENT_OF_EMERGENCY_STOP =&gt; EMPTY,
    TRACK_AHEAD_FREE_GRANTED =&gt; EMPTY,
    END_OF_MISSION =&gt; EMPTY,
    RADIO_INFILL_REQUEST =&gt; EMPTY,
    NO_COMPATIBLE_VERSION_SUPPORTED =&gt; EMPTY,
    INITIATION_OF_A_COMMUNICATION_SESSION =&gt; EMPTY,
    TERMINATION_OF_A_COMMUNICATION_SESSION =&gt; EMPTY,
    SOM_POSITION_REPORT =&gt; EMPTY,
    TEXT_MESSAGE_ACKNOWLEDGED_BY_DRIVER =&gt; EMPTY,
    SESSION_ESTABLISHED =&gt; EMPTY
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendValidatedTrainData"
 Guid="5e8585ff-5096-4df7-a74d-9272db3f84cf"
>
<ReqRef
 Id="8b735562-2ede-429c-940c-7f53b0f6f675"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c76f8877-efbd-4800-b4d0-0be9f93c28fd"
>
</ReqRef><ReqRef
 Id="0aa692d6-e57e-48a1-929d-b3f3a51951bf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d24f2133-00f7-4fd4-9180-c9bafc9b71cf"
>
</ReqRef><ReqRef
 Id="4c109f90-966c-4202-93f8-a66c21964f25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6192bf3a-a828-43bc-aff9-fb8bc84fe6d5"
>
</ReqRef><ReqRef
 Id="c394072b-5ccc-4f02-83ca-030f9a7b59d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd4739ac-f629-470a-bc72-cdf7cfbeef99"
>
</ReqRef><ReqRef
 Id="3ac64b50-c74e-4254-be73-259fb5466b4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc7b1350-2296-41c7-bf1f-9760b7d6dd73"
>
</ReqRef><ReqRef
 Id="7c52a141-a336-45c4-8933-e8521c8b7522"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="96beaa60-c788-47a9-8113-30cf0565860c"
>
</ReqRef><ReqRef
 Id="03f798fa-1890-4c9a-b975-9d37d4cbfd71"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a52c3a5-ce83-44b6-8e64-cc9d991ca352"
>
</ReqRef><ReqRef
 Id="d00ed482-4e7b-4dc9-a857-b5fb171adf5b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b868e49e-7e87-4bef-8ecd-89c45e26dd4c"
>
</ReqRef><ReqRef
 Id="1d0a9f3a-05b9-496f-808f-1dc1ece5338f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a7080b4-ccbb-44a0-96a3-43ef7a9ef12e"
>
</ReqRef><ReqRef
 Id="230ba662-a277-415f-bcf3-6add4edfc710"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9524d3d2-526b-4eea-9735-d509738dde8f"
>
</ReqRef><ReqRef
 Id="c145e7f4-406f-43e2-9d62-1b55e23be537"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d52e8562-8480-4a9a-a24d-e60bf83cbef5"
>
</ReqRef><ReqRef
 Id="314a65fb-2b09-4631-8372-2420970cec84"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f767a19a-6d4c-402e-b1e4-f0efb5fdf6c3"
>
</ReqRef><Comment>Sends the train data message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="11324c24-1a43-4c0f-980e-cbf4c89ad7a0"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="9045a06a-d09f-41a3-99e9-3597703b9533"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="81824e94-b141-436c-aaf0-683be2dc9fb2"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="511ff74f-c4b6-4b78-810c-99f0123510ee"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="2687b67a-4497-4efc-b70d-2d91183ff1bd"
>
<PreConditions>
<PreCondition
 Guid="43a64c64-9f21-4ab1-a3d9-84265343cd86"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f26165a7-1b31-4afe-b6c9-ea1f49fa06de"
>Data.MessageOut.SystemVersion2.VALIDATED_TRAIN_DATA &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.VALIDATED_TRAIN_DATA.Message
{
    NID_MESSAGE =&gt; 129,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport(),
    VALIDATED_TRAIN_DATA =&gt; Messages.TrainData.CreateTrainData()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendEoMReport"
 Guid="ab89aa1a-870b-435e-9232-e0bed3a33834"
>
<ReqRef
 Id="3f735818-2dc8-4e4a-a842-9112c3e053a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21ee6751-35c3-4438-84e8-e4d7b17d623b"
>
</ReqRef><ReqRef
 Id="7b63a22c-a47e-4e98-87a7-bb6800dbb38e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e46bb61e-928d-4a62-8c22-bff1af3712ac"
>
</ReqRef><ReqRef
 Id="3178d11d-e209-47c2-ab1a-54caa8ca5545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e79a48b8-726e-4fd0-bcd7-d2270ec25638"
>
</ReqRef><ReqRef
 Id="32e9bb4f-cc73-4be6-8a71-c4006cf68928"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5948595-1a6b-476f-851e-b749574582aa"
>
</ReqRef><ReqRef
 Id="194a6507-f64b-4bf2-9881-d8497cb30d7a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b5cb308-d93b-43c8-8eb3-cc3b770dc419"
>
</ReqRef><ReqRef
 Id="7e2d6d39-15b7-4051-b3d6-102637c8ee8c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8bca4f0a-e58c-4c28-88ba-0a98950bd9bd"
>
</ReqRef><ReqRef
 Id="6b12d15c-87f2-48ff-849a-2279b0777014"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6e712a5a-7062-4332-8512-27b007ccc13d"
>
</ReqRef><ReqRef
 Id="d3955e28-f016-43ba-aa05-ed187deb9195"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="29725e8b-3481-4f24-b563-6e1a6bb15b1d"
>
</ReqRef><Comment>Sends the End of Mission report message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="768b0a00-533b-41d6-ae85-818dee312803"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="2968d04e-41f5-45ea-93af-489bfa1fa379"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4cd778bf-8694-4ae5-bdde-b65aa81a38dd"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="3eabc145-1193-4620-be32-ebc6cf35c2b4"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="144933fc-e9f1-4489-911e-e6bf16b8ad3b"
>
<PreConditions>
<PreCondition
 Guid="dcd16c79-c050-4122-bc72-ff483044e164"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5d5990b8-a350-4843-9667-b01f3a4ae06c"
>Data.MessageOut.SystemVersion2.END_OF_MISSION &lt;-Messages.MESSAGE.TRAIN_TO_TRACK.END_OF_MISSION.Message
{
    NID_MESSAGE =&gt; 150,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendRequestForShunting"
 Guid="bbf768a6-9eec-467b-b2ef-6470b3f72595"
>
<ReqRef
 Id="457bd04c-8b77-4ecc-b5ec-c4dbce5c1e53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="376abddb-f246-4e20-8cd6-b3fb29cb373c"
>
</ReqRef><ReqRef
 Id="acf47cdb-9433-4fbe-b66f-419fece778bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a32a91e-6c50-4e85-9685-2830643a7e43"
>
</ReqRef><ReqRef
 Id="ec079598-670c-4c4c-9b4b-522eb377eacf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f51d6c92-1fb0-43d5-902e-9f67a1c2d8c8"
>
</ReqRef><ReqRef
 Id="ae8e9b38-1f8d-4043-9b1a-47e161fb1d55"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5921274b-a754-4ad7-92f2-095031860002"
>
</ReqRef><ReqRef
 Id="d6b2c059-6bf8-4097-bbec-0c06656b3e70"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="edd101eb-c1c2-4015-9110-0791773084e1"
>
</ReqRef><ReqRef
 Id="381e47f5-126e-425d-82ca-c6bd3f298786"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b6c0ee79-234a-4485-8ac4-4d6bbeeb2d20"
>
</ReqRef><ReqRef
 Id="f6a07df8-0a38-405a-ac82-e476c6f8f49b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aef8d650-527d-47ed-bb67-e54467233740"
>
</ReqRef><ReqRef
 Id="4538d3bf-abc5-49c0-b3df-d7179bd3fe54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7510bff0-cdae-41dd-bdac-ca8a29f83d09"
>
</ReqRef><Comment>Sends the Request for Shunting message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="3608e592-3b97-4c7e-893c-5987036f2dd6"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="3db45a68-db5d-4e98-9a7d-83cbb4f2372c"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="187501bf-e512-477f-83b7-e4093109a069"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="aae94d1a-4576-49d7-ab43-e61a40efe9e9"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="31f1450c-9cfd-4568-8768-521f7b2f72e5"
>
<PreConditions>
<PreCondition
 Guid="90577e69-faf5-403a-8ad8-3b0225de321b"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7297c0d3-1229-4d0e-9a96-f81af5183fa9"
>Data.MessageOut.SystemVersion2.REQUEST_FOR_SHUNTING &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.REQUEST_FOR_SHUNTING.Message
{
    NID_MESSAGE =&gt; 130,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendMARequest"
 Guid="605c5787-3cea-40e3-9541-b6fee56354ff"
>
<ReqRef
 Id="b74d1689-f942-4e2a-abdb-aa241f4f117f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21b60f86-6bac-4cab-822c-a49daf822344"
>
</ReqRef><ReqRef
 Id="e0cc7640-41db-4f00-b6f3-086b5cf064f6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71895e28-aac6-4907-ba44-c8bec8872c2c"
>
</ReqRef><ReqRef
 Id="8de66288-ba8b-49f2-a9cc-e1cd1b848fa3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2fa5f59-147d-452b-9d65-6e710b7e4a3b"
>
</ReqRef><ReqRef
 Id="562e9d9d-f160-4726-9fdd-0192ae0ac13a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a8d78ace-abbb-4447-9aca-0587ddc7f619"
>
</ReqRef><ReqRef
 Id="422bfd78-6a90-4d9b-8000-8670a93a76db"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d1d9e958-d593-476a-ae1d-44cc0139f325"
>
</ReqRef><ReqRef
 Id="00db9178-25bc-425f-9d84-def8931cd919"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74acd841-63b3-4718-b30b-552fb19a9e5c"
>
</ReqRef><ReqRef
 Id="706d4b2b-fef4-4426-a33a-c820303c26bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d43b367f-6567-40e0-a317-a51739f8a135"
>
</ReqRef><ReqRef
 Id="60fb8ae5-aecd-4fcf-aa69-ec41649b9c2f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a5db18c-6c03-460a-801a-42c98f6947c8"
>
</ReqRef><ReqRef
 Id="c127eb4e-6c45-4dbe-8365-8279e347b15c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b4d7c0c-688c-4e35-aaf3-58bfeea7b5e4"
>
</ReqRef><ReqRef
 Id="09bd805d-47dc-47e1-9489-e5fb2e24f885"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b8139c8-9858-4f97-9ad4-60549457b180"
>
</ReqRef><ReqRef
 Id="4443416b-4b5b-4896-a845-222b762d3950"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="715b48c3-af70-479c-9314-7eaf9aa4bab2"
>
</ReqRef><Comment>Sends the MA request message, possibly with an additional packet (Packet 9: Level 2/3 transition information).</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_MARQSTREASON"
 Name="aReason"
 Guid="5c0da812-a270-4cf0-b8e8-c58eb2c798db"
>
</Parameter><Parameter
 Type="Messages.PACKET.TRAIN_TO_TRACK.LEVEL_2_3_TRANSITION_INFORMATION.Message"
 Name="aPacket"
 Guid="efa70ad2-1b31-4fba-8e5b-1394f640af26"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="d3b68b75-987a-41d6-99f1-fb0772635b9e"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="4e0423b2-ff99-457f-bc39-7ee3fbd568f4"
>
<PreConditions>
<PreCondition
 Guid="48295035-e9ad-4544-9df0-05b1d725b286"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bbc2b765-d74b-4410-be48-a4a557591e5e"
>InitializeOutMessage()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Fill the message"
 Guid="6a8d7932-914e-4d24-a047-ae5a2b06ff00"
>
<Comment>First, fill the fields of the message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill the message"
 Guid="028126ab-0258-4ee6-819e-a978c06643da"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f105e56b-cf2d-4016-b30e-0ea135442f31"
>Data.MessageOut.SystemVersion2.MA_REQUEST &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.MA_REQUEST.Message
{
    NID_MESSAGE =&gt; 132,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    Q_MARQSTREASON =&gt; aReason,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add the optional packet, if any"
 Guid="1e128daf-b918-4719-9653-73eb5ae01642"
>
<ReqRef
 Id="c2016b38-4117-4913-9885-bc04bda19872"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb2fb9bf-eb81-4102-b4e2-4be112bc2963"
>
</ReqRef><ReqRef
 Id="aced057f-bb2f-4cbd-a442-1175c8db9a04"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1c99391-9308-423a-829a-0c934becfbd5"
>
</ReqRef><Comment>Then, add the optional packet, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add the optional packet, if any"
 Guid="ac36f825-e92f-4ee9-8831-a81f5a88f097"
>
<PreConditions>
<PreCondition
 Guid="2dd7f6aa-12b8-4aa9-8130-0d8662cb6f64"
>aPacket != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f44318cf-785d-4f2d-b554-9b4fc910b4f0"
>INSERT
Messages.MESSAGE.TRAIN_TO_TRACK.MA_REQUEST.SubStructure1
{
    LEVEL_2_3_TRANSITION_INFORMATION =&gt; aPacket
}
  IN
Data.MessageOut.SystemVersion2.MA_REQUEST.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update MA request parameters"
 Guid="9d1fd56f-96df-4f78-9cad-0936c95e17ac"
>
<ReqRef
 Id="b2206740-ee3b-42bc-9b69-b3ef064476be"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cafe6bb4-a15b-4ea9-9165-f0ae350e5c42"
>
</ReqRef><Comment>Finally, if MA request parameters are stored on-board, the current time and the reason are stored in order to be able to resend the MA cyclically, if needed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update MA request parameters"
 Guid="a918565b-068a-41c0-8290-cc43a8c4ac0f"
>
<PreConditions>
<PreCondition
 Guid="3acc2481-ba85-4ccd-b7fc-ed2acaac77e7"
>Kernel.MA.MARequest.MARequestParameters != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d3ec36ee-64d3-4339-b85a-967e5ce5a6ca"
>Kernel.MA.MARequest.LastMARequestRepetitionTime &lt;- Kernel.DateAndTime.CurrentTime</Action><Action
 Guid="b5a94a6c-2159-44bd-9c71-7c81d6c057f9"
>Kernel.MA.MARequest.MARequestParameters.Reason &lt;- aReason</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendAcknowledgementOfEmergencyStop"
 Guid="e87a9d80-111c-45f9-832c-e6cafcf1c042"
>
<ReqRef
 Id="4f290d49-e10d-41ae-a385-d9a756df04d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90a03ff5-462d-42bf-9ca2-65cd7a0f9ed0"
>
</ReqRef><ReqRef
 Id="d0c52cba-95a5-4b9f-a459-f68e07f13e33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89bc609b-a585-404a-925c-8802256245c9"
>
</ReqRef><ReqRef
 Id="c99e85b2-17b6-42ce-9b97-dbb17591f957"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3c5c499-cb3b-4646-855c-12e052a84523"
>
</ReqRef><ReqRef
 Id="353d80f7-d37e-4952-87d6-c993f0d146d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9acaae9b-63e8-497b-bd35-7cf4a8476960"
>
</ReqRef><ReqRef
 Id="2021b9de-fee0-4e23-89ca-1093a14beb16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4339af52-7d16-4261-9970-6f51ffefc24c"
>
</ReqRef><ReqRef
 Id="71443874-c4de-4da6-9d2f-f6668f13b126"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f275038e-5b5c-4727-8f81-5367d732ee64"
>
</ReqRef><ReqRef
 Id="077dae9c-0d63-4b59-b4e5-ac197edca727"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="12413d65-df03-40a1-a297-be7706affd45"
>
</ReqRef><ReqRef
 Id="9e5ae867-ff49-400d-8172-3bc629e506d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ce8097f1-6d77-4366-b987-6902b416ab6f"
>
</ReqRef><ReqRef
 Id="944df599-e5d3-4360-9b07-6e36bc0025f4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3c336995-6061-4022-923e-b9c7392134d9"
>
</ReqRef><ReqRef
 Id="1d5d1613-e3b5-4dc3-ac17-1785740b57a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5b22d91-4bc3-47a4-ad42-3bf8fb90337a"
>
</ReqRef><Comment>Sends the acknowledgement of emergency stop message.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.Message"
 Name="aMessage"
 Guid="7d4addf6-2d0c-478d-8a18-29d13281c06a"
>
</Parameter><Parameter
 Type="Messages.Q_EMERGENCYSTOP"
 Name="Qualifier"
 Guid="dbcb29cd-2b70-41c6-8e2a-39767e6620aa"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="47f12a31-c101-4e2a-9cf8-0574ec2882fd"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="a6871485-a588-4bee-a3cc-ed5ae32c0725"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6e5868d3-df73-4c91-ad4f-8f53ac927e7e"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="ac03dd37-e4fd-465d-893a-8278a0376598"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="61954d2d-de18-46d5-90c5-adb4d2c9e3ba"
>
<PreConditions>
<PreCondition
 Guid="b9bcf8d4-dd8a-4dbf-8d77-1f95a1ddbeae"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bf04e5dc-64f2-41c2-8382-b29798e0e305"
>Data.MessageOut.SystemVersion2.ACKNOWLEDGEMENT_OF_EMERGENCY_STOP &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.ACKNOWLEDGEMENT_OF_EMERGENCY_STOP.Message
 {
    NID_MESSAGE =&gt; aMessage.CONDITIONAL_EMERGENCY_STOP.NID_MESSAGE,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    NID_EM =&gt; aMessage.CONDITIONAL_EMERGENCY_STOP.NID_EM,
    Q_EMERGENCYSTOP =&gt; Qualifier,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
 }</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendInitiationOfCommunicationSession"
 Guid="696d88ca-8c89-4d15-8686-73cc7ad795f2"
>
<ReqRef
 Id="1ead58b3-f05d-46bd-b3f8-bc0a16010cdd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ea5e0d5-0e85-46a1-acd4-cda08bdc398a"
>
</ReqRef><ReqRef
 Id="58da8d69-4dcb-45db-96ea-d5985a650330"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="564ff098-736c-424c-a6b9-8ab1f4f34c0e"
>
</ReqRef><ReqRef
 Id="193e4ff3-c085-4881-89f4-4bba951aae20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19d0964b-09a8-46dd-ac20-133862b2d634"
>
</ReqRef><ReqRef
 Id="f122a1cb-426c-4f27-b1b2-521eeb9d7655"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="347b8598-d913-4c68-9f41-16e9c1d15889"
>
</ReqRef><ReqRef
 Id="974dafe8-70ad-409f-a13c-435c0f1b8be1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21c07ed6-3de8-42ca-82ad-34d42e3f416e"
>
</ReqRef><ReqRef
 Id="4faba43d-d002-4947-afce-02a4abef7460"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3095d51-c343-4d2f-a394-aafd8bf10422"
>
</ReqRef><ReqRef
 Id="9934dc4b-5b76-4e42-9f4c-b7efb6c87c30"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a044b5df-0fbc-45df-ab89-1fa05e3a2ce2"
>
</ReqRef><ReqRef
 Id="e5b845f3-54de-4120-8f98-f59e56625654"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c24a0d9-b735-412a-a342-3b06b59d532a"
>
</ReqRef><ReqRef
 Id="fff58fab-5102-4a71-bbc4-ce7f2e1ea7d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f5a2aad-eef2-4238-9f03-cceb41aacdd6"
>
</ReqRef><Comment>Sends the initiation of communication session message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="c65d4bb7-630c-4ec2-90ce-ef998933ca68"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="42176a9f-0e01-4d45-8b62-10fc8e233092"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="563251c1-2574-4fa0-836d-6e4f832ddb19"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="fbc287fc-61e7-449e-9d9f-a7e57f921c47"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="ca61f4f9-df8c-4f72-9d2d-f52350d0ef01"
>
<PreConditions>
<PreCondition
 Guid="d112e636-6a6c-44a8-894b-ef7e12c2f473"
>ConnectionState in RBCStruct.ConnectionStateSM.Connecting</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5496a749-0788-45c7-917c-9edb136dfa0c"
>Data.MessageOut.SystemVersion2.INITIATION_OF_A_COMMUNICATION_SESSION &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.INITIATION_OF_A_COMMUNICATION_SESSION.Message
{
    NID_MESSAGE =&gt; 155,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendTerminationOfCommunicationSession"
 Guid="be6b5b3e-b56c-4f31-974d-943f13071346"
>
<ReqRef
 Id="bc41e5e5-6fff-4b96-a901-9bc45f108b16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="693180ad-3698-4e96-a0da-37ed0402c784"
>
</ReqRef><ReqRef
 Id="a74ee6b4-a0ba-40bb-b83f-fd66efae3fb1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="748b65ee-f643-4256-8559-fa33ad0a4456"
>
</ReqRef><ReqRef
 Id="8c9ce563-d6d0-4490-a402-5a4bcf54598c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a9faee19-4354-4f80-b3df-4ae338698057"
>
</ReqRef><ReqRef
 Id="a4fe513a-ba78-4d81-a472-2d562542fef9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c6e2d50-82c0-4dbe-9e82-d54508720b99"
>
</ReqRef><ReqRef
 Id="4d45f289-023e-4ed4-a8b2-f23bc5f23bbf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c18b279e-229b-49df-b38c-69ebe7b613f9"
>
</ReqRef><ReqRef
 Id="78ebe076-c514-44ee-869e-00b94b6a4377"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f1bf4ed-1bd9-45ff-a356-468cfba43a0d"
>
</ReqRef><ReqRef
 Id="19c4b8ef-f85a-4b84-8eff-203e8b462604"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f29d8644-94fe-43a1-a707-057f05af3bff"
>
</ReqRef><ReqRef
 Id="2a8dff3a-71d3-4a6e-9d2b-85f6c568cd25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30c4a337-3b6c-4974-b6ea-bf3383053ae3"
>
</ReqRef><ReqRef
 Id="dc7b33b5-d923-42f3-be12-580edb475353"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="144418d9-5285-412c-b6fe-6933d99065b7"
>
</ReqRef><Comment>Sends the termination of communication session message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="f3aee149-7695-4f3e-a44a-49e2b558625b"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="ad915db8-0cba-4771-b0df-408784bfc4bc"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a9d0f88f-cb0d-4627-ac6f-88fba8c2d721"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="abadcaa6-e65d-4b7d-bbcb-b0cfdae0dd85"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="8334b1bb-9709-4418-a6e3-507dd7a6b908"
>
<PreConditions>
<PreCondition
 Guid="84bd5198-9d19-4348-b537-6f637bae715f"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )
  OR
ConnectionState in RBCStruct.ConnectionStateSM.Terminating</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1069c60a-1628-4196-9f66-c7cb41b5fed5"
>Data.MessageOut.SystemVersion2.TERMINATION_OF_A_COMMUNICATION_SESSION &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.TERMINATION_OF_A_COMMUNICATION_SESSION.Message
{
    NID_MESSAGE =&gt; 156,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ReinitializeCommunicationInformation"
 Guid="30fa714a-600a-440b-9bf9-ce5c3055c1ad"
>
<Comment>When a communicatino session is terminated, all the information is reset to default values.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reinitialize communication information"
 Guid="6da01d9a-0a55-4ae4-be3e-0eb9708c6062"
>
<ReqRef
 Id="66901d6f-fcdd-4ddb-89e1-57f86cb9fcce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3aab9954-d945-4ab9-813b-616cbd06538e"
>
</ReqRef><Comment>When a communicatino session is terminated, all the information is reset to default values.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Reinitialize communication information"
 Guid="1a9ebfb8-f176-4c4b-85c9-9b8a8acf5b77"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e6756e01-e930-4ca0-b174-6f394bacedb8"
>ContactData &lt;- Contact.RBCContactStruct{
Id =&gt; Contact.RBCIdStruct{
    Country =&gt; 0,
    Id =&gt; 0
},
PhoneNumber =&gt; &apos;&apos;,
DataState =&gt; DataStateEnum.Invalid
}</Action><Action
 Guid="05d3d260-3a31-4071-8324-e20b31648170"
>ContactRBCOrder &lt;- EMPTY</Action><Action
 Guid="3d5afa42-b712-4474-af54-81ae258173b2"
>DeleteInformation(SessionManagementData.SystemVersion)</Action><Action
 Guid="ad53ed1b-1620-494b-99fb-a6e01d551bda"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.NoConnection</Action><Action
 Guid="2c770b25-75ef-4584-9ad0-ad6650c0cd3d"
>SessionManagementData.AcknowledgementOfTerminationReceived &lt;- False</Action><Action
 Guid="98453804-e66a-4590-9504-9886fad16fe3"
>SafeRadioConnection.ReleaseSRC()</Action><Action
 Guid="a54d814f-1a11-4973-b4f4-53d57e00af71"
>Default.Timer.StopTimer(MaintainSessionTimer)</Action><Action
 Guid="c1156096-d4a5-4892-b54c-a7f3bf198a67"
>Default.Timer.StopTimer(SafeRadioConnection.ConnectionStatusTimer)</Action><Action
 Guid="a4a9d100-a024-4440-8591-8cfa38d20643"
>SafeRadioConnection.ResetRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendNoCompatibleVersionSupported"
 Guid="c63d1fde-96e0-4f01-a20e-6bbd5151c8af"
>
<ReqRef
 Id="25af834a-3a24-459b-b5c8-97b85eddb2e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="61feaf2f-7590-4018-ae7b-a2db4d2e2ff4"
>
</ReqRef><ReqRef
 Id="a7e6ae33-fe52-489d-90a6-0563e959f98f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="283ef404-b315-4cdf-825d-1be794889951"
>
</ReqRef><ReqRef
 Id="180abffc-1e69-479f-9d27-b361a511b724"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc0c1cd7-4d71-4088-a4bd-0e68ad48cdc6"
>
</ReqRef><ReqRef
 Id="771097a5-70ee-4e32-ad57-cc3370e9c2df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22c694e3-c942-49dc-b73f-c9141ca87276"
>
</ReqRef><ReqRef
 Id="5fa92a17-4bdd-45f7-af50-8fb767b1f5df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a899759e-6714-48e6-bb6e-08c17e851abb"
>
</ReqRef><ReqRef
 Id="be83abf1-33e3-48e8-81f5-7272786632ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eabe68f3-c3db-4f70-ad3d-e559cb02333a"
>
</ReqRef><ReqRef
 Id="29ac8b57-887f-4420-8b7b-91bb1e505d65"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc240a90-6151-4ff4-881a-ae5d89b497f6"
>
</ReqRef><ReqRef
 Id="e5b845f3-54de-4120-8f98-f59e56625654"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cce15516-ff7d-484b-a528-4bb42e1adfea"
>
</ReqRef><Comment>Sends No ocmpatible version supported message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="c15dcb9d-3043-463c-a121-584ce060a5ba"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="34a4329b-2c57-4fc0-a0e4-2a3249db9fdf"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e69e3eab-da9f-4830-bb66-dbbf17d0561e"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="1244adad-26bd-4648-a76e-d5556c06a19d"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="42bee79c-70ca-43ec-80e9-3f05cf18c656"
>
<PreConditions>
<PreCondition
 Guid="ccdbc887-50da-463a-8631-8c3ad89ca42a"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="18250444-a45a-46a1-8101-7880251ca79d"
>Data.MessageOut.SystemVersion2.NO_COMPATIBLE_VERSION_SUPPORTED &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.NO_COMPATIBLE_VERSION_SUPPORTED.Message
{
    NID_MESSAGE =&gt; 154,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendSessionEstablishmentReport"
 Guid="8a87e368-0048-4948-a952-145ff82d525e"
>
<ReqRef
 Id="790cf49e-a85c-4110-b567-fc5d57052339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="045a9dff-e27f-4410-881c-b9700ce1f271"
>
</ReqRef><ReqRef
 Id="83a95861-1254-445f-a687-abfbc0ecc275"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d240a01-57cc-4941-a04c-f1e1ed34ec0a"
>
</ReqRef><ReqRef
 Id="6d607aea-ecdf-49ba-94cf-820077be16f5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b8a5425-07a4-445c-acc0-3b98fb6b1ed5"
>
</ReqRef><ReqRef
 Id="da48d790-6e99-4ede-b382-33683f89734e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb6ec88d-4649-4ada-a0cf-bb3600b0311a"
>
</ReqRef><ReqRef
 Id="034e6081-8324-46a4-8701-9547536400ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb0890c2-c5fd-4dc0-84b1-379a8178fa4b"
>
</ReqRef><ReqRef
 Id="81482df6-4bcd-4d73-987a-cd90bcffe361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e2258c8-8ab4-4fe1-8b1d-23c16b3f57de"
>
</ReqRef><ReqRef
 Id="f5760847-4b49-4c61-8ca9-da687dc787ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="327d1585-08a4-4c5e-bc96-d78d15637c36"
>
</ReqRef><ReqRef
 Id="6db08158-68d4-49a4-9b0c-24890ae05196"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7363d3d4-1875-4ed8-aaf7-da8e9b75f604"
>
</ReqRef><ReqRef
 Id="67f2325a-594b-4d1d-aeb3-677ca275d48f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c0ff2e38-f9f4-4bf6-9147-ec53b040341c"
>
</ReqRef><ReqRef
 Id="a0a1a643-5cf9-4392-b573-9ea14a76a3e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ffee05d-ac50-4cf2-bf1f-23746a91e6c4"
>
</ReqRef><Comment>Sends the Session establishment report message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="6c52dfaf-a8d7-4929-a8c1-7d16cb7e9bd5"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="4befb4cc-6383-49b8-9d8a-0b850a587774"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d3e2baec-7c7d-48ae-9a69-d962f17359c8"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="d4bdb090-dcbc-4828-9a82-becf0ea7fc4a"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="4500a613-abb9-4a56-838d-c3d8c4705256"
>
<PreConditions>
<PreCondition
 Guid="4b25cc29-6b61-46d2-b51e-3caa2964d74f"
>ConnectionState in RBCStruct.ConnectionStateSM.Connecting</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1f5b8c56-d5aa-4705-8653-1f7558f6dad4"
>Data.MessageOut.SystemVersion2.SESSION_ESTABLISHED &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.SESSION_ESTABLISHED.Message
{
    NID_MESSAGE =&gt; 159,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    Sequence1 =&gt;
    [
        Messages.MESSAGE.TRAIN_TO_TRACK.SESSION_ESTABLISHED.SubStructure1
        {
            ONBOARD_TELEPHONE_NUMBERS =&gt; Messages.PACKET.TRAIN_TO_TRACK.ONBOARD_TELEPHONE_NUMBERS.Message
            {
                NID_PACKET =&gt; 3,
                L_PACKET =&gt; 0,
                N_ITER =&gt; 1,
                Sequence1 =&gt;
                [
                    Messages.PACKET.TRAIN_TO_TRACK.ONBOARD_TELEPHONE_NUMBERS.SubStructure1
                    {
                        NID_RADIO =&gt; CurrentRBCConnection().ContactData.PhoneNumber
                    }
                ]
            }
        }
    ]
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="HandleIncomingMessage"
 Guid="89a51dbf-4fc4-4d63-ba49-4fbbe790cd0b"
>
<ReqRef
 Id="e65c9779-618e-4a55-97c9-4038b3410eaf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ce70874-1784-4303-8bc6-c9c2fa9bf503"
>
</ReqRef><ReqRef
 Id="3460bc0e-8803-4236-bb1b-7b9af5863703"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="453f7d4a-8183-47b2-9ccc-4888875b989d"
>
</ReqRef><ReqRef
 Id="b09389ef-751e-4124-ab57-b53c0a663151"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="757d839e-f724-4a6f-b62d-2169e4a94c92"
>
</ReqRef><Comment>Messages from RBC received after sending of Termination of communication session message will be ignored, with the exception of the acknowledgement.</Comment>
<Parameters>
<Parameter
 Type="Messages.EURORADIO.MessageIn.Message"
 Name="aMessage"
 Guid="181fef89-7c77-4b02-b09d-cd97c40f2c2d"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Message consistency"
 Guid="3af7a221-0c99-424f-88e3-09ffe344c887"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Consistent message"
 Guid="168893c1-74ee-45d0-9dbc-a85d424967fb"
>
<Comment>If the received message is consistant, handles it.</Comment>
<PreConditions>
<PreCondition
 Guid="38657d51-716c-4a9a-98e4-5265e6d1ff07"
>Messages.IncomingMessageIsConsistent(aMessage)</PreCondition><PreCondition
 Guid="a81656d3-87a6-408f-bed3-40c7e993d6f4"
>aMessage.SystemVersion2 != EMPTY</PreCondition><PreCondition
 Guid="42ff2443-7913-42f7-9efb-b3d8d62447ab"
>Messages.DataPriorityCorrect(UpdatedRBCStruct(THIS))</PreCondition></PreConditions>
<Actions>
<Action
 Guid="650ae003-5f59-4152-bc79-c1b370bd17b2"
>CurrentRBCConnection().OnboardReference_MessageTimer &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle the message, main connection"
 Guid="cef55038-61d6-4627-bd2f-b42ee019a7a7"
>
<ReqRef
 Id="e65c9779-618e-4a55-97c9-4038b3410eaf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0c67dbf7-3008-46ce-9513-1b702db13423"
>
</ReqRef><Comment>Messages from the current RBC connection received after sending of Termination of communication session message will be ignored, with the exception of the acknowledgement.
If the safe radio connection is not established, anyother message than INITIATION_OF_A_COMMUNICATION_SESSION will be refused by this procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Process received message"
 Guid="02e60da7-c524-4331-8b54-d5d5a095b147"
>
<ReqRef
 Id="e65c9779-618e-4a55-97c9-4038b3410eaf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5897c00c-9ae3-46ba-8d44-289c1ab8906c"
>
</ReqRef><Comment>Messages from RBC received after sending of Termination of communication session message are ignored.</Comment>
<PreConditions>
<PreCondition
 Guid="38becf08-2913-4188-be14-d07a99987553"
>ConnectionState not in RBCStruct.ConnectionStateSM.Terminating</PreCondition><PreCondition
 Guid="ef3d372c-beef-41e1-b4ab-c93e1ad4228a"
>IsMainConnection(THIS)</PreCondition><PreCondition
 Guid="f097de96-8188-4ba7-99a0-87ceea8546eb"
>SafeRadioConnection.ConnectionIsEstablished 
  OR 
Available ( aMessage.SystemVersion2.INITIATION_OF_A_COMMUNICATION_SESSION )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="91acdb2a-7506-4ab4-b0fa-8d79adb06344"
>Messages.ProcessIncomingMessages(aMessage.SystemVersion2)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Handle acknowledgement of termination of a communication session"
 Guid="4adf40dd-e92d-49d4-9790-f2e066136ffe"
>
<ReqRef
 Id="e094e23a-bd94-4440-8632-705782494f35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a5c2f29b-60c2-4b89-b4b4-c9efca81fb01"
>
</ReqRef><ReqRef
 Id="6091731d-92bd-4133-aff2-790f6f482dbf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b50a6610-60f2-49a7-b4a2-6bb0d27ab9f5"
>
</ReqRef><ReqRef
 Id="2a8dff3a-71d3-4a6e-9d2b-85f6c568cd25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e8fe9ac2-c217-400e-a957-19e4f8dc5528"
>
</ReqRef><ReqRef
 Id="1cc80620-3b71-4701-bf52-e5356ffd6ac3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d2cb622-3201-4dec-9184-e92e1502425d"
>
</ReqRef><Comment>Handles reception of termination of a communication session by indicating that the acknowledgement has been received.</Comment>
<PreConditions>
<PreCondition
 Guid="ac1276a1-4304-44b2-9368-d19b44716a29"
>Available ( aMessage.SystemVersion2.ACKNOWLEDGEMENT_OF_TERMINATION_OF_A_COMMUNICATION_SESSION )</PreCondition><PreCondition
 Guid="81589a43-8e2b-4072-b05a-941400a1676d"
>IsMainConnection(THIS)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3f7ae70c-3d69-484d-b194-079ab0f15040"
>SessionManagementData.AcknowledgementOfTerminationReceived &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle the message, secondary connection"
 Guid="5a254f2f-4d15-451a-aee7-678a39803050"
>
<Comment>Handles messages from the secondary connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="First position report not sent yet"
 Guid="76abb388-cf5f-4889-88ce-12fe11d2d0e7"
>
<ReqRef
 Id="c887c56e-758e-426a-a728-cf723b3b2baf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="01f01d0a-b84f-42c4-8d0f-6411abecc08a"
>
</ReqRef><Comment>Before the first position report due to RBC/RBC handover is sent, the secondary connection is the Accepting RBC. The messages have to be stored on-board, except the acknowledgement of Train Data.</Comment>
<PreConditions>
<PreCondition
 Guid="e4720d74-c0b7-4a6e-9ab6-1ece3496b1f0"
>Kernel.TrainPosition.FrontEndPosition ( PointOfInterest =&gt; DistanceIntervalEnum.Max ) &lt; RBCHandover.RBCTransitionLocation</PreCondition><PreCondition
 Guid="0d4bcc3d-3776-439b-9758-f22cbc29a861"
>NOT IsMainConnection(THIS)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1ab338d8-4640-43cf-a2a7-37c937b4fe00"
>INSERT aMessage.SystemVersion2 IN Messages.MessagesToHandle</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Train Data acknowledgement"
 Guid="fc490935-57d9-4ea4-ac4c-2a97559d2524"
>
<ReqRef
 Id="2cee38e9-4ac3-4eb5-a235-17b2c0e36064"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e87bf4e4-e712-45fd-b453-a7cc993d67c0"
>
</ReqRef><ReqRef
 Id="64dae4f0-7a7b-4908-8fa8-6f082446f198"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb598c81-83d4-4d33-a70a-086324ac29ea"
>
</ReqRef><Comment>The Acknowledgement of Train Data has to be handled immediately.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Train Data Acknowledgement"
 Guid="764fa478-1098-4d9e-8254-ea5881d0c9bf"
>
<PreConditions>
<PreCondition
 Guid="44d6792c-4d61-414c-ad35-8a012be15113"
>Available ( aMessage.SystemVersion2.ACKNOWLEDGEMENT_OF_TRAIN_DATA )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f67975fc-0afe-4875-bd79-beab45f8fac7"
>Messages.HandleAcknowledgementOfTrainData ( aMessage =&gt; aMessage.SystemVersion2.ACKNOWLEDGEMENT_OF_TRAIN_DATA )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="First position report already sent"
 Guid="9eed9a99-08dd-4cea-aa1f-58bf616fb33e"
>
<ReqRef
 Id="1b789c83-4922-4842-985f-3dd14ff0843d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ead5d5ee-b9b4-4837-90f4-30eae4b478d3"
>
</ReqRef><Comment>After the sending of the first position report due to RBC/RBC handover, the secondary connection becomes the Handing Over RBC. In that case, only the disconnection orders are accepted.</Comment>
<PreConditions>
<PreCondition
 Guid="0f48759f-2683-41b7-9795-a8091f83089d"
>NOT IsMainConnection(THIS)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle the disconnection order"
 Guid="adf9e844-3290-485b-ad6c-fc14e92b9f60"
>
<Comment>A disconnection order can be sent in three messages: Movement Authority, General Message and MA With Shifted Location Reference.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Order in Movement Authority message"
 Guid="a193b5e3-60b7-4a14-b101-028839c51331"
>
<Comment>Handling of disconnection order in Movement Authority message.</Comment>
<PreConditions>
<PreCondition
 Guid="324110db-fab4-4a41-b0c7-9caf76d2eeec"
>Available ( aMessage.SystemVersion2.MOVEMENT_AUTHORITY )
  AND
THERE_IS X IN aMessage.SystemVersion2.MOVEMENT_AUTHORITY.Sequence1 | Available ( X.SESSION_MANAGEMENT )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c80907f0-f05d-43aa-9119-63fe6256d6b7"
>Contact.TracksideOrderedSessionReceived
(
    Packet =&gt; (FIRST X IN aMessage.SystemVersion2.MOVEMENT_AUTHORITY.Sequence1 | Available ( X.SESSION_MANAGEMENT )).SESSION_MANAGEMENT
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Order in General Message"
 Guid="cde67da5-f3ea-4d83-ba4b-54d9a9b64b81"
>
<Comment>Handling of disconnection order in General Message.</Comment>
<PreConditions>
<PreCondition
 Guid="a38e7bfa-0c5b-4094-8f40-49762ebdf0a7"
>Available ( aMessage.SystemVersion2.GENERAL_MESSAGE )
  AND
THERE_IS X IN aMessage.SystemVersion2.GENERAL_MESSAGE.Sequence1 | Available (X.SESSION_MANAGEMENT)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c6e06621-411d-4bb2-ad4b-e26c47288f27"
>Contact.TracksideOrderedSessionReceived
(
    Packet =&gt; (FIRST X IN aMessage.SystemVersion2.GENERAL_MESSAGE.Sequence1 | Available (X.SESSION_MANAGEMENT)).SESSION_MANAGEMENT
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Order in MA with Shifted Location Reference"
 Guid="9dc822e3-b9e6-4dab-8c0e-c1be1d216454"
>
<Comment>Handling of disconnection order in MA With Shifted Location Reference message.</Comment>
<PreConditions>
<PreCondition
 Guid="bff04a90-9f08-4569-b17d-9f1e43bae450"
>Available ( aMessage.SystemVersion2.MA_WITH_SHIFTED_LOCATION_REFERENCE )
  AND
THERE_IS X IN aMessage.SystemVersion2.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | Available
( X.SESSION_MANAGEMENT )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e330cc67-1645-44c1-8ca9-1099830e8be8"
>Contact.TracksideOrderedSessionReceived
(
    Packet =&gt; (FIRST X IN aMessage.SystemVersion2.MA_WITH_SHIFTED_LOCATION_REFERENCE.Sequence1 | Available
( X.SESSION_MANAGEMENT )).SESSION_MANAGEMENT
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Report inconsistent message"
 Guid="1a1ee1ea-c2a9-45d9-9cbf-bcfeec4d97b7"
>
<ReqRef
 Id="4aa64d47-8749-4bf5-b24e-7831ff609718"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4fc51af6-5e1c-4d3d-abcd-eb59402e1d7c"
>
</ReqRef><ReqRef
 Id="25a9a61a-cb48-4ecc-9297-199f5897d32b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18e35dc8-337a-47f0-865c-a76c64109502"
>
</ReqRef><ReqRef
 Id="65c0616d-9c81-42f1-907b-c71e0d73d3ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="165f87d0-6bf1-48db-b4b9-d1e7bc3417ba"
>
</ReqRef><Comment>If the message received from the RBC is not consistent, immediately report it.</Comment>
<PreConditions>
<PreCondition
 Guid="982ffd2a-cf3e-4c42-9b0d-2b4244ae1597"
>NOT Messages.IncomingMessageIsConsistent(aMessage)</PreCondition><PreCondition
 Guid="33c61f80-67f6-4719-879f-bed75f4fc543"
>SafeRadioConnectionAvailable()</PreCondition><PreCondition
 Guid="5f07e758-dcdf-450a-a2bd-e67102577cea"
>aMessage.SystemVersion2 != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="41e0cd3a-dfcc-4521-8eb5-83fe9de32f4b"
>Messages.PositionReport.PositionReportEventsTracker.InconsistentMessage &lt;- Messages.PositionReport.InconsistentMessageTypeEnum.RBC</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ExecuteEndOfMission"
 Guid="292a1d52-1c62-46fc-a077-ac5027eb68a7"
>
<ReqRef
 Id="7b63a22c-a47e-4e98-87a7-bb6800dbb38e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b12f4c7-3107-4180-a871-10d466cc44a7"
>
</ReqRef><ReqRef
 Id="d59dd844-f144-4d73-a4eb-ba5f21dd2958"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="69eb59c6-0a56-4952-8659-c52cdd652c74"
>
</ReqRef><ReqRef
 Id="e86b435b-86a1-4af1-a9af-e87aaca847d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1de7a7e7-2302-4b8e-af92-b8ff286e5fef"
>
</ReqRef><ReqRef
 Id="b9145b48-24bf-42d2-a2ad-8283dc888f3b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="abbdde41-a097-4937-a20d-927518277c53"
>
</ReqRef><Comment>When the End of Mission procedure has to be executed, the on-board sends an End of Mission Position Report.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send End of Mission"
 Guid="ed84ed3f-68ec-4db0-a48b-fae5b849e628"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send End of Mission"
 Guid="4c198df6-1a24-4699-91e2-0034081e9dbc"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="fee0628a-3a16-4a1e-b4b7-32307d0154e3"
>SendEoMReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendTrackAheadFreeGranted"
 Guid="167f10b4-b529-4073-83bc-4df57fffd309"
>
<ReqRef
 Id="39d3a3da-a2a7-44e3-858d-5549ecf03336"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c6b0d226-5b1a-477c-9f80-1a73d75053fb"
>
</ReqRef><ReqRef
 Id="2d050b09-6a5c-4bb4-bf0f-c438a6b5741c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d2bf641-a024-40f4-80a6-e1fdc672cac9"
>
</ReqRef><ReqRef
 Id="aebab1a5-d7eb-4483-b1fb-4d494d19ece9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="48d5c8c3-a5a5-44f2-b124-049708e5088f"
>
</ReqRef><ReqRef
 Id="73d010ae-6637-4f5a-aa4c-0b6dbe9f3c2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30f1f916-3437-462c-87f2-b1cf593fdf44"
>
</ReqRef><ReqRef
 Id="14cdaf65-b7b4-48bd-be26-ab3a6c03f33b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32465574-b76a-4827-a592-9f5c8345a3b8"
>
</ReqRef><ReqRef
 Id="14a35615-f26c-4b61-a906-f2e64cb6ac19"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="31e044d3-5c9f-4776-a40c-e2280606c35c"
>
</ReqRef><ReqRef
 Id="81e40582-8c1f-4854-b6a4-c389c5b3ff6b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="765d7cfe-1765-409b-aece-3ba32bb647fc"
>
</ReqRef><Comment>Sends the track ahead free granted message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="a4e4cb6a-0157-42e6-925e-f02b0a2bfa47"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="4c572337-e3ad-48c0-bc35-ca3f7749c501"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d362940e-b44b-48cc-aee6-c7f6133843a6"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="143ae29d-9939-4a1a-8d9d-ee90dc49c9de"
>
<Comment>If the outgoing message is EMPTY, it has to be initialized and then the corresponding field is filled.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="08ff094e-8ba2-4537-9dfb-ee1b9b6a2686"
>
<PreConditions>
<PreCondition
 Guid="fb4f6985-6111-40cd-b353-065cc84a8954"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2091b658-8d3c-4f9f-8a7c-27a0abad7399"
>Data.MessageOut.SystemVersion2.TRACK_AHEAD_FREE_GRANTED &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.TRACK_AHEAD_FREE_GRANTED.Message
{
    NID_MESSAGE =&gt; 149,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; MessageTypes.UnResolveTime(Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendRequestToShortenMAIsGranted"
 Guid="916f41b1-9578-4f84-a30a-18ac768afdf1"
>
<ReqRef
 Id="a923ad08-9cd1-4b6d-9132-8fec6102d784"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="558e6797-585a-4acd-9c4f-041e9e755f25"
>
</ReqRef><ReqRef
 Id="bc02069a-b3f9-44d3-ae1b-fb27d71bb51d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4e19e7f6-aee9-4cfc-ab6c-49e400eceb39"
>
</ReqRef><ReqRef
 Id="26d39c75-1c24-46e6-b725-d71bd2fbd1c3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d76a2c81-7b86-4250-9ad8-5f6a454270be"
>
</ReqRef><Comment>Sends the message indicating that the shortened MA is granted.</Comment>
<Parameters>
<Parameter
 Type="MessageTypes.Time"
 Name="TimeStamp"
 Guid="54af5444-8191-4280-b5d4-60f99316da84"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="d8f5ea71-98f5-42fd-976c-aed166604386"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="158da2a9-0b79-443e-8d20-a3f1ee0430b2"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="bde0b939-4130-4d14-9a9d-dafe57323de2"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="ad27e878-f406-4859-9052-1e5e67ff13e0"
>
<Comment>Imports the packet message into the MessageOut.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="1555cd5a-31ed-4158-9b54-734b377c6843"
>
<PreConditions>
<PreCondition
 Guid="1d902fe6-ea84-4af6-bbaa-8fd69eb809c1"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="74740856-044d-4604-8674-3d69b129c01e"
>Data.MessageOut.SystemVersion2.REQUEST_TO_SHORTEN_MA_IS_GRANTED &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.REQUEST_TO_SHORTEN_MA_IS_GRANTED.Message
{
    NID_MESSAGE =&gt; 137,
    L_MESSAGE =&gt; 0,
    T_TRAIN_0 =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    T_TRAIN_1 =&gt; TimeStamp,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendRequestToShortenMAIsRejected"
 Guid="1abc60a8-acf1-4bc2-954a-7e07f6a59848"
>
<ReqRef
 Id="e69fe417-33db-4400-94f9-091961d6b6db"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="64906c5e-acbf-4395-a785-2de200f06078"
>
</ReqRef><ReqRef
 Id="bc02069a-b3f9-44d3-ae1b-fb27d71bb51d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a7cf521-7ad3-41b5-835b-452c06923fef"
>
</ReqRef><ReqRef
 Id="26d39c75-1c24-46e6-b725-d71bd2fbd1c3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c5b153d8-1e29-4b1a-ac7a-7d2d26432f6d"
>
</ReqRef><Comment>Sends the message indicating that the shortened MA is rejected.</Comment>
<Parameters>
<Parameter
 Type="MessageTypes.Time"
 Name="TimeStamp"
 Guid="b9c1c363-b714-43c5-ac5d-f3de0a693de2"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="bfe3ef6b-9e8e-42df-8339-4bb2b8062ac0"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="c1bae45d-ef29-47d6-a2c8-3ab65d5dbbd1"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f778fbfb-d3c3-40b6-9b8d-670766abe0d7"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="39f84bff-762f-4177-b2aa-20a9830468b7"
>
<Comment>Imports the packet message into the MessageOut.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="adb017a3-df0e-4a22-97b3-436cfc410548"
>
<PreConditions>
<PreCondition
 Guid="587bce12-1b33-45d4-b051-bd8e6b1c2816"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="161b0fe4-e5f5-4031-ad42-d8dead2fea9a"
>Data.MessageOut.SystemVersion2.REQUEST_TO_SHORTEN_MA_IS_REJECTED &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.REQUEST_TO_SHORTEN_MA_IS_REJECTED.Message
{
    NID_MESSAGE =&gt; 138,
    L_MESSAGE =&gt; 0,
    T_TRAIN_0 =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    T_TRAIN_1 =&gt; TimeStamp,
    POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendAcknowledgement"
 Guid="5d25b1f2-cf06-4ccd-8467-10627a2f69af"
>
<ReqRef
 Id="3f4bddf9-98d3-42ec-9139-6a3d3913523d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="308b6d7c-a65b-4495-869d-2d3f5c745994"
>
</ReqRef><ReqRef
 Id="02322d02-1657-4293-b17b-850ddc3cdbf7"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="b4703f71-83c5-4437-a1b4-79ba5f6e919b"
>
</ReqRef><ReqRef
 Id="f0cff7f6-c343-4e75-93c6-27833baf0a36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="06f9ad8a-1821-43e5-8131-5cf822a915be"
>
</ReqRef><ReqRef
 Id="5d32be4c-e8c6-495c-851d-1b636031e4a8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae0a8eee-5b3c-4237-903f-d06e9c481c83"
>
</ReqRef><ReqRef
 Id="1195dd4d-4d7b-47af-8412-ae87da2cc594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11ad1ae4-c01e-4a14-ab08-c8b4790d509f"
>
</ReqRef><Comment>Sends the acknowledgement of the received message.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="b3ca7648-8b67-4709-95ee-2f8cfb9a8c27"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="897b44be-ccb7-4af5-8179-0f67f9261cdf"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9f3b3517-56d9-4c9b-9039-5b24f08109fd"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="3f90535c-78a3-42c5-ba47-d02d698b3b5f"
>
<Comment>Add a position report to the output message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="3fdc81ad-8e6a-4e7a-8483-2694026f8fd0"
>
<PreConditions>
<PreCondition
 Guid="11fd9486-6ef6-4899-acc4-0a5d5647da68"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bf147e3b-7386-4f94-9725-2f8ca11d85bf"
>Data.MessageOut.SystemVersion2.ACKNOWLEDGEMENT &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.ACKNOWLEDGEMENT.Message{
    NID_MESSAGE =&gt; 146,
    L_MESSAGE =&gt; 0,
    T_TRAIN_0 =&gt; MessageTypes.UnResolveTime(Kernel.DateAndTime.CurrentTime),
    NID_ENGINE =&gt; Kernel.NidEngine,
    T_TRAIN_1 =&gt; Messages.MESSAGE.TRACK_TO_TRAIN.GetT_TRAIN(Messages.UpdatedReceivedMessage(THIS))
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SendTextMessageAcknowledgedByDriver"
 Guid="56f4d06d-d8e6-4980-931b-ea16a300e388"
>
<ReqRef
 Id="d24596c8-72fe-40e3-977b-33c6516a16ea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed91e6b8-b961-476b-94f9-4f0947ff2d15"
>
</ReqRef><ReqRef
 Id="8982834e-9034-43e0-b234-2c3cd71eec0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c105a94c-d618-4080-9a4a-172e37fc7890"
>
</ReqRef><ReqRef
 Id="e806cca0-de83-4ab3-bc0d-a597cceedaa8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6f3a3a60-03f6-4316-997e-b20976b9d65a"
>
</ReqRef><Comment>Sends the text message acknowledged by driver message.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_TEXTMESSAGE"
 Name="aTextId"
 Guid="df7ee3ca-d1eb-4ccf-9605-fe1d9439c519"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="876d52ec-dffd-4c3b-940e-814202c86497"
>
<Comment>Create an empty train-to-track message in MessageOUT.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize output message"
 Guid="be0ef67e-d5bc-4467-bf14-e732bb69939e"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b50b262f-a59f-4262-9f9e-11d11b3ee836"
>InitializeOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="f1d246ca-ee29-4bc5-aea1-72090b9b81d8"
>
<Comment>Imports the driver acknowledgement into the messageOut.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle sending of the message"
 Guid="3442f95e-19e5-4581-b85c-0aed71014827"
>
<PreConditions>
<PreCondition
 Guid="a679b477-9031-458d-9c2b-e9610e1441d5"
>Messages.MessageCanBeSent ( anRBC =&gt; THIS )</PreCondition><PreCondition
 Guid="7c31d7af-e44f-440c-bbef-c3ee741512fc"
>VersionManagement.MainVersionFromDetailledVersion( THIS.SessionManagementData.SystemVersion.Value) != VersionManagement.SystemMainVersionEnum.Version1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7e439f70-a29e-4ea4-99d1-6a99a4174ea3"
>Data.MessageOut.SystemVersion2.TEXT_MESSAGE_ACKNOWLEDGED_BY_DRIVER &lt;- Messages.MESSAGE.TRAIN_TO_TRACK.TEXT_MESSAGE_ACKNOWLEDGED_BY_DRIVER.Message
{
  NID_MESSAGE =&gt; 158, 
  L_MESSAGE =&gt; 0, 
  T_TRAIN =&gt; MessageTypes.UnResolveTime( time =&gt; Kernel.DateAndTime.CurrentTime ),
  NID_ENGINE =&gt; Kernel.NidEngine,
  NID_TEXTMESSAGE =&gt; aTextId, 
  POSITION_REPORT =&gt; Messages.PositionReport.CreatePositionReport()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="TranslateOutMessage"
 Guid="dc5ebc50-48d5-4510-8456-ec079bec4700"
>
<Comment>Operational version of messages is SystemVersion2. If the OutMessage has to be sent to constituent only able to receive lower version messages, the message is translated.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SystemVersion1"
 Guid="bdb2d3b1-f022-4196-b9ae-f61b9eb71e48"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="SystemVersion1"
 Guid="7c9263cc-8b39-44c1-9672-3ec5bb702233"
>
<PreConditions>
<PreCondition
 Guid="ba3c3dea-31dc-4784-9902-006bec8c32e2"
>THIS.SessionManagementData.SystemVersion.Value in [VersionManagement.SystemVersionEnum.Version1_0, VersionManagement.SystemVersionEnum.Version1_1]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2ab48f89-e3ba-4b61-9c21-4de648e02cbd"
>Data.MessageOut.SystemVersion1 &lt;- VersionManagement.Translation.Messages.DowndateMessage ( Data.MessageOut.SystemVersion2)</Action><Action
 Guid="e74de188-ebf1-4746-8683-b3362d71bdf3"
>Data.MessageOut.SystemVersion2 &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="TerminateCommunicationSession"
 Guid="d6a5de61-2970-4bc1-b7c2-296106ce1090"
>
<ReqRef
 Id="84374b3d-739e-4c5f-909d-4c138dedec38"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e38110b6-b022-4d26-8703-fc5ffbce44ad"
>
</ReqRef><Comment>Handle the onboard driven termination of a communication session.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="contactInfoIsKept"
 Guid="70cb1429-544f-4df4-a153-5fa021b76c88"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="TerminateCommunicationSession"
 Guid="bc04a233-a630-4526-a468-e6d46065ee19"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="TerminateCommunicationSession"
 Guid="beb8baf7-211b-4201-a9c7-717f7788f9ef"
>
<PreConditions>
<PreCondition
 Guid="21bf372a-de67-4c23-8898-5d451338d56f"
>ConnectionState in [ConnectionStateSM.Connected]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ad88db13-8872-4bd6-b529-ebf0c27d4866"
>THIS.ConnectionState &lt;- ConnectionStateSM.Terminating</Action><Action
 Guid="0af6fd26-2ffc-4e98-bae2-cb640dc4f69e"
>SafeRadioConnection.NumberOfSentRequests &lt;- 0</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reset contact information"
 Guid="34488b5e-6832-4438-a0cf-3ab9b983dd13"
>
<Comment>Contact information might be reset or not.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reset contact information and go to NoConnection"
 Guid="c675b15a-6878-4492-bfdf-fce8a7515b2c"
>
<PreConditions>
<PreCondition
 Guid="7b0e8959-ab9a-4b1e-aeab-e9dd0bcbec19"
>NOT contactInfoIsKept</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9817abfa-e712-4d99-8b0d-7fbd133632c9"
>THIS.ContactRBCOrder &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="HandleAcceptingRBCContactOrder"
 Guid="1ad3468d-3948-45b2-8534-a90249aa39c1"
>
<ReqRef
 Id="dba00c16-82a7-40b8-b31c-2978dd6bbd82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21be0db2-3cae-45e2-88d8-d8b31427e5a7"
>
</ReqRef><ReqRef
 Id="00b663b2-ab3b-4e6d-b810-4819654b3685"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebbd03a8-6c84-4b6e-992e-99d0707182e8"
>
</ReqRef><ReqRef
 Id="adc412e3-1c5f-4c95-a667-303e6aabee27"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a88d5562-df5d-42f1-9392-17e40f8edb8a"
>
</ReqRef><ReqRef
 Id="6fa8d8fc-f346-4592-b64d-ce1831a6cc98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="75b543ee-9bd6-4b03-9c53-6ae88824803c"
>
</ReqRef><ReqRef
 Id="6a073136-951c-4624-92a2-1b2f704d25ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="646648f6-a5d5-453b-ad38-e95a6b3f1553"
>
</ReqRef><Comment>Handles previously received order to contact an Accepting RBC

To manage the possibility of having one or two terminals for handover, 
the RBCTransitionOrder is first stored in AcceptingRBCContactOrder 
(the choice of the terminal itself is made at reception of the order) 
and moved to ContactRBCOrder as soon as the RBCConnection has 
no open(ing) communication session. This way, handover with one terminal 
will establish the new connection only after terminated the first one while 
handover with two terminals will initiate the new communication session at once.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Accepting RBC contact order"
 Guid="836c38bd-df22-4138-bbd9-2cfe1237d810"
>
<Comment>The contact order is transmitted to the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Accepting RBC contact order"
 Guid="caa4d84b-1b31-4ec4-a38f-c677a9724dbd"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f8407011-1eed-4334-9e92-d8c9a1b3e94f"
>ContactRBCOrder &lt;- AcceptingRBCContactOrder</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Remove the order"
 Guid="1a2c44ce-1ac0-4765-b082-57bb655e5cdd"
>
<Comment>Once the order has been handled, it is removed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove the order"
 Guid="89c26baa-932a-47a4-b3ed-8ec500493c9e"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a05dfa06-931f-401a-86d9-29afcc82063a"
>AcceptingRBCContactOrder &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<StructureElement
 TypeName="Contact.RBCContactStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="ContactData"
 Guid="f619c693-9b6c-44b9-9e47-28d4270e994f"
>
<ReqRef
 Id="becb430f-a4f2-4817-ad08-3672ed05f855"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e994975e-ef44-45ee-9520-410116dd431c"
>
</ReqRef><Comment>Identifier of the RBC.</Comment>
</StructureElement><StructureElement
 TypeName="RBCStruct.ConnectionStateSM"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="ConnectionState"
 Guid="9da35b1e-5a10-49fe-97e2-9344ea080d37"
>
<Comment>The state machine of the current connection.</Comment>
</StructureElement><StructureElement
 TypeName="Contact.ContactOrderStruct"
 Default="EMPTY"
 Mode="Internal"
 Implemented="TRUE"
 Name="ContactRBCOrder"
 Guid="2007b98c-b3ea-412e-8bcf-fb463d719de4"
>
<Comment>Provides the order to contact the RBC, if any.</Comment>
</StructureElement><StructureElement
 TypeName="SessionManagement.SessionManagementStruct"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 Name="SessionManagementData"
 Guid="1ca4ec93-c578-45ad-bbdb-e44c71c1f9aa"
>
<Comment>Data needed to establish a communication session.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Time"
 Default="BaseTypes.Time.NA"
 Mode="Internal"
 Implemented="TRUE"
 Name="OnboardReference_MessageTimer"
 Guid="04f1ba30-9faf-4c6f-a81d-5a49dfd07edd"
>
<ReqRef
 Id="60e39a2f-4380-44e7-bf85-7142748b200f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ace62bac-0b7b-47f3-9f4d-727603211e5a"
>
</ReqRef><ReqRef
 Id="42342bff-4561-490e-beae-73b88476afe8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09524587-c0ee-412d-94ee-161be904cd21"
>
</ReqRef><ReqRef
 Id="1d7817dd-686d-4c09-9e56-ef8943a94858"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9ee492c9-a4c1-4627-aa3f-e53382a3af1d"
>
</ReqRef><ReqRef
 Id="24ab9b8d-19b6-48f1-8762-46dbc0b3a225"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0111afde-b354-4430-8142-f531d55cc167"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="True"
 Mode="Internal"
 Implemented="TRUE"
 Name="ContactTimerSupervised"
 Guid="519d8ab1-f4fd-401d-8a72-2c490c24fa2e"
>
<ReqRef
 Id="88cc77ff-7146-4934-be41-451d8f3ce0bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bee59af2-52dd-4958-bac2-504a0b82d537"
>
</ReqRef><Comment>Indicates whether supervision of T_NVCONTACT is active.</Comment>
</StructureElement><StructureElement
 TypeName="Data.DataStruct"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 Name="Data"
 Guid="aa48f270-d445-4d11-b4ad-b9e4d3a008da"
>
</StructureElement><StructureElement
 TypeName="SafeRadioConnection.SafeRadioConnectionStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="SafeRadioConnection"
 Guid="5ffc5b8b-76ba-47ab-b1c2-7c95e6e69084"
>
</StructureElement><StructureElement
 TypeName="SafeRadioConnectionStatusEnum"
 Default="SafeRadioConnectionStatusEnum.NoConnection"
 Mode="Internal"
 Implemented="TRUE"
 Name="SafeRadioConnectionStatus"
 Guid="ea1f0ade-0a84-48f2-a86e-2206d337446f"
>
<Comment>The safe radio connection status.</Comment>
</StructureElement><StructureElement
 TypeName="Default.Timer.TimerStruct"
 Default="Default.Timer.TimerStruct{
StartTime =&gt; BaseTypes.Time.NA,
Duration =&gt; 300.0
}"
 Mode="Internal"
 Implemented="TRUE"
 Name="MaintainSessionTimer"
 Guid="8302a1a2-1b07-4ac9-be33-04d34983aeeb"
>
<ReqRef
 Id="308624ea-ea91-4451-b8c4-1cfbc9094f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="df961534-a04d-4a8e-a79a-d0efd0e2a765"
>
</ReqRef><ReqRef
 Id="b2ce7f07-bb0c-45fb-b2f9-3a864e344795"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f5da49f-8cba-4463-8012-f958b73aff50"
>
</ReqRef><Comment>Timer to keep a communication session alive while the safe radio connection is disconnected.</Comment>
</StructureElement><StructureElement
 TypeName="RBCConnection.Contact.ContactOrderStruct"
 Default="EMPTY"
 Mode="Internal"
 Implemented="TRUE"
 Name="AcceptingRBCContactOrder"
 Guid="9ef3a8be-10fe-410b-9cca-5f87ffffa450"
>
<Comment>In case of RBC/RBC handover including Radio Network border crossing, the registration to the new radio network has to be completed before the transition order is transmitted to the on-board. This element stores that order and transmits it once the terminal is registered.</Comment>
</StructureElement><StateMachines>
<StateMachine
 Default="NoConnection"
 Implemented="TRUE"
 Name="ConnectionStateSM"
 Guid="d82fd57c-5e3b-49a3-9588-9ba0c3633131"
>
<Comment>Handles the different processes of the connection according to its current state.</Comment>
<States>
<State
 X="410"
 Y="390"
 Width="100"
 Height="200"
 Implemented="TRUE"
 Name="Inactive"
 Guid="d33370b3-b877-475d-b1da-b15d3eaca819"
>
<ReqRef
 Id="fff58fab-5102-4a71-bbc4-ce7f2e1ea7d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2ae91ef-62dc-4b8d-8251-e7c88890230b"
>
</ReqRef><ReqRef
 Id="66901d6f-fcdd-4ddb-89e1-57f86cb9fcce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d1823063-a016-46e0-bac5-177d727e15bb"
>
</ReqRef><Comment>No connection is established yet or even establishing but contact information are known and a connection order is possibly stored.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="691e3286-67ef-4b68-b4c9-5aa0ce8e8788"
>
<ReqRef
 Id="66901d6f-fcdd-4ddb-89e1-57f86cb9fcce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ba19032-f6b8-4a5c-9e75-078b671e6ffd"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="RBC contact order received"
 Guid="b1c9e783-f0f5-4d68-8816-a13e44c8b068"
>
<ReqRef
 Id="5b9e9eb3-ffa4-47c2-a6f5-9fa6efc58ffe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5458231e-1df4-425e-8e8b-9b993b243cc4"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="99a2dff6-373a-4b16-b222-68f88c8dd6ec"
>
</ReqRef><ReqRef
 Id="752d0832-7cfa-4424-96f7-d3fbb447a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47c90c73-64b3-4eef-97b4-dee8e5f231cb"
>
</ReqRef><ReqRef
 Id="558b2068-001d-4f9f-902b-2cd23fb269d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="76238e6e-5374-4aec-bd6c-2e60ec86c787"
>
</ReqRef><ReqRef
 Id="1be02ad3-ca38-452c-a795-e398d991b2da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0769f3b0-e796-43b9-9a63-8ed1e7e0cf33"
>
</ReqRef><ReqRef
 Id="dd37c53c-3853-4b84-8080-c287bcf0cc25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="01eb5402-0cee-4757-8e9e-8bdb0dc3687f"
>
</ReqRef><ReqRef
 Id="e65aa492-e72e-4bdc-896b-8462bf7b8ea9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ac1091d-9f1b-4a2a-b2df-175afdaa07be"
>
</ReqRef><ReqRef
 Id="69641afe-f1b0-4499-9b31-e3d7a164d492"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dee9ebb6-a343-433d-a245-a666c6a38e8c"
>
</ReqRef><ReqRef
 Id="277de94f-c4cd-4612-97ca-ead1fdd29073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7847ad76-9c4f-4975-b1fa-1d812a30dd8a"
>
</ReqRef><ReqRef
 Id="dd006294-7250-4fc8-b4b1-f4e62eb12cf3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46a11136-91d9-4a7a-a0c9-68a5f22a00f3"
>
</ReqRef><ReqRef
 Id="6fa8d8fc-f346-4592-b64d-ce1831a6cc98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cdbb3b28-6764-4d7a-8b43-27e652af2f3b"
>
</ReqRef><ReqRef
 Id="adc412e3-1c5f-4c95-a667-303e6aabee27"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="309086bd-f509-469b-8a1b-559b24c6596d"
>
</ReqRef><ReqRef
 Id="6a073136-951c-4624-92a2-1b2f704d25ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a98bc4df-2d71-45c5-b43d-0a77cceb795c"
>
</ReqRef><ReqRef
 Id="68a814aa-d977-4ba8-8329-54aaaec00081"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b348482-f4fe-48e1-8f65-f7b3bbd00367"
>
</ReqRef><ReqRef
 Id="dba4721e-ecc7-46a8-945a-ca408198338c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c93960fa-89b8-4f85-ae97-9716f975088f"
>
</ReqRef><ReqRef
 Id="36ac93e3-3877-41a8-98dc-4bbdd6eff050"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d60c119-f06c-45b8-92a6-d56ee67440f9"
>
</ReqRef><Comment>When an order to contact an RBC is received, the on-board requests the set-up of a safe radio connection with the trackside.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="RBC contact order received"
 Guid="16010e1f-582d-4673-a08f-e652d867206d"
>
<Comment>The contact information is stored and the ContactRBCOrder is then emptied, leaving room for new contact orders.</Comment>
<PreConditions>
<PreCondition
 Guid="0af76169-2f9e-403e-8a82-af9926f584af"
>SessionEstablishmentOrderIsReceived(anRBC =&gt; ENCLOSING)</PreCondition><PreCondition
 Guid="031f5534-5356-4623-9c14-c6e7131c811c"
>Available(ContactData)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="30ffcf61-752f-4621-bd06-aae49937b224"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connecting</Action><Action
 Guid="890385aa-93d6-49a6-be94-a3fd1d17d4e8"
>ContactData &lt;- Contact.RBCContactStruct
{
    Id =&gt; ContactRBCOrder.Id,
    PhoneNumber =&gt; ContactRBCOrder.PhoneNumber,
    DataState =&gt; DataStateEnum.Valid
}</Action><Action
 Guid="8d1dd9c3-a710-4f27-9175-f92f71104997"
>ContactRBCOrder &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Session has to be reestablished"
 Guid="5bd6e680-ac1d-4fc5-a59e-fc21ee558109"
>
<ReqRef
 Id="558b2068-001d-4f9f-902b-2cd23fb269d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1119d3a-09f9-4316-a07b-a45ba754921e"
>
</ReqRef><Comment>Session might need to be reestablished for various reasons.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Session has to be reestablished"
 Guid="77bdfa2b-997b-44ae-b8f0-f4349f3e8208"
>
<PreConditions>
<PreCondition
 Guid="d70d315d-97c4-418f-a89b-173190c448b2"
>SessionHasToBeReEstablished ( anRBC =&gt; ENCLOSING )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b2239fea-4ba1-41af-80b6-61edccb8506e"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connecting</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reset session establishment data for special cases"
 Guid="9d941ace-d89d-42ef-a2c8-ff54038d7219"
>
<Comment>If the session was opened due to a special case, then reset its value. If the special case was &quot;due to mode change&quot;, it will be reset once the mode change report has been sent.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Reset session establishment data for special cases"
 Guid="757516e3-bab5-418e-97fd-87981cb95161"
>
<PreConditions>
<PreCondition
 Guid="71577537-bec3-47e6-8f53-baaa30b75738"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason != SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToModeChangeReport</PreCondition></PreConditions>
<Actions>
<Action
 Guid="33377292-d119-402b-ae2d-61db25cf4847"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason &lt;- SpecialCaseSessionEstablishmentReasonEnum.DoNotEstablish</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Lost ContactData"
 Guid="0eb2fd77-4a3f-4892-8c97-09ae0474592d"
>
<Comment>If a session has to be reestablished while ContactData has been lost or are not valid (e.g. due to a previous deconnection order or a failed attempt), the RBCConnection will try to connect using the LastKnownRBC if available.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Lost ContactData"
 Guid="6b4ab07e-9088-4b46-b963-6a307913a81e"
>
<PreConditions>
<PreCondition
 Guid="65d6c575-04b4-4a11-80bc-44209a787565"
>NOT Available(ContactData)
  OR
ContactData.DataState == DataStateEnum.Invalid
  OR
ContactData.DataState == DataStateEnum.Unknown</PreCondition><PreCondition
 Guid="4c9396cf-58b5-4dbb-b90f-b9d35323b112"
>Available(Contact.LastKnownRBC)
  AND
Contact.LastKnownRBC.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="102b9f84-8128-48ba-87a8-53fbd3fbc3b7"
>ContactData &lt;- Contact.LastKnownRBC</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine><EnterAction>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Enter action"
 Guid="54615cee-329a-467e-8223-20d73920d771"
>
<ReqRef
 Id="e9e7d5c2-c94d-4bb6-8aea-136e28beafd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84d5e65f-0ba6-434f-a2f1-e5c8affa0b57"
>
</ReqRef><Comment>What to do while entering the Inactive state, in particular stopping the communication and connection timers.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop connection timer and reset connection request"
 Guid="45ee1932-7220-48d8-80ed-754705137a3f"
>
<Comment>The inactive state implies the onboard has no open session nor safe radio connection. 
Hence, the timers used to manage the session and the safe radio connection are stopped.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2eff999a-649c-461f-847a-7d8b3b7abb90"
>Timer.StopTimer(SafeRadioConnection.ConnectionStatusTimer)</Action><Action
 Guid="8f09b73e-66b6-453d-890b-4a66095cbc98"
>Timer.StopTimer(MaintainSessionTimer)</Action><Action
 Guid="c6d5b27b-b1ae-44c9-ac7d-40c9d489702a"
>SafeRadioConnection.ResetRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></EnterAction>
</State><State
 X="830"
 Y="80"
 Width="100"
 Height="200"
 Implemented="TRUE"
 Name="Connecting"
 Guid="620d737c-d8e3-43c2-8cda-c9b1ca68371a"
>
<ReqRef
 Id="fff58fab-5102-4a71-bbc4-ce7f2e1ea7d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e17513f2-1ff6-46fd-9891-acd35d360389"
>
</ReqRef><Comment>The connection is being established.</Comment>
<StateMachine
 Default="RBCStruct.ConnectionStateSM.Connecting.WaitForSetUp"
 Implemented="TRUE"
 Guid="939342a0-af0b-417c-af03-c79040f6200e"
>
<States>
<State
 X="130"
 Y="110"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="WaitForSetUp"
 Guid="06d57201-ba9b-46dd-9596-30944cc7cbb2"
>
<Comment>If the request to establish the communication session was sent by the on-board, the on-board waits until the safe radio connection is set-up.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="5c8b60bd-8baa-4c41-9bb6-ffcca7cbdfc2"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle the connection request"
 Guid="9a9bbb19-838a-48e9-aa60-b9dfeaf939af"
>
<Comment>As soon as the safe radio connection is set-up, the on-board sends the message Initiation of communication session.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Safe radio connection is set-up"
 Guid="dedc8409-7712-44a5-962a-944a3b26fe52"
>
<ReqRef
 Id="1ead58b3-f05d-46bd-b3f8-bc0a16010cdd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3e40cb31-2d77-4868-8f52-b6d63bd33ce7"
>
</ReqRef><ReqRef
 Id="db4463dc-26c1-4af3-a988-31083e546a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a25639d7-3597-437e-bb63-6bec42908441"
>
</ReqRef><ReqRef
 Id="f070a20f-9665-470d-80ce-363bfa6c264a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bbed78a-f859-49a0-9ff0-df77ea8595e0"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04c1239e-16fe-409f-9811-5d484ba073a2"
>
</ReqRef><ReqRef
 Id="9b632443-f645-498c-9bf9-9771b26f19c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebe6193e-8ecd-4ccf-8fed-124173d88114"
>
</ReqRef><Comment>As soon as the safe radio connection is set-up, the on-board sends the message Initiation of communication session.</Comment>
<PreConditions>
<PreCondition
 Guid="28c2e922-3c7a-4a58-861a-33bc2615f866"
>SafeRadioConnection.ConnectionConfirmation( aSRC =&gt; ENCLOSING.SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="31c885c9-1ac7-49b7-9f05-81c99f333f80"
>SendInitiationOfCommunicationSession()</Action><Action
 Guid="f271b7b7-9884-4aed-a1ee-b9027d4cad7d"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connecting.WaitForSystemVersion</Action><Action
 Guid="1b157902-49e1-4e4c-86f2-2009a6d21b63"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.ConnectionUp</Action><Action
 Guid="9e9abc98-6ad3-4550-a96a-0e87401f8c2d"
>SafeRadioConnection.ResetRequest()</Action><Action
 Guid="f8e2985e-5431-4d84-ab48-59cf8288c933"
>SafeRadioConnection.DetainSRC()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop requests if end of mission is performed"
 Guid="646f3bec-8d5f-4ba4-9483-3bff2fc2e376"
>
<ReqRef
 Id="5c68142d-4105-4fde-a021-ad914acbfe89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8a3ea32d-98c2-4599-9302-5ac2b63672dc"
>
</ReqRef><Comment>If End of Mission procedure is performed, the requests to establish a safe radio connection shall no more be repeated.</Comment>
<PreConditions>
<PreCondition
 Guid="788ddb8c-f003-470b-9221-6ceab4d99a2f"
>Kernel.HandleModeChange in Kernel.HandleModeChangeSM.EndOfMission</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2f2121c0-547a-4f28-920b-c73ac9de628c"
>THIS &lt;- RBCStruct.ConnectionStateSM.NoConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop requests if level transition order is passed"
 Guid="9baf68f6-558e-4e7e-b656-9c97e69df736"
>
<ReqRef
 Id="358d0dbf-9187-4a9e-87a4-18c07fba71ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2926050c-3f94-48e6-95d6-ff87a3db3312"
>
</ReqRef><Comment>If the train has passed a level transition border to level 0, NTC or 1, the requests to establish a safe radio connection shall no more be repeated.</Comment>
<PreConditions>
<PreCondition
 Guid="e83c3c3e-9cfa-4ec8-9613-96417be71c7d"
>Kernel.LevelTransition.LevelTransitionToProcess.TRLevel.Value in [LevelEnum.L0, LevelEnum.LNTC, LevelEnum.L1]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b71b573b-1f53-4f37-97b5-3ea811c3a2c3"
>THIS &lt;- RBCStruct.ConnectionStateSM.NoConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop requests if announced radio hole is passed"
 Guid="3b2f67be-ebc7-4c66-b94c-5280f6238cf8"
>
<ReqRef
 Id="ce7cdbeb-b49e-4146-a701-c8e36d770f29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55d8e6e7-56aa-4194-a852-7e7ff2a4c0d2"
>
</ReqRef><Comment>If the train front passes the start of an announced radio hole, the requests to establish a safe radio connection shall no more be repeated.</Comment>
<PreConditions>
<PreCondition
 Guid="5e653953-1096-4f8d-8331-734cb465dff9"
>Kernel.TrackDescription.TrackConditions.General.IsInsideRadioHole()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="aa4d7c3e-e76d-40a7-9946-5e6162008c03"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action><Action
 Guid="16f2e7ac-f219-4580-97b7-9d5d68c894ad"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.NoConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop requests if RBC/RBC border is passed"
 Guid="02568a26-f5b0-4587-ae56-9754a49e14cf"
>
<ReqRef
 Id="3e905ad6-8df3-4561-b1b9-4d1ffb5b440f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7466439-2974-4413-bd13-68af6da33ccd"
>
</ReqRef><ReqRef
 Id="b3504e7f-b609-4f0d-96d0-a94bfd4630f3"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="c05608c5-7135-45da-9d6b-e4c8cf5cfa65"
>
</ReqRef><Comment>If the train front passes a RBC/RBC border, the requests to establish a safe radio connection shall no more be repeated. Design choice: unless the secondary terminal tries to connect to the AcceptingRBC.</Comment>
<PreConditions>
<PreCondition
 Guid="a315cce6-b406-417c-9709-d00d567e3b73"
>Kernel.TrainPosition.FrontEndPosition(PointOfInterest =&gt; DistanceIntervalEnum.Max) &gt;= RBCHandover.RBCTransitionLocation</PreCondition><PreCondition
 Guid="550a80e8-d2d6-4949-bd26-32fbaf717f81"
>NOT (
     ENCLOSING == EURORADIO.RBCConnection.SecondaryRBCConnection() 
AND 
ENCLOSING.ContactData.Id == EURORADIO.RBCConnection.RBCHandover.AcceptingRBCId 
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7857191c-725b-4d50-9197-8c15c1d2f16a"
>THIS &lt;- RBCStruct.ConnectionStateSM.NoConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Send first connection request"
 Guid="fca4b3d9-67d9-43af-8662-19533bf94103"
>
<ReqRef
 Id="5b9e9eb3-ffa4-47c2-a6f5-9fa6efc58ffe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dcebbae0-4c73-4b9f-b0d0-76d76b68ce74"
>
</ReqRef><ReqRef
 Id="ac96ab5d-7682-43e6-a576-f8a2ada8b003"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9e493a0-8e3b-4d53-abf9-a20429a268f3"
>
</ReqRef><Comment>Send the first connection request and launch the connection status timer at the same time.</Comment>
<PreConditions>
<PreCondition
 Guid="1bec176c-cba3-4c42-b97e-09642da5b438"
>NOT EURORADIO.RBCConnection.SafeRadioConnection.ConnectionRequestHasBeenSent( aSRC =&gt;  SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f16cd653-0736-4ab9-8b1c-67db55cc0bed"
>SafeRadioConnection.SendConnectionRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Repeat the connection request"
 Guid="13984cfa-f744-469f-ab79-5063a2f58711"
>
<ReqRef
 Id="db31b8b2-7e8c-4c37-ac8a-c0df7eda9f8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33d75749-ed6d-4c74-92ed-f2b12809c546"
>
</ReqRef><Comment>The connection request will be repeated as soon as Euroradio tells the previous attempt failed.</Comment>
<PreConditions>
<PreCondition
 Guid="0be80628-528c-4d57-8d41-f69139df8b40"
>SafeRadioConnection.ConnectionFailureConfirmation( aSRC =&gt;  ENCLOSING.SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Repeat the connection request"
 Guid="c6cd2b9e-746c-48d2-b150-39954458d216"
>
<Comment>Handles the repetition of connection requests.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="The request is part of an on-going SoM"
 Guid="e49895de-cf43-46aa-b926-c7fbff4a44e0"
>
<ReqRef
 Id="ac96ab5d-7682-43e6-a576-f8a2ada8b003"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8b9b3deb-5cd6-4095-acf3-aa131263a7a6"
>
</ReqRef><ReqRef
 Id="0a26d75b-0219-4e85-b731-ba4e14bcaf1c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13ede6b0-dc8d-4acc-b0ef-3d6912402ac2"
>
</ReqRef><Comment>If the request is part of an on-going SoM, it is repeated the number of times allowed by Appendix A3.1.</Comment>
<PreConditions>
<PreCondition
 Guid="870a013c-7c76-4333-a2b6-d4476047b946"
>Kernel.HandleModeChange in Kernel.HandleModeChangeSM.StartOfMission</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle request repetition in SoM"
 Guid="bdd73248-c577-4e8a-b9cd-d15a0842f3f0"
>
<Comment>If the request is part of an on-going SoM, it is repeated the number of times allowed by Appendix A3.1.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Connection is lost, send new request"
 Guid="6ee281d8-5947-4fd2-b6ea-4a61e0f5d896"
>
<Comment>If the request has to be repeated and the maximum number of requests is not reached it, a new request is sent.</Comment>
<PreConditions>
<PreCondition
 Guid="5f21704f-fd79-4d25-ac8d-54f9ec46d7e7"
>SafeRadioConnection.SRCRequest.NumberOfSentRequests &lt; NumberOfTimesToEstablishSafeRadioConnection</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ba529648-8bde-4b6c-bab8-b53b04a493ea"
>SafeRadioConnection.SendConnectionRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Connection is lost, maximum number of requests reached"
 Guid="301af69a-abcb-4f58-bb23-313539119ff7"
>
<ReqRef
 Id="0a26d75b-0219-4e85-b731-ba4e14bcaf1c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2798e911-0128-43b6-a2a6-a5ab1f59d39c"
>
</ReqRef><ReqRef
 Id="b15cc4d3-14ad-4f2e-b1d9-c70dc451cc6f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="792443e1-a9d6-48cd-9fac-4b74750f8bbb"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c59792f-c11e-45cc-9a1a-36971481d8ff"
>
</ReqRef><ReqRef
 Id="66901d6f-fcdd-4ddb-89e1-57f86cb9fcce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1605f95a-cc99-4637-90f6-f944c5374c37"
>
</ReqRef><Comment>If the request has to be repeated but the maximum number of requests is already reached, RBC declares that the setup has failed and goes to NoConnection state.</Comment>
<PreConditions>
<PreCondition
 Guid="4932a3e3-358f-4a69-b034-4dadf129cf89"
>SafeRadioConnection.SRCRequest.NumberOfSentRequests== NumberOfTimesToEstablishSafeRadioConnection</PreCondition></PreConditions>
<Actions>
<Action
 Guid="947cdfdd-e42c-4684-9dd1-65abb983fad5"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action><Action
 Guid="d6469a14-111f-45b4-846e-e000f91ba652"
>SafeRadioConnection.ResetRequest()</Action><Action
 Guid="dc483daa-7b07-4ae9-8b43-cbd205d1883a"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.ConnectionLostOrSetUpFailed</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="The request is not a part of on-going SoM"
 Guid="ef0c34e4-8af2-49ed-8202-e5b73075c9dc"
>
<ReqRef
 Id="c2fdf450-8b2f-4ed0-a744-03d015cc0c69"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b55e54e0-51eb-4729-8895-578963ed886b"
>
</ReqRef><Comment>If the request is not a part of on-going SoM, it shall be repeated until one of the specified conditions is met.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="16ba15f9-a1a0-4ae4-871b-0170a60aa6fb"
>SafeRadioConnection.SendConnectionRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="580"
 Y="110"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="WaitForSystemVersion"
 Guid="43cbdaea-3858-4ec8-92dc-701b21f480e2"
>
<Comment>The on-board waits for the system version of the trackside.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="897a8348-e831-4898-bf12-d84289248eac"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="System version received"
 Guid="504d3e3c-ba1c-4573-b0c5-e2c4369b494c"
>
<ReqRef
 Id="02f20f26-3445-49b9-95cf-a6948ab029b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19083d61-5223-4c91-a7df-5a632a8820dc"
>
</ReqRef><ReqRef
 Id="ee1a78cb-3c98-4f53-b929-22414711c590"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1fb9ff95-ce53-4ba1-aa52-b0e27cb87e3b"
>
</ReqRef><ReqRef
 Id="790cf49e-a85c-4110-b567-fc5d57052339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fa87dd51-e98e-4231-9fdd-88fae91cf033"
>
</ReqRef><Comment>When the system version is received, the communication session is considered as established.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="System version received"
 Guid="ffdd0e28-2dd6-49e6-aeb2-3d226bdb90dc"
>
<PreConditions>
<PreCondition
 Guid="fc7f4583-9abe-4721-9172-3d91c2dbab42"
>SessionManagementData.SystemVersion.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="34a43062-7ec6-473d-9e19-755099d35942"
>ContactRBCOrder &lt;- EMPTY</Action><Action
 Guid="b4f25d0d-6815-4c2d-ae03-b9c5f4fe9298"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connected</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check system version compatibility"
 Guid="dd86dead-77a9-4f8b-8cf7-09ade389a1aa"
>
<Comment>The on-board verifies it the system version of the trackside is compatible with one of its supported system versions.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="System version compatible"
 Guid="5546f28b-42bb-4732-aafe-81cf2d61613d"
>
<ReqRef
 Id="790cf49e-a85c-4110-b567-fc5d57052339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="15232b13-7aea-4fce-9832-446ada9900d3"
>
</ReqRef><Comment>If the trackside system version is compatible with the system version of the on-board, then the on-board sends the session establishment report.</Comment>
<PreConditions>
<PreCondition
 Guid="debc6364-ddf5-4ed8-82bb-c87f6321ac7b"
>VersionManagement.SystemVersionIsCompatible ( SessionManagementData.SystemVersion.Value )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="14daf0db-62ec-4f22-8031-4c28c232386d"
>SendSessionEstablishmentReport()</Action><Action
 Guid="352c41aa-f3a2-4476-be22-9c2d18e64d79"
>Contact.SetLastKnownRBC(CurrentRBCConnection().ContactData)</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="If the session was opened due to mode change, report the mode change"
 Guid="1b0f33d5-b59b-404c-ab25-69c870a007a0"
>
<ReqRef
 Id="fbaaf410-a59f-40cd-b972-aa1e84116831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b64c888c-4b8d-4bd7-92c8-5226575e1973"
>
</ReqRef><Comment>If the session was opened due to mode change, then the position report has to be sent.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="If the session was opened due to mode change, report the mode change"
 Guid="90cfe581-fa1b-4e6c-b98e-027ba721d64e"
>
<PreConditions>
<PreCondition
 Guid="4bffab3a-5169-4aed-9ee7-64261867f61f"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason == SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToModeChangeReport</PreCondition></PreConditions>
<Actions>
<Action
 Guid="52d6dbeb-bd94-41bc-ac4f-a65bcb5bd1e2"
>SendPositionReport()</Action><Action
 Guid="89958712-60ea-4c06-b42e-a461b1a64e10"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason &lt;- SpecialCaseSessionEstablishmentReasonEnum.DoNotEstablish</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="System version not compatible"
 Guid="f2c2eee4-5e19-4e48-b746-5b192000d7d8"
>
<ReqRef
 Id="25af834a-3a24-459b-b5c8-97b85eddb2e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="216a5269-acb9-4d77-8c67-d59d7b1eb902"
>
</ReqRef><ReqRef
 Id="21b52bea-13d1-437e-9aec-4d66149f68d5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="026c6422-5ea2-4120-82c7-1d668d7213e3"
>
</ReqRef><Comment>If the trackside system version is not compatible, then the session is terminated, the driver is informed and the message &quot;No compatible version supported&quot; is sent to the RBC.</Comment>
<PreConditions>
<PreCondition
 Guid="c1ec238d-eea9-409e-be02-0e281cb3ac37"
>NOT VersionManagement.SystemVersionIsCompatible ( SessionManagementData.SystemVersion.Value )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="53aed77c-69b4-4844-84ca-aeb33f10a498"
>SendNoCompatibleVersionSupported()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="360"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleRequestFromTrackside"
 Guid="e52e1adb-7a12-454b-a949-67cbfb504da2"
>
<ReqRef
 Id="bf253010-f30e-4baf-a159-2b5214063f79"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="64a3be3d-496c-4315-b995-9d369d1921c6"
>
</ReqRef><Comment>If the request to establish the communication session was asked by the trackside, the on-board waits for the message Initiation of the communication session from the trackside.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="d10a45d9-1390-4e31-8970-2532e3ffaea7"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Initiation of a communication session is received from the trackside"
 Guid="4471e880-abfe-439b-a5a0-854dbd355825"
>
<ReqRef
 Id="ca4b12ab-a31a-4af0-8bbc-bedfcba2e060"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5d7215e-13c9-4c56-a492-1470ec7e1c87"
>
</ReqRef><Comment>When the on-board receives the Initiation of a communication session message from the trackside, it considers the session as established and sends Session establishment report.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initiation of a communication session is received from the trackside"
 Guid="8b432caa-ce1c-4295-8592-63d839277421"
>
<PreConditions>
<PreCondition
 Guid="525fb74f-aecb-42f0-8285-5ad61fc9ea05"
>SessionManagementData.InitiationOfACommunicationSessionReceived</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0ad99b4e-12a5-4395-bee8-9be7964dd2ca"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connected</Action><Action
 Guid="bfd4f69e-32ac-42e9-9e8e-1ce0785e25ec"
>SendSessionEstablishmentReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Particular event"
 Guid="63704436-5af4-444f-a8e6-6349d2dee385"
>
<Comment>If an order to contact an RBC is received in connecting state, the establishing of the communication session is aborted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Order to terminate the communication session is received"
 Guid="a42b1225-8802-4fe3-9b3b-1148d9802095"
>
<ReqRef
 Id="d870fe5c-bd41-4203-9dfc-5ace398ffd56"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c000a984-92e1-4c9f-a4ab-6d8babd16d90"
>
</ReqRef><ReqRef
 Id="e1848200-b260-492c-a722-3b64311cb97f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="58a537e1-e554-487c-a5b0-3510d0ac5116"
>
</ReqRef><Comment>If an order to terminate the communication session is received, the communication session is terminated.</Comment>
<PreConditions>
<PreCondition
 Guid="c94000a1-d7dc-4cd3-becf-159031484f3a"
>ContactRBCOrder != EMPTY
  AND
ContactRBCOrder.ActionToPerform == Contact.ContactActionEnum.Terminate</PreCondition></PreConditions>
<Actions>
<Action
 Guid="005fe0c4-14fe-4ed1-8754-5011041d3708"
>THIS &lt;- RBCStruct.ConnectionStateSM.NoConnection</Action><Action
 Guid="01701ac8-5a57-4ab9-9aa1-ebfd9312b3ff"
>ContactRBCOrder &lt;- EMPTY</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Order to contact a different RBC is received"
 Guid="810dd9dd-550b-403d-aa04-45bd7c0adc05"
>
<ReqRef
 Id="c434f0b2-9953-426f-ab6b-0c705da559de"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1233accf-94cc-42df-b409-3c0c4d646543"
>
</ReqRef><Comment>If an order to contact a different RBC is received, the communication session is terminated.</Comment>
<PreConditions>
<PreCondition
 Guid="3b3b8132-510a-45e4-8ea7-1e37ef8996e4"
>ContactRBCOrder != EMPTY
  AND
(
  ContactRBCOrder.Id != CurrentRBCConnection().ContactData.Id
    OR
  ContactRBCOrder.PhoneNumber != CurrentRBCConnection().ContactData.PhoneNumber
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1096c816-665f-4d31-90fb-7dc32298eb34"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action><Action
 Guid="08690422-1272-4653-b1b5-f87a5317967d"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.NoConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="&quot;Connection status&quot; timer expires"
 Guid="6a118501-cac0-4a06-805f-b587d3b07391"
>
<ReqRef
 Id="db31b8b2-7e8c-4c37-ac8a-c0df7eda9f8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="adbf615d-a0e8-4585-951b-30dba2c016e8"
>
</ReqRef><ReqRef
 Id="cd18a937-9dc2-456d-bee7-a61bcd564e32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23802d02-9a29-4fcf-8d67-5abe1ea8a33d"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ff1c080c-34f8-4910-b38c-af6411d12a03"
>
</ReqRef><ReqRef
 Id="ecf2af34-5e55-40e4-83a6-e6ec4827734c"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="546b714c-ddc5-401c-8acb-42e9d7e303ac"
>
</ReqRef><ReqRef
 Id="b15cc4d3-14ad-4f2e-b1d9-c70dc451cc6f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d4397b5d-e102-41c1-954a-8aa7df0563f5"
>
</ReqRef><ReqRef
 Id="24cfec76-595f-41de-920e-42c8da108914"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="14a66f67-6b80-4a87-ba29-e6d2de210ce4"
>
</ReqRef><Comment>If the connection status timer expires, indicate that the connection is lost, repeat the connection request and reset the timer (otherwise the request will be repeated during the next cycle).</Comment>
<PreConditions>
<PreCondition
 Guid="add7197b-245a-42ea-8089-58928c960d36"
>Timer.Elapsed(SafeRadioConnection.ConnectionStatusTimer)</PreCondition><PreCondition
 Guid="cacd040c-6af1-44ec-85d6-7d38bc9b3d3a"
>SafeRadioConnectionStatus != SafeRadioConnectionStatusEnum.ConnectionLostOrSetUpFailed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7a967e85-a3aa-4740-a5be-0df764c85620"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.ConnectionLostOrSetUpFailed</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="830"
 Y="690"
 Width="100"
 Height="80"
 Implemented="TRUE"
 Name="Connected"
 Guid="9296f778-498c-4dfb-8eb9-bda176289afa"
>
<ReqRef
 Id="fff58fab-5102-4a71-bbc4-ce7f2e1ea7d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="de058c2b-3c56-432d-884a-8ad778bf1de4"
>
</ReqRef><Comment>The connection is established.</Comment>
<StateMachine
 Default="RBCStruct.ConnectionStateSM.Connected.InitialState"
 Implemented="TRUE"
 Guid="0b8f9771-1352-4442-9971-a125688da2ae"
>
<States>
<State
 X="130"
 Y="100"
 Width="120"
 Height="50"
 Implemented="TRUE"
 Name="InitialState"
 Guid="ad4e57e7-c527-4a6b-b01f-b9fbf7a1d9a8"
>
<Comment>The initial state, where the on-board can send its train data to the RBC, if the latter is the accepting one.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="2d47cea8-c618-4dda-b17f-7df153202e06"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handles Received SystemVersion"
 Guid="489bcaff-b5ec-4c8f-bb88-f592dc223294"
>
<Comment>Transition to the main or terminating state.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Compatible SystemVersion"
 Guid="0186dab3-e0f5-4bfa-82f3-987c4c955fc6"
>
<ReqRef
 Id="790cf49e-a85c-4110-b567-fc5d57052339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="237c6c37-af11-4b02-a924-d032fcf0282f"
>
</ReqRef><Comment>Handles train data if the systemversion is compatible.</Comment>
<PreConditions>
<PreCondition
 Guid="e361d13d-13dd-4b19-add4-4ba62461daf0"
>VersionManagement.SystemVersionIsCompatible ( SessionManagementData.SystemVersion.Value )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="26178f16-a790-43b6-ace7-e6ae61afe16a"
>THIS &lt;- ConnectionStateSM.Connected.ConnectionEstablished</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle validated train data"
 Guid="3e9be6b6-c794-4dc2-8864-ee20b5c44ad8"
>
<ReqRef
 Id="3e290fa7-299c-4897-91e4-dbcb5702edbf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5bdc8f39-44a2-4d9e-8fb9-df822fa48600"
>
</ReqRef><ReqRef
 Id="4a5cfdeb-9d79-4d58-8d37-5073de473751"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41a15e27-5587-4b5f-99bb-27ca53ad4d33"
>
</ReqRef><Comment>If the current RBC is an accepting RBC, the on-board sends its train data.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle validated train data"
 Guid="657834c9-feef-4ac1-a572-58a06727f940"
>
<Comment>If the connection with RBC is established and valid train data is present onboard, the message Validated Train Data is sent.</Comment>
<PreConditions>
<PreCondition
 Guid="2b26b73e-2b41-4741-8f2b-9b3ebe6994aa"
>Kernel.TrainData.TrainData.DataState == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="1885385a-2aa3-4151-8396-e579fca7bd78"
>IsMainConnection(ENCLOSING)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="25272c57-44ec-4c93-9595-68bf6e2fc054"
>SendValidatedTrainData()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Handle train data if accepting RBC"
 Guid="5d62b306-19d5-492b-81e6-ca0e07ed8f8b"
>
<ReqRef
 Id="1d0a9f3a-05b9-496f-808f-1dc1ece5338f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73803e17-bb68-4c62-b844-3883bd115e34"
>
</ReqRef><Comment>As soon as the on-oard equipment has established the session with the Accepting RBC, it shends its Train Data.</Comment>
<PreConditions>
<PreCondition
 Guid="07e657aa-3707-4bda-a4f4-a6d13481015f"
>NOT IsMainConnection(ENCLOSING)</PreCondition><PreCondition
 Guid="22d43fd5-302a-4983-ae19-6ff1aa829b83"
>Kernel.Mode not in [ModeEnum.SL, ModeEnum.NL]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f921aecf-212e-43c9-a4d7-622345fa1983"
>SendValidatedTrainData()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Incompatible SystemVersion"
 Guid="69c295f8-b13f-466e-a37e-e52dcd2b6265"
>
<ReqRef
 Id="25af834a-3a24-459b-b5c8-97b85eddb2e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc91bbed-813b-4819-aa0c-00841cb9080f"
>
</ReqRef><Comment>If incompatible systemversion, terminates the session.</Comment>
<PreConditions>
<PreCondition
 Guid="9220d9f2-ca41-426d-8173-a1dc844f590d"
>NOT VersionManagement.SystemVersionIsCompatible ( SessionManagementData.SystemVersion.Value )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b09aad5a-6fcf-41a9-bd7f-148303ef2775"
>TerminateCommunicationSession(False)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="610"
 Y="320"
 Width="120"
 Height="50"
 Implemented="TRUE"
 Name="ConnectionLost"
 Guid="74427cf7-e4a2-4a0c-bdc7-bebc203329c8"
>
<ReqRef
 Id="308624ea-ea91-4451-b8c4-1cfbc9094f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ce61377-be95-4310-9ada-c3c35b423175"
>
</ReqRef><Comment>When the safe radio connection is lost, the connection is considered as established during MaxTimeToMaintainACommunicationSession. During this time the process is in Connected.ConnectionLost state.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="82475326-dfa6-48d1-98f9-27f6e63db277"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle connection status"
 Guid="95c2146e-3bb3-4d69-b6ff-54fbc7105c4b"
>
<Comment>Handles the connection status.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Connection is set-up again"
 Guid="598ea9bc-0de7-49df-b4cd-0e3383fc1964"
>
<ReqRef
 Id="49cfe5c8-5648-4df1-8be1-6ae2a3a15d22"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74fd1f0a-44de-4ab4-a3ab-7531a8db7735"
>
</ReqRef><ReqRef
 Id="5342093f-7355-4153-b42e-b0eb8bb14b89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0089dd2d-382a-4402-92c9-91ff3614b031"
>
</ReqRef><ReqRef
 Id="db4463dc-26c1-4af3-a988-31083e546a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4c01bd0-13aa-4192-a3c5-2118c3dbbd1b"
>
</ReqRef><ReqRef
 Id="a4a65f87-d77f-4542-967b-9e1f99a0ecde"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1375e83d-46bf-4d79-9821-9f8a86f32624"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="373380bc-4ca2-4f14-84c9-0ef715eaad4d"
>
</ReqRef><ReqRef
 Id="37635c63-5e19-4eac-8a83-f90098b54909"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="cc761edb-100f-41fd-a957-8923256df8c3"
>
</ReqRef><Comment>If the connection is up again, the system goes back to the state Connected.ConnectionEstablished state.</Comment>
<PreConditions>
<PreCondition
 Guid="5f8339f0-ab5a-4b77-ba64-651e8410e7c2"
><Comment>Special session stopping conditions prevail.</Comment>
NOT Kernel.StopCommunicationSessions()</PreCondition><PreCondition
 Guid="3b0e6a1c-8fac-4bb1-bcbf-abe45d8bee93"
>SafeRadioConnection.ConnectionConfirmation(ENCLOSING.SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ed13bd5b-6967-4a40-bee3-d33675727dd3"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connected.ConnectionEstablished</Action><Action
 Guid="70b5069e-cb73-4c69-8a2c-0cf87e854dc4"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.ConnectionUp</Action><Action
 Guid="6f17d353-30a6-4604-96de-164c2e432ccb"
>SafeRadioConnection.DetainSRC()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Connection is lost, send a new request"
 Guid="cc260d6e-1c9e-40ba-b56f-2678ccf9cce7"
>
<ReqRef
 Id="5342093f-7355-4153-b42e-b0eb8bb14b89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aede3125-81b9-4a5a-9baf-1d7f4ebdfe23"
>
</ReqRef><ReqRef
 Id="37635c63-5e19-4eac-8a83-f90098b54909"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="53bf69c7-b089-4b8e-b4ab-6babfe613a95"
>
</ReqRef><ReqRef
 Id="db31b8b2-7e8c-4c37-ac8a-c0df7eda9f8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b03368ca-8980-4e6a-beb2-cf9499dff56e"
>
</ReqRef><Comment>A new request has to be sent as soon as EURORADIO tells the previous attempt failed.</Comment>
<PreConditions>
<PreCondition
 Guid="865762f6-cdf4-44a2-95d7-9dfbdf137d19"
><Comment>Special session stopping conditions prevail.</Comment>
NOT Kernel.StopCommunicationSessions()</PreCondition><PreCondition
 Guid="854c1776-e7dc-40c5-b67c-b8337b051c42"
>SafeRadioConnection.ConnectionFailureConfirmation( aSRC =&gt;  ENCLOSING.SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3a5452b7-fed6-4ef2-9c87-1954d6c666f7"
>SafeRadioConnection.SendConnectionRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Connection is lost, maximum time is reached"
 Guid="883f2a02-5dfe-4805-884a-626e17c2d83f"
>
<ReqRef
 Id="249d841a-1bca-4d29-8e4c-51ce7db07de4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b169e962-bb5d-4b2f-90e4-d0f8638e7479"
>
</ReqRef><ReqRef
 Id="094bdbd4-4347-42a8-81a5-44eacb4e239d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13914569-9f86-4809-b10f-4e44112900d3"
>
</ReqRef><ReqRef
 Id="5342093f-7355-4153-b42e-b0eb8bb14b89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d657961-233b-43be-b2ca-09f72b334000"
>
</ReqRef><ReqRef
 Id="66901d6f-fcdd-4ddb-89e1-57f86cb9fcce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="376cf966-7b5d-402a-a800-93d873ef7dce"
>
</ReqRef><ReqRef
 Id="752d0832-7cfa-4424-96f7-d3fbb447a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e70499f3-2fba-4f3c-a3e3-b5c9e888ca12"
>
</ReqRef><ReqRef
 Id="1be02ad3-ca38-452c-a795-e398d991b2da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ecc8719f-0efc-4af6-8aa3-ca0ed120665f"
>
</ReqRef><ReqRef
 Id="37635c63-5e19-4eac-8a83-f90098b54909"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="0bcdaea0-e1e1-4153-a839-f75c8dc6f9fd"
>
</ReqRef><Comment>Otherwise, if the maximum time to maintain a communication session is reached, the connection is considered as lost.</Comment>
<PreConditions>
<PreCondition
 Guid="5ae8c000-71b9-447e-85e9-6ff20b21b74c"
><Comment>Special session stopping conditions prevail.</Comment>
NOT Kernel.StopCommunicationSessions()</PreCondition><PreCondition
 Guid="d8e25a87-d35c-437f-864a-def0637bce1e"
>NOT SafeRadioConnection.ConnectionIsEstablished</PreCondition><PreCondition
 Guid="0a7021de-e191-4898-b26d-a0940b487b89"
>Timer.Elapsed(MaintainSessionTimer)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2d58a44a-39a5-4bf5-9712-d9525d21cb8d"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action><Action
 Guid="1e8ee9e1-e346-41b2-b922-608f09cb6551"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason &lt;- SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToLossOfConnection</Action><Action
 Guid="6aab1494-ecea-4f9f-909b-8b8255f006b0"
>Timer.StopTimer(MaintainSessionTimer)</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle safe radio connection status"
 Guid="6bcaa9e4-5510-4317-8477-dd9b27e5beb6"
>
<Comment>According to the current status of the safe radio connection, it may be declared or not as terminated.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Previous status was Connection Up"
 Guid="fba1350e-b81c-4076-a474-a74e0261e185"
>
<ReqRef
 Id="cf256420-4b87-4caf-a1cb-8e8e17d3bdca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb6f1e9f-5224-4ce9-b96a-a37db310ee6a"
>
</ReqRef><ReqRef
 Id="faa589ef-1db3-49b8-b4e9-66bca10c1754"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4f1e422-9e52-45e3-b907-5681fb28c087"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc1b0ad8-793c-4f38-acf2-a61098aba54a"
>
</ReqRef><Comment>If the previous status of the safe radio connection was &quot;Connection Up&quot;, then the safe radio connection is declared as terminated.</Comment>
<PreConditions>
<PreCondition
 Guid="fdf0690f-8c7b-4ea5-b89d-cd31b038a0f6"
>SafeRadioConnectionStatus == SafeRadioConnectionStatusEnum.ConnectionUp</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a81c9085-62ed-47f6-91c1-9573073688c8"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.NoConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Previous status was Connection Lost or Setup Failed"
 Guid="ae37f4d1-cda8-4873-8ece-d9937e3b399b"
>
<ReqRef
 Id="e9e7d5c2-c94d-4bb6-8aea-136e28beafd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a5f5b60c-10ba-463d-8b00-4e0e07fefd7a"
>
</ReqRef><ReqRef
 Id="0f9d860a-2cb9-472d-95ee-28c1c9bd5062"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dbf4abd4-5d2e-480a-826e-4fc5ce1c2e78"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5244d5d4-048d-486c-b5c7-c83e17a9e58e"
>
</ReqRef><Comment>If the safe radio connection was already declared as Lost, then, if no Start of Mission procedure is on-going, the safe radio connection is declared as terminated.</Comment>
<PreConditions>
<PreCondition
 Guid="b57d3086-f161-4390-bbfd-d8c3b479dc8b"
>SafeRadioConnectionStatus == SafeRadioConnectionStatusEnum.ConnectionLostOrSetUpFailed</PreCondition><PreCondition
 Guid="11f53a2e-cad9-47b3-bf29-0e89837f3128"
>Kernel.HandleModeChange not in Kernel.HandleModeChangeSM.StartOfMission</PreCondition></PreConditions>
<Actions>
<Action
 Guid="516bc76f-b39a-46ad-98de-6bb086ab71b2"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.NoConnection</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Connection is lost, &quot;connection status&quot; timer expired"
 Guid="87b4c89c-376f-4991-a150-e2ab9347ed7d"
>
<ReqRef
 Id="cd18a937-9dc2-456d-bee7-a61bcd564e32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="65d2ea79-4883-497a-a781-77ac9f1cdd04"
>
</ReqRef><ReqRef
 Id="24cfec76-595f-41de-920e-42c8da108914"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6567b6d-d067-4c6c-8035-17978cd5b099"
>
</ReqRef><ReqRef
 Id="e59a9c78-fdeb-4660-8f4c-3bb03d6b2bd6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="81f579e5-4764-4325-958b-01fd681a9d2c"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="888a3649-ffc6-4f6b-9e2e-453a267f07c5"
>
</ReqRef><ReqRef
 Id="37635c63-5e19-4eac-8a83-f90098b54909"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="9c1ab0ee-bc2c-462f-94eb-1de9d38d5fe2"
>
</ReqRef><Comment>If the connection is still lost and the &quot;connection status&quot; timer expires, the safe radio connection is considered as lost.</Comment>
<PreConditions>
<PreCondition
 Guid="9b60a210-7f71-4064-a330-a3f31e4db448"
><Comment>Special session stopping conditions prevail.</Comment>
NOT Kernel.StopCommunicationSessions()</PreCondition><PreCondition
 Guid="bf100c47-b3a7-41d4-a843-64e0e9bea687"
>Timer.Elapsed(SafeRadioConnection.ConnectionStatusTimer)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2b49902b-8504-4950-bc31-02fe3e8b403d"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.ConnectionLostOrSetUpFailed</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="130"
 Y="320"
 Width="120"
 Height="50"
 Implemented="TRUE"
 Name="ConnectionEstablished"
 Guid="b48c689d-c126-4a59-9e2e-a7bf9b28f2a1"
>
<Comment>The &quot;main&quot; state.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="68254766-949b-4d1a-9344-b3b8e7e70180"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Loss of the safe radio connection is detected"
 Guid="b6f6217c-72ba-43e7-bd6e-33cc9dce3d16"
>
<ReqRef
 Id="37635c63-5e19-4eac-8a83-f90098b54909"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="00d537dd-c152-4f4b-98a6-607e706f7480"
>
</ReqRef><Comment>When a loss of the safe radio connection is detected, the system goes to the state Connected.ConnectionLost an stores the current time, in order to know how long the safe radio connection has to be considered as established.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Loss of the safe radio connection is detected"
 Guid="8779a660-1dd0-4176-80b8-c172f1e2b5ba"
>
<PreConditions>
<PreCondition
 Guid="f49dce28-3e87-44d9-afa8-8a961df229fa"
><Comment>Special session stopping conditions prevail.</Comment>
NOT Kernel.StopCommunicationSessions()</PreCondition><PreCondition
 Guid="6222ed14-9c42-42d5-b29f-2e5222369f8c"
>SafeRadioConnection.ConnectionIsEstablished == False</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Verify if the train is inside an announced radio hole"
 Guid="a74a6f9a-ffdb-4c21-8c7a-62e2a33eb02e"
>
<Comment>If the connection is lost when the train is inside an announced radio hole, the safe radio connection is considered as lost.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Connection lost, the train is inside an announced radio hole"
 Guid="271faf59-7b23-4404-b868-ed9ba537f3f4"
>
<ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="239adfd0-723e-46e9-8479-a3a51fcd9711"
>
</ReqRef><ReqRef
 Id="faa589ef-1db3-49b8-b4e9-66bca10c1754"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23dd4add-24c0-4bdf-9a33-6ec6615aada5"
>
</ReqRef><ReqRef
 Id="a977087b-cf09-465c-b072-4ac0d0903dc7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8cfd489e-bad9-4415-ba6c-e9914db45169"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e85a1f8-f5a5-404f-ac29-eef9a50d4452"
>
</ReqRef><ReqRef
 Id="558b2068-001d-4f9f-902b-2cd23fb269d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="78c2b289-ebb1-4c6e-ad26-791d5c4deb8d"
>
</ReqRef><Comment>If the train is inside an announced radio hole, the connection is considered as lost and new attempts to establish the communication session will be executed only when the radio hole end will be reached.</Comment>
<PreConditions>
<PreCondition
 Guid="98dfced5-c8e3-4402-9c30-42e6826e38b0"
>Kernel.TrackDescription.TrackConditions.General.IsInsideRadioHole()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="31e5f409-b9e6-446b-867c-b18a87681e9d"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.NoConnection</Action><Action
 Guid="6d4583aa-006a-45ae-9cda-74616d81d751"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action><Action
 Guid="ec9f6b78-cb37-4e99-9057-9da349ca8a75"
>SafeRadioConnection.SpecialCaseSessionEstablishmentReason &lt;- SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToRadioHole</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Connection lost, the train is not inside an announced radio hole"
 Guid="13af3a5b-5f98-48b4-90c0-a46a36f84d3a"
>
<ReqRef
 Id="cd18a937-9dc2-456d-bee7-a61bcd564e32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbb6faeb-db9d-4974-b1c6-dd221e21af9b"
>
</ReqRef><ReqRef
 Id="308624ea-ea91-4451-b8c4-1cfbc9094f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be8eff81-4014-45d1-b4e5-ca9ef2b8ea0f"
>
</ReqRef><ReqRef
 Id="529343f5-9881-4318-8dcc-53dade4fe1df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b6326d63-de68-4338-aa3d-2e3bdbff8781"
>
</ReqRef><ReqRef
 Id="ac42de65-1111-47f1-904b-907bce323de2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b979e6de-0060-4dbb-93bd-97f3a6ff0ffe"
>
</ReqRef><ReqRef
 Id="dd37c53c-3853-4b84-8080-c287bcf0cc25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f72da592-8ff0-45cf-89ef-e9f37c5f28b3"
>
</ReqRef><Comment>If the train is not inside a radio hole, it will try to establish the connection again.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="bef7600f-38e6-4557-9a1d-4f08e07554dd"
>SafeRadioConnection.SendConnectionRequest()</Action><Action
 Guid="ed5c1847-6ece-4c06-a1fe-50505630488c"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connected.ConnectionLost</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Order to contact an RBC is received"
 Guid="0f45f74c-edd2-48e5-af53-1c74c195841c"
>
<ReqRef
 Id="dc7b33b5-d923-42f3-be12-580edb475353"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fa514d6c-987d-4d07-95e8-853b7bbf8fdb"
>
</ReqRef><ReqRef
 Id="e0a2f873-6bb3-4327-abdc-4444932d69aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92fe33e1-3eb4-4288-bade-44471e8a276c"
>
</ReqRef><ReqRef
 Id="e65aa492-e72e-4bdc-896b-8462bf7b8ea9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="345712ec-f586-4161-a260-7c2b7c4eb719"
>
</ReqRef><ReqRef
 Id="8f6d9e5c-7082-4ff4-b968-cfe98c4ad1d5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0294c3a1-1957-4f77-a8cf-82cee6f10c44"
>
</ReqRef><ReqRef
 Id="cbb3ad4b-7d33-4161-b151-347463291135"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1263efc3-144f-4ae8-beba-bc2dd63ba63e"
>
</ReqRef><ReqRef
 Id="bd6563bc-06fe-447b-8afc-e210141cc921"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a3a6f67-69f6-4260-8fdb-bfadfe6a3987"
>
</ReqRef><ReqRef
 Id="84374b3d-739e-4c5f-909d-4c138dedec38"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c02cdf5-6671-4822-b77c-666272117319"
>
</ReqRef><Comment>Handle orders to contact an RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Order to contact another RBC is received"
 Guid="63fe5c9c-8eee-4877-90ab-bc7187858c4a"
>
<Comment>When a connection to the RBC is established and a request to contact an RBC is received, the on-board sends the Termination of communication session message to the RBC and goes to Terminating state.</Comment>
<PreConditions>
<PreCondition
 Guid="45eed858-9748-4822-b4df-ef101907fd7c"
>ContactRBCOrder != EMPTY</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle termination of communication session"
 Guid="db567429-aa30-4cff-a4f1-1a09b8cb0be8"
>
<Comment>If the order action to terminate the communication session, it has to be erased (since it is handled here).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle complete termination of communication session"
 Guid="5dd79cd1-199b-4099-9a8c-fcec0a041144"
>
<Comment>If the order is to terminate the session, the contact information will be reset.</Comment>
<PreConditions>
<PreCondition
 Guid="a5ebfacd-6ea2-49c1-9d34-4a9492fec07c"
>ContactRBCOrder.ActionToPerform == Contact.ContactActionEnum.Terminate</PreCondition></PreConditions>
<Actions>
<Action
 Guid="37faeac1-ef2c-41c8-ab97-8497c4cfcec4"
>TerminateCommunicationSession(False)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle initiation of another communication session"
 Guid="7ce49ac5-77a3-45cf-a116-f63cbf6d62b3"
>
<Comment>If the order is to contact another RBC, the contact information will be kept.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="60bfc47d-389f-4f61-8c03-e7634299427b"
>TerminateCommunicationSession(True)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="70"
 Y="690"
 Width="100"
 Height="80"
 Implemented="TRUE"
 Name="Terminating"
 Guid="852724a0-2e07-4fc6-ba9d-25a46e4032a2"
>
<Comment>The connection is being terminated.</Comment>
<StateMachine
 Default="SendMessage"
 Implemented="TRUE"
 Guid="dfd5369b-7468-4e57-b4c3-591d53607134"
>
<States>
<State
 X="420"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="WaitForAck"
 Guid="f4fe3e3d-6198-4325-b13b-269273b41959"
>
<StateMachine
 Implemented="TRUE"
 Guid="cd8555d0-9d7b-4bde-97bc-5014e62ee166"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle termination of the communication session"
 Guid="0b222548-b9a6-47d8-8a8c-8f261e6eb180"
>
<ReqRef
 Id="e094e23a-bd94-4440-8632-705782494f35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="63123e27-5ac2-4644-8140-a5dd7442b99b"
>
</ReqRef><ReqRef
 Id="84374b3d-739e-4c5f-909d-4c138dedec38"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="59066bae-3e0b-4004-b5b2-be0402ed6023"
>
</ReqRef><Comment>If the acknowledgement of termination of the communication session is received, the session is considered as terminated and the process goes to Inactive state.

The information related to the current communication session is reinitialized.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Acknowledgement of termination of the communication session received"
 Guid="cc43a2d6-cf19-4c54-b780-87cc183105b5"
>
<ReqRef
 Id="533898f6-3814-4427-9e81-e9a93ab96413"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ecb077d3-9759-49d9-9b0b-323fd0990583"
>
</ReqRef><ReqRef
 Id="faa589ef-1db3-49b8-b4e9-66bca10c1754"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62bdc20c-6def-4e42-88b8-ffe432a254d9"
>
</ReqRef><ReqRef
 Id="ca032528-1cb2-4646-bcad-67c92912f36f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f248e6ac-9eae-4dc8-a660-50aa7c178025"
>
</ReqRef><Comment>When the acknowledgement of termination of the communication session is received, the session is considered as terminated and the on-board requests the release of the safe radio connection with trackside.</Comment>
<PreConditions>
<PreCondition
 Guid="7f763801-e844-4ab3-8b0f-19790f512002"
>SessionManagementData.AcknowledgementOfTerminationReceived</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cf4d6f18-e067-47ef-af99-8b3cdfe23667"
>THIS &lt;- ConnectionStateSM.Terminating.AckReceived</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Repeat Termination of Communication Session message"
 Guid="87eca200-42d6-473a-8745-c19edc24eb83"
>
<Comment>If no acknowledgement of termination of the communication session is received during the defined period of time, the message Termination of Communication Session will be sent again.</Comment>
<PreConditions>
<PreCondition
 Guid="ebbbdd28-776f-4041-a17e-a784bdf6b436"
>SafeRadioConnection.LastRequestTime + TimeBeforeMessageRepetition &lt; Kernel.DateAndTime.CurrentTime</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Repeat Termination of Communication Session message"
 Guid="74dff78e-a344-4a11-93c2-e698be2bc6fc"
>
<Comment>If no acknowledgement is received from the trackside, the on-board will repeat the Termination of Communication Session request.

Aftter a defined number of repetitions, if no acknowledgement is received from the trackside, the on-board considers the communication session as terminated.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send new request"
 Guid="b3a909c4-5069-4860-8ce2-fd7cf6766e91"
>
<ReqRef
 Id="dc7b33b5-d923-42f3-be12-580edb475353"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13e5d684-7a46-4916-9f4f-f63351acf2f0"
>
</ReqRef><ReqRef
 Id="4d7758a5-c99b-4537-8da4-a51b99dafd40"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b3a69e03-afb3-40db-a5be-a2c43f9b96d9"
>
</ReqRef><Comment>If the request has to be sent again and the maximum number of requests has not yet been achieved, the request is sent again.</Comment>
<PreConditions>
<PreCondition
 Guid="d39bee63-0912-4fd7-8aa4-ceebf64406ef"
>SafeRadioConnection.NumberOfSentRequests &lt; NumberOfMessageRepetitions</PreCondition></PreConditions>
<Actions>
<Action
 Guid="23e6bfe2-b29f-4f51-a757-32c619717618"
>THIS &lt;- ConnectionStateSM.Terminating.SendMessage</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Maximum number of requests sent"
 Guid="a41352cb-2ce8-49ed-84f9-0c2762b9f3e3"
>
<ReqRef
 Id="e0a2f873-6bb3-4327-abdc-4444932d69aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23154fa5-ffb1-4040-b127-be2ffd711f99"
>
</ReqRef><ReqRef
 Id="f9f81d1e-22c3-429b-b29b-0c828790dce4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5de2594f-32e2-4cbb-ab59-cd7f551162c6"
>
</ReqRef><Comment>If a new request has to be sent but the maximum number of reqeusts has already been achieved, the on-board considers the communication session as terminated.</Comment>
<PreConditions>
<PreCondition
 Guid="5616a12c-8a52-4abf-8880-c4a24d75d94e"
>SafeRadioConnection.NumberOfSentRequests== NumberOfMessageRepetitions</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ca565153-dca3-42f4-a94e-b62cfede617a"
>THIS &lt;- ConnectionStateSM.Terminating.TooManyAttempts</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="580"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AckReceived"
 Guid="82e9a974-1d0b-42df-9956-a46748313d9a"
>
<StateMachine
 Implemented="TRUE"
 Guid="f3afb5d9-4df1-4b34-8d0c-b82a21b75d9b"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ReleaseSRC"
 Guid="cf4998d4-1486-4824-9ae9-97c45a4ec5f2"
>
<ReqRef
 Id="e094e23a-bd94-4440-8632-705782494f35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cd68e548-2b45-4ae5-92d3-40d2bc4db274"
>
</ReqRef><Comment>Rule to handle the release of the safe radio connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send release request"
 Guid="f6d7cd97-895b-44c9-aad0-fe80eef012d5"
>
<Comment>Send a release request</Comment>
<PreConditions>
<PreCondition
 Guid="522cafa2-e2b4-4aed-9ce0-bb287e443149"
>NOT SafeRadioConnection.ReleaseRequestHasBeenSent( aSRC =&gt;  ENCLOSING.SafeRadioConnection)
  OR
SafeRadioConnection.ReleaseFailureConfirmation( aSRC =&gt;  ENCLOSING.SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a29de2a2-52b8-4e2e-a810-f34fd7400ecd"
>SafeRadioConnection.SendReleaseRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Request answered"
 Guid="fc930a83-46fa-4b9c-a72f-aff5e12b9ac0"
>
<Comment>Complete the termination of the communication session after a release request answer.</Comment>
<PreConditions>
<PreCondition
 Guid="8673cbfc-2d71-4886-9489-f79e34ba5cd5"
><Comment>When the Acknowledgement END of COmmunication is received, the communication is considered terminated by the onboard, 
hence the onboard should no longer try to maintain a safe radio connection, especially to send an SRC release request, 
if the safe radio connection is lost.</Comment>
SafeRadioConnection.ReleaseConfirmation( aSRC =&gt;  ENCLOSING.SafeRadioConnection)
  OR
NOT SafeRadioConnection.ConnectionIsEstablished</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reinitialize the connection"
 Guid="090f9484-817d-4f1f-9d22-ad80023e9c9d"
>
<Comment>Either definitevely stops the connections or start a new one if an order says so.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep contact data/order"
 Guid="b044a82f-57e1-4422-b09b-00f755b86f14"
>
<Comment>Starts a new conection if an order says so.</Comment>
<PreConditions>
<PreCondition
 Guid="3d4a4765-c32e-4a65-9b3d-f5c366efb620"
>ContactRBCOrder != EMPTY</PreCondition><PreCondition
 Guid="17c5379d-3ba3-417d-87f6-32fa5211b7d0"
>ContactRBCOrder.ActionToPerform == Contact.ContactActionEnum.Establish</PreCondition></PreConditions>
<Actions>
<Action
 Guid="27aedddd-4241-4cbf-a710-c8cf01fddeae"
>THIS &lt;- ConnectionStateSM.Inactive</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Reset data"
 Guid="f6d6e83f-628c-4460-806b-ccc1d0d2bfda"
>
<Comment>Stops connections.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0e6a150a-9710-4bde-adfa-d6a1377c193e"
>THIS &lt;- ConnectionStateSM.NoConnection</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="430"
 Y="370"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TooManyAttempts"
 Guid="c65a78a6-a30f-4001-9a3c-863fb0ec5936"
>
<StateMachine
 Implemented="TRUE"
 Guid="54592986-d7a7-4167-8a37-441c1746aff2"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ReleaseSRC"
 Guid="71450caa-c986-4dfc-a627-38424938bbdc"
>
<ReqRef
 Id="e0a2f873-6bb3-4327-abdc-4444932d69aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a695836b-38c6-4412-824a-f78df13570d7"
>
</ReqRef><Comment>Rule to handle the release of the safe radio connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send release request"
 Guid="f1c0cbf0-ee15-4ae3-b556-b844b6b8d47f"
>
<Comment>Send a release request</Comment>
<PreConditions>
<PreCondition
 Guid="78c0fbf8-5372-4c2b-a903-f25209075c65"
>NOT SafeRadioConnection.ReleaseRequestHasBeenSent( aSRC =&gt;  ENCLOSING.SafeRadioConnection)
  OR
SafeRadioConnection.ReleaseFailureConfirmation( aSRC =&gt;  ENCLOSING.SafeRadioConnection)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7c8a38da-c9eb-40b5-9514-438a3f1a307e"
>SafeRadioConnection.SendReleaseRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Request answered"
 Guid="dbaea79f-2159-4a60-9786-4ff8dcfc2cc7"
>
<Comment>Complete the termination of the communication session after a release request answer.</Comment>
<PreConditions>
<PreCondition
 Guid="3ffb3e57-490e-4cdd-9421-eaaa88a48f02"
><Comment>The onboard should no longer try to maintain a safe radio communication, especially to send an SRC release request, if the connection is lost at this stage.</Comment>
SafeRadioConnection.ReleaseConfirmation( aSRC =&gt;  ENCLOSING.SafeRadioConnection)
  OR
NOT SafeRadioConnection.ConnectionIsEstablished</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reinitialize the connection"
 Guid="a225652e-61c3-49e4-9dc4-b8e8e5958e3d"
>
<Comment>Either definitevely stops the connections or start a new one if an order says so.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep contact data/order"
 Guid="24d67521-79f3-42ae-9113-c85436f1908f"
>
<Comment>Starts a new conection if an order says so.</Comment>
<PreConditions>
<PreCondition
 Guid="05fe8908-c527-41b1-be2a-08bcdf66a4b4"
>ContactRBCOrder != EMPTY</PreCondition><PreCondition
 Guid="6262ddb3-8ede-4c65-a66e-9c868f9d9656"
>ContactRBCOrder.ActionToPerform == Contact.ContactActionEnum.Establish</PreCondition></PreConditions>
<Actions>
<Action
 Guid="db8d2d58-99ca-4996-9b7c-f890cf0f4945"
>THIS &lt;- ConnectionStateSM.Inactive</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Reset data"
 Guid="905d0325-18e5-4dd3-8bb7-23a79bbf3898"
>
<Comment>Stops connections.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2ec86ff7-6374-4f0c-9871-b229c1694af8"
>THIS &lt;- ConnectionStateSM.NoConnection</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="20"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendMessage"
 Guid="0692e2f6-6f0f-4b46-adbb-f28eea0d4b77"
>
<ReqRef
 Id="eb15fb03-1030-4189-9a4c-737cce09a97c"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="010a731c-cb2e-43f9-bd8b-3c94d936bac9"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 Guid="bc4fc7af-4fdf-41a4-91fb-f716692a12fd"
>
<ReqRef
 Id="eb15fb03-1030-4189-9a4c-737cce09a97c"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="a1311f8a-fdc8-425f-b6b6-0834cc23554f"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send message and go to Waiting state"
 Guid="caff10cd-845b-4492-877f-ac8c3d5e5d9e"
>
<ReqRef
 Id="bc41e5e5-6fff-4b96-a901-9bc45f108b16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c79ad405-2f17-4450-b369-58d2f368a6ae"
>
</ReqRef><Comment>Sends the message Termination of Communication Session each time this state is reached.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Request sent"
 Guid="cb787f4b-df86-417f-a95f-5b1db1d3d370"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="5c214c00-2ace-4870-a375-bf035dd0fa3c"
>SendTerminationOfCommunicationSession()</Action><Action
 Guid="609d41fa-f1d6-485d-8681-5e02b00e4ef4"
>THIS &lt;- ConnectionStateSM.Terminating.WaitForAck</Action><Action
 Guid="8c94cd62-33d6-44a8-a726-b48c5e0f1d88"
>SafeRadioConnection.LastRequestTime &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="70"
 Y="90"
 Width="100"
 Height="200"
 Implemented="TRUE"
 Name="NoConnection"
 Guid="ff6ddab3-eaa9-438a-afe1-7857a527449b"
>
<Comment>No connection information has been received.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="a1c08b9c-08d5-4ee9-aade-6157497ae1f6"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="RBC contact order received"
 Guid="807ab4c0-9871-49fa-888f-f135cd0a6439"
>
<Comment>Once an order is receive, starts the connection procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="RBC contact order received"
 Guid="d3a86366-2c10-4115-9cd2-389e7e0a496c"
>
<PreConditions>
<PreCondition
 Guid="7be48796-5303-41fb-b2e8-a0863e00aa83"
>ContactRBCOrder != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6ce06581-586d-494d-b603-29713593bb40"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Establishment of communication session requested by trackside"
 Guid="078e4aad-f6a1-48b9-999f-df3808876be3"
>
<ReqRef
 Id="484b41b4-a894-43b4-9ee4-a7227ddfd3aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20784d49-0f83-447f-ab8b-bdb43f2465bf"
>
</ReqRef><ReqRef
 Id="db4463dc-26c1-4af3-a988-31083e546a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bccfede5-1b36-4e0c-84c4-d59ef50c0188"
>
</ReqRef><ReqRef
 Id="f070a20f-9665-470d-80ce-363bfa6c264a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="526f1300-ff99-4b0d-94ec-7f06e23068f4"
>
</ReqRef><ReqRef
 Id="bf253010-f30e-4baf-a159-2b5214063f79"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c39a1ce0-2cc7-4a90-a708-caa018244a67"
>
</ReqRef><ReqRef
 Id="529343f5-9881-4318-8dcc-53dade4fe1df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26e882e9-db8b-4fa7-926f-deb6d5b4a45d"
>
</ReqRef><Comment>If the trackisde requests the establishment of communication session, the on-board sets up the safe radio connection and waits for the message Initiation of communication session from the trackside.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Establishment of communication session requested by trackside"
 Guid="50e554d4-aa95-4f7e-896c-80aa749af607"
>
<Comment>In this case, no contact information is received from the the trackside, hence attempts by the onboard to reestablish the lost connection are doomed.</Comment>
<PreConditions>
<PreCondition
 Guid="7646887d-9f41-46be-afc8-7baa48bad286"
>SafeRadioConnection.ConnectionRequestIsReceived</PreCondition></PreConditions>
<Actions>
<Action
 Guid="acac9f9a-a9de-4efe-b716-f52130488da8"
>THIS &lt;- RBCStruct.ConnectionStateSM.Connecting.HandleRequestFromTrackside</Action><Action
 Guid="ecf1a755-d1fb-4123-82de-4e8d7e3dad23"
>SafeRadioConnection.ConnectionIsEstablished &lt;- True</Action><Action
 Guid="e0c9fd6f-6e95-44d9-99ad-07fb09da4ad3"
>SafeRadioConnectionStatus &lt;- SafeRadioConnectionStatusEnum.ConnectionUp</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Session has to be reestablished"
 Guid="261e3d02-c4c5-4999-a135-ff2ccd787dfd"
>
<Comment>Commnication session may need to be restarted, even after a proper termination, without a trackside order.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Session has to be reestablished"
 Guid="804acdc3-8837-4818-b5f2-f5a2da7f487a"
>
<PreConditions>
<PreCondition
 Guid="d3d286ea-65f3-4f0d-aa7e-d7e1e283e448"
>SessionHasToBeReEstablished ( anRBC =&gt; ENCLOSING )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="52b1a202-e4a6-462f-b04e-e4a2302138df"
>THIS &lt;- RBCStruct.ConnectionStateSM.Inactive</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine><EnterAction>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Enter action"
 Guid="57e886f4-7bd1-411d-b752-85d4cb2efe05"
>
<Comment>The NoConnection state is understood as the one corresponding to an idle RBCConnection, with no contact data, no contact order or whatever.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Set SafeRadioConnectionValue to its default"
 Guid="497aff36-096c-4d2d-a61b-bc70413b412f"
>
<ReqRef
 Id="25af834a-3a24-459b-b5c8-97b85eddb2e8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bb4cdf7-1931-417e-beb1-60286392babd"
>
</ReqRef><ReqRef
 Id="e9e7d5c2-c94d-4bb6-8aea-136e28beafd2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20c6505c-cf9e-41d3-8e23-4badbba0ef4a"
>
</ReqRef><Comment>In case the connection setup failed, e.g. due to an incompatible system version, the connection should terminate and the DMI contact information reset.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e0953ffe-802e-499b-a1b6-d26ec4df3289"
>ReinitializeCommunicationInformation()</Action><Action
 Guid="c364a08a-b7c7-4511-87e0-c1742b7c98ba"
>DMI.MasterDMI().In_RBCContactInformation.Reset()</Action></Actions>
</RuleCondition></Conditions>
</Rule></EnterAction>
</State></States>
</StateMachine></StateMachines>
</Structure></Structures>
<Functions>
<Function
 Type="RBCConnection.RBCStruct"
 Default=""
 X="580"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedRBCStruct"
 Guid="3b3df9c0-e3e7-43f4-9ae1-b1037f80d560"
>
<Comment>The operational version of incoming messages is SystemVersion2. This function is used to translate a lower version version received message. It returns a RBCStruct structure. Note that the original and stored structure is not changed.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="aRBC"
 Guid="d581e7fd-7cf6-4384-8142-fc220965ab1c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="f89c53a7-8135-4290-96c2-c03a1e56dfb1"
>
<Expression>RBCConnection.RBCStruct
{
  ConnectionState =&gt; aRBC.ConnectionState, 
  ContactData =&gt; aRBC.ContactData, 
  ContactRBCOrder =&gt; aRBC.ContactRBCOrder, 
  ContactTimerSupervised =&gt; aRBC.ContactTimerSupervised,
  Data =&gt; Data.DataStruct{
    MessageIn =&gt; Messages.UpdatedMessageIn(aRBC),
    MessageOut =&gt; aRBC.Data.MessageOut
  },
  OnboardReference_MessageTimer =&gt; aRBC.OnboardReference_MessageTimer, 
  SafeRadioConnection =&gt; aRBC.SafeRadioConnection,
  SafeRadioConnectionStatus =&gt; aRBC.SafeRadioConnectionStatus,
  SessionManagementData =&gt; aRBC.SessionManagementData
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SessionHasToBeReEstablished"
 Guid="5038c7fd-eeb6-4629-878c-aa6f52c39063"
>
<ReqRef
 Id="a9881801-963e-4a33-98f1-1962fc249f4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55de055d-d65c-4ff7-b87a-80135a988920"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dd73c11-e996-4738-a8e5-cbb294030488"
>
</ReqRef><ReqRef
 Id="752d0832-7cfa-4424-96f7-d3fbb447a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c2f48f7-ee72-45fc-93e3-031eb4eab2c2"
>
</ReqRef><ReqRef
 Id="1be02ad3-ca38-452c-a795-e398d991b2da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a75c0c3c-b69f-4142-b538-ccc0cebdffa5"
>
</ReqRef><ReqRef
 Id="fbaaf410-a59f-40cd-b972-aa1e84116831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c8529a4-5198-4de6-9483-8f90ac636979"
>
</ReqRef><Comment>Indicates if a communication session has to be established.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="anRBC"
 Guid="6c09e0fd-ecb7-47eb-aaaf-39f94e0970ee"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Establish session due to loss of safe radio connection"
 Guid="23a1d6c0-14c5-4f08-ae93-3f738cc84c23"
>
<Comment>Second case: if the safe radio connection was lost, the session has to be established again.</Comment>
<PreConditions>
<PreCondition
 Guid="85bd9e76-4cd8-4247-afe6-1fd60098e58e"
>anRBC.SafeRadioConnection.SpecialCaseSessionEstablishmentReason == RBCConnection.SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToLossOfConnection</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Establish session due to end of announced radio hole"
 Guid="baf8a056-2659-4ab8-9879-bdb8602f0a74"
>
<Comment>Third case: if the connection was last due to an announced radio hole and the train has reached its end, the session has to be established again.</Comment>
<PreConditions>
<PreCondition
 Guid="b5e8db11-f4d9-426b-915b-6324ac7b9956"
>anRBC.SafeRadioConnection.SpecialCaseSessionEstablishmentReason == RBCConnection.SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToRadioHole</PreCondition><PreCondition
 Guid="44942523-b06e-4e90-94c0-c6d3f71ab6f8"
>NOT Kernel.TrackDescription.TrackConditions.General.IsInsideRadioHole()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Establish session due to mode change report"
 Guid="b68914c4-d26d-49c5-96df-f2f08fbebbeb"
>
<Comment>Fourth case: the mode change report has to be sent.</Comment>
<PreConditions>
<PreCondition
 Guid="a510e0d1-2f90-4b43-aea2-0b0b2e446ee2"
>anRBC.SafeRadioConnection.SpecialCaseSessionEstablishmentReason == RBCConnection.SpecialCaseSessionEstablishmentReasonEnum.EstablishDueToModeChangeReport</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="74c5d7e9-13ef-45ae-9e1e-ae77e6ec2b8d"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="RBCConnection.RBCStruct"
 Default=""
 X="690"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SecondaryRBCConnection"
 Guid="74ee579a-acba-4659-83ae-89dc0f8c11b6"
>
<ReqRef
 Id="e48c27fe-8961-45a6-aa65-e8d83fd609ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7c24585-39e3-4a01-9c9a-3fa8956609c4"
>
</ReqRef><Comment>Provides the secondary RBCConnection, if any. For use in the handover procedure.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="de54d591-01e5-4c80-9144-3a7a02dd1aff"
>
<PreConditions>
<PreCondition
 Guid="469f53fe-6711-40a3-826d-0c195e329396"
>Terminal.SecondaryTerminal() != EMPTY</PreCondition></PreConditions>
<Expression>Terminal.SecondaryTerminal().RBCConnection</Expression>
</Case><Case
 Name="Otherwise"
 Guid="bd8987f4-2817-4121-9791-f02667f5eb21"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="RBCConnection.RBCStruct"
 Default=""
 X="360"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentRBCConnection"
 Guid="3f3bd225-5d45-4ad8-a3c3-4b15bd9d11e4"
>
<Comment>Provides the current RBC connection as the connection of the current terminal. 
Note that it is not assumed the terminal is registered.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="71411cb1-fbc3-4d56-8c9e-a2ac172c6983"
>
<PreConditions>
<PreCondition
 Guid="bb014a8c-02c8-411f-aead-230ff692fe06"
>Terminal.CurrentTerminal() != EMPTY</PreCondition></PreConditions>
<Expression>Terminal.CurrentTerminal().RBCConnection</Expression>
</Case><Case
 Name="Otherwise"
 Guid="984a77f7-e0b3-47a8-a143-97317303a43b"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="String"
 Default=""
 X="360"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentRBCNetworkId"
 Guid="8ce01381-8495-492b-979b-c3bb8ed31772"
>
<Comment>Provides the current RBC networkID as the network Id of the current terminal.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="ec8a5191-ca5e-4b2e-86e4-6de7e7880e40"
>
<Expression>Terminal.CurrentTerminal().NetworkId</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="580"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="OnboardTimerWrapped"
 Guid="6f55c9e3-c1c3-4469-8b3a-f025d7a082a3"
>
<ReqRef
 Id="b5a598d2-0344-4c46-9e26-cc53c26f73c7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="39679642-6729-494e-b1b9-4111e5ebe99d"
>
</ReqRef><Comment>If the timestamp of the received message is less than the stored time stamp, check whether the on-board timer wrapped around.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="a994b6b9-9beb-4de2-b0d8-e24ea5313601"
>
<Expression>Kernel.DateAndTime.CurrentTime &lt; RBCConnection.CurrentRBCConnection().OnboardReference_MessageTimer</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafeRadioConnectionAvailable"
 Guid="433251fa-c1c9-4123-80f9-2c198cf47a5b"
>
<ReqRef
 Id="4aa64d47-8749-4bf5-b24e-7831ff609718"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bd78dd32-cdec-4219-a6e7-cf7360c52758"
>
</ReqRef><Comment>Checks that there is a safe radio connection if required in the current mode.</Comment>
<Cases>
<Case
 Name="Do not chack safe radio connection"
 Guid="4524bc5f-47e2-475e-8cae-e211b11d3615"
>
<PreConditions>
<PreCondition
 Guid="54a43f86-85c6-4bb8-b2cc-a6bce90e696f"
>NOT Kernel.ActiveFunctions.CheckSafeRadioConnection()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="ab2962af-22fb-4515-b99a-f531820a4683"
>
<Expression>RBCConnection.CurrentRBCConnection().ConnectionState in RBCConnection.CurrentRBCConnection().ConnectionStateSM.Connected</Expression>
</Case></Cases>
</Function><Function
 Type="RBCConnection.SafeRadioConnectionStatusEnum"
 Default=""
 X="360"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafeRadioConnectionStatusToDisplay"
 Guid="01f97d52-632a-4415-ba9d-13258655f467"
>
<ReqRef
 Id="03c854a9-637b-42ee-b747-173045437dd6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="caa80c65-6722-4958-bea9-c18f15b45052"
>
</ReqRef><ReqRef
 Id="a5a3cbff-14ec-43ba-afca-63c2734d0414"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26657bbd-ad58-49b8-8b34-9533578476bf"
>
</ReqRef><ReqRef
 Id="2be2d035-b42d-4e1b-9788-dded559e7f64"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46df6750-813d-4506-83c2-5cf995fe55a6"
>
</ReqRef><Comment>Provides the Safe Radio Connection Status to display.

In normal cases, the Safe Radio Connection Status of the current connection is displayed.

The only one case where the status to display is that of the secondary connection, is when the Accepting RBC has already become the supervising RBC, but the connection with the Handing Over RBC has not yet been released.</Comment>
<Cases>
<Case
 Name="Status of secondary RBC connection"
 Guid="bf82c512-40c9-460b-ad10-85f4fe30d0c5"
>
<PreConditions>
<PreCondition
 Guid="514190b9-00d9-4441-8105-a81690a45408"
>Available(RBCConnection.SecondaryRBCConnection())
  AND  
RBCConnection.SecondaryRBCConnection().SafeRadioConnectionStatus != RBCConnection.SafeRadioConnectionStatusEnum.NoConnection</PreCondition><PreCondition
 Guid="df0005db-e407-4bad-ac83-088c0c650916"
>Kernel.TrainPosition.FrontEndPosition ( PointOfInterest =&gt; DistanceIntervalEnum.Max ) &gt;= RBCHandover.RBCTransitionLocation</PreCondition></PreConditions>
<Expression>RBCConnection.SecondaryRBCConnection().SafeRadioConnectionStatus</Expression>
</Case><Case
 Name="Status of primary RBC connection"
 Guid="41e451b4-db69-4f57-9d05-fdef3cda4f86"
>
<Expression>RBCConnection.CurrentRBCConnection().SafeRadioConnectionStatus</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AllSessionsClosed"
 Guid="d5ab709a-c73f-4f2a-bece-c9c7586dcde5"
>
<ReqRef
 Id="abbd517e-8b49-43b4-8dfa-117c8988fa86"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0dc0a5ce-e9ad-4e66-9089-3cd52c0eb9cc"
>
</ReqRef><Comment>Indicates if all the Euroradio sessions are closed</Comment>
<Cases>
<Case
 Name="Value"
 Guid="570d8238-c486-4d19-bd40-02645a6b780e"
>
<Expression>EURORADIO.RBCConnection.CurrentRBCConnection().ConnectionState in [RBCConnection.RBCStruct.ConnectionStateSM.NoConnection,
RBCConnection.RBCStruct.ConnectionStateSM.Inactive]
AND
EURORADIO.RBCConnection.SecondaryRBCConnection().ConnectionState in [RBCConnection.RBCStruct.ConnectionStateSM.NoConnection,
RBCConnection.RBCStruct.ConnectionStateSM.Inactive]</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="580"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SessionEstablishmentOrderIsReceived"
 Guid="29499d5e-fa26-4d49-a920-45fbaed77748"
>
<Comment>Utility function to tell whether a connection order has been received from the trackside.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="anRBC"
 Guid="622cc75a-813a-415f-9133-d9e77dc524f2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="d9f492df-d0da-4799-98d2-f92e8dab335b"
>
<Expression>anRBC.ContactRBCOrder != EMPTY
  AND
anRBC.ContactRBCOrder.ActionToPerform == Contact.ContactActionEnum.Establish</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="470"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SessionHasToBeEstablished"
 Guid="89c9ff94-64e4-49f0-8427-8b9e22239199"
>
<ReqRef
 Id="a9881801-963e-4a33-98f1-1962fc249f4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94f36c2c-6864-44ef-bce1-dc0f58ed770e"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="593b36dc-2b8d-4b19-b4ff-64934e7b1d28"
>
</ReqRef><ReqRef
 Id="752d0832-7cfa-4424-96f7-d3fbb447a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6974d69e-486b-48b3-b5c4-fd955d16cff9"
>
</ReqRef><ReqRef
 Id="1be02ad3-ca38-452c-a795-e398d991b2da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="463c7477-ccb3-4a4d-919f-c69b74e83822"
>
</ReqRef><ReqRef
 Id="fbaaf410-a59f-40cd-b972-aa1e84116831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a0d3d19-7a22-459d-a263-d469c23c4a35"
>
</ReqRef><Comment>Indicates if a communication session has to be established.</Comment>
<Parameters>
<Parameter
 Type="RBCConnection.RBCStruct"
 Name="anRBC"
 Guid="5dcd96f4-f537-4293-9b5e-52b8e6a50e73"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Session has to be established"
 Guid="88734fac-2519-40b9-805e-97bf8de72d76"
>
<PreConditions>
<PreCondition
 Guid="551f9b2b-c551-4c98-91c1-c422b384f91e"
>SessionEstablishmentOrderIsReceived(anRBC)
  OR
SessionHasToBeReEstablished(anRBC)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="5dd2df99-4a44-4bae-9625-89869a853eae"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="690"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="IsMainConnection"
 Guid="fb0e4283-484e-49b8-bda3-98276f6d8ea6"
>
<Comment>Utility function to tells whether the given RBCConnection belongs to the main terminal, hence is the main or current connection.</Comment>
<Parameters>
<Parameter
 Type="EURORADIO.RBCConnection.RBCStruct"
 Name="anRBCConnection"
 Guid="532a4d28-3827-4e82-b73b-542bf21c8810"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="7a3bec56-7f5e-4e5e-bca0-7ea71e708aef"
>
<Expression>anRBCConnection == EURORADIO.RBCConnection.CurrentRBCConnection()</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="120"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleInitiationOfACommunicationSession"
 Guid="e148b0a4-d11d-4f3d-aa7b-9d8a9065121c"
>
<ReqRef
 Id="5553cd84-d563-49a7-8514-0b4890a35066"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc57eeb8-ddae-467e-a5d7-89a5d8c3d293"
>
</ReqRef><ReqRef
 Id="e5b845f3-54de-4120-8f98-f59e56625654"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c365964-b047-4477-95dd-7596ce4eeed3"
>
</ReqRef><Comment>When the Initiation of a communication session message is received, this information is stored.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.INITIATION_OF_A_COMMUNICATION_SESSION.Message"
 Name="aMessage"
 Guid="15dd081b-81bb-4708-9e41-0cde0f553038"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Indicate the message is received"
 Guid="c0c8406e-c5a8-4498-9843-d5d8e450fa68"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Indicate the message is received"
 Guid="7555654b-32ae-4b36-a935-25932d303ad0"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="719c1d19-13d5-4770-8ba1-1b886c2f4980"
>RBCConnection.CurrentRBCConnection().SessionManagementData.InitiationOfACommunicationSessionReceived &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="230"
 Y="420"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CloseRBCSession"
 Guid="2691fd9c-77e5-40c8-859a-310f132a7a1c"
>
<ReqRef
 Id="058ba686-ff06-4bed-b616-68b4fb4ea7fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1781efd-43f9-4cb5-be4a-bc6450114f28"
>
</ReqRef><ReqRef
 Id="84374b3d-739e-4c5f-909d-4c138dedec38"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bb496d49-ec11-41dc-befc-da7c8c5407fa"
>
</ReqRef><ReqRef
 Id="83709cd5-3863-48a0-8264-34f65a482b28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="85a4bcf7-b532-435d-9f05-b6444ea4586a"
>
</ReqRef><ReqRef
 Id="ae649b47-cdfc-4223-b13d-4b1efaef612d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c6d8d20-0b10-4548-aafc-35837ff10e5f"
>
</ReqRef><Comment>Closing an RBC connection corresponds to an order to contact the current RBC with action &quot;Terminate&quot;.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Close the session"
 Guid="b37006ef-5ce5-4c15-9dd8-55ec01214286"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Close the session"
 Guid="4446a776-8c46-438a-8b89-c979faf871ba"
>
<PreConditions>
<PreCondition
 Guid="f61e15b3-f066-4882-b49c-85e66700281b"
>Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9c41a20d-c457-4bed-8e73-8106d54cde3b"
>ManageRBCConnection
(
    anOrder=&gt; Contact.ContactOrderStruct
    {
        Id =&gt; RBCConnection.CurrentRBCConnection().ContactData.Id,
        PhoneNumber =&gt; RBCConnection.CurrentRBCConnection().ContactData.PhoneNumber,
        ActionToPerform =&gt; Contact.ContactActionEnum.Terminate
    }
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="230"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ManageRBCConnection"
 Guid="d105e077-5c97-4b2b-97a0-538f17fd7201"
>
<ReqRef
 Id="951fc6d8-739b-4bd4-9361-5686840e8b5a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="819e1e79-9b39-4782-b8f6-2e8ef581405d"
>
</ReqRef><ReqRef
 Id="e65aa492-e72e-4bdc-896b-8462bf7b8ea9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="186a859f-0ee2-4458-8b0b-f471f0cbdf5e"
>
</ReqRef><ReqRef
 Id="e4addba5-4948-4054-b3dc-0e7eeabd6768"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18a671d3-8767-4b2f-ba96-f58870ebde49"
>
</ReqRef><ReqRef
 Id="8f6d9e5c-7082-4ff4-b968-cfe98c4ad1d5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b96e0c1-e66d-49f5-ad67-1b38cdacab23"
>
</ReqRef><ReqRef
 Id="cbb3ad4b-7d33-4161-b151-347463291135"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="572418c7-97e0-45c2-8c2e-1c8e7a897658"
>
</ReqRef><ReqRef
 Id="bd6563bc-06fe-447b-8afc-e210141cc921"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ca675e4f-a03e-4c1d-a96d-99e18b58a73c"
>
</ReqRef><ReqRef
 Id="573d0d6d-98df-43fa-8065-22f5dae937f3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d48e4cd2-54f9-4787-837f-ee40acc85794"
>
</ReqRef><ReqRef
 Id="cae9ea11-6eb1-49b7-b010-183e0c897e7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a405afc3-bc82-4c58-b388-1ce500d52660"
>
</ReqRef><Comment>Allows to establish/terminate the communication session with an RBC. If no mobile terminal is registered, the order is rejected.</Comment>
<Parameters>
<Parameter
 Type="Contact.ContactOrderStruct"
 Name="anOrder"
 Guid="bd7c227e-3f2a-4591-b2f2-0261dead5db0"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Select RBC"
 Guid="d8aeb849-b368-455f-9c7b-b9df2fe98385"
>
<Comment>Selection of RBC according to their communication status.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="There is at least one mobile terminal registered"
 Guid="0e5a581a-1201-405e-b00a-40ae760b28f2"
>
<Comment>If there is at least one mobile terminal registered, the on-board requests to establish the connection.</Comment>
<PreConditions>
<PreCondition
 Guid="f76e9e01-3ba5-4eb3-8563-aef8799f02d3"
>Contact.SelectRBCToContact() != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fb0c323a-04ee-47a6-86cd-341b24a90ee3"
>Contact.SelectRBCToContact().ContactRBCOrder &lt;- anOrder</Action><Action
 Guid="b327d97a-1053-46ca-a7eb-480617cdb643"
>Contact.RBCContactOrderToRepeat &lt;- EMPTY</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No mobile terminals are registered"
 Guid="10050a00-0387-4b75-84ad-ef36b7942386"
>
<ReqRef
 Id="1d7b7d76-6567-4512-ab16-84e87808264f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3ea8cfd-05cf-4baf-8797-7d00867b360e"
>
</ReqRef><Comment>If there is no mobile terminal registered, the order to contact the RBC is stored in order to retry the connection establishment later and the driver is requested to enter the contact data.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c74d158a-5aad-472c-9837-f0467d1ce3f8"
>Contact.RBCContactOrderToRepeat &lt;- anOrder</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle terminal registration"
 Guid="40194bc4-0ac8-46b4-bc8c-9597f7d2a6fb"
>
<Comment>If there is no mobile terminal registered, the driver is requested to enter the contact data or the connection is established according to previously stored data.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Last known network id is available"
 Guid="e0aa62f1-3590-4c8a-b763-5b08d22b7432"
>
<Comment>The information about the last unknown network is stored on-board =&gt; the terminals are registered with this information.</Comment>
<PreConditions>
<PreCondition
 Guid="fb8b18ba-7882-4bb1-aaf3-68e9c372b9e8"
>Terminal.LastKnownNetworkId != &apos;&apos;</PreCondition></PreConditions>
<Actions>
<Action
 Guid="28e290a4-51be-483e-9fa6-a06cad53f05d"
>Terminal.RegisterMobileTerminals( aNetworkId =&gt; Terminal.LastKnownNetworkId )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No network id available, data entry not proposed yet"
 Guid="81a8cb24-f23b-4ddb-b5b2-bca8b0938ead"
>
<ReqRef
 Id="00a1581e-9f11-4254-b27b-c762074e9dde"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44e8c435-29a3-4fb0-b7cd-c127b8645829"
>
</ReqRef><Comment>Otherwise, if the mode is different from TR, the driver is requested to enter the connection data.</Comment>
<PreConditions>
<PreCondition
 Guid="5b896537-0cd3-4108-8766-68152d5eea7f"
>DMI.MasterDMI().In_RBCContactInformation.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="6dc5d3cd-fdbd-4642-9f27-ec7398ba1982"
>Kernel.Mode != ModeEnum.TR</PreCondition></PreConditions>
<Actions>
<Action
 Guid="43066826-6217-4a25-87ff-a9bce7e4c9b7"
>DMI.MasterDMI().In_RBCContactInformation.InitiateRequest
(
    aActions =&gt; Contact.GetDriverActionsForSoM(),
    anRBCContactInformation =&gt; Contact.GetRBCContactInfoForSoM()
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No network id available, driver provided the contact information"
 Guid="0471ad84-4efc-42f2-bc4c-cbe64854e8e4"
>
<Comment>When the driver enters the connection data, the mobile terminals are registered.</Comment>
<PreConditions>
<PreCondition
 Guid="f233f57b-bf25-46ae-9918-86536bc4985c"
>DMI.MasterDMI().In_RBCContactInformation.InputInformation.RequestStatus == RequestEnum.Response</PreCondition></PreConditions>
<Actions>
<Action
 Guid="44217646-714f-49c3-8352-2f030641cc52"
>Terminal.RegisterMobileTerminals( aNetworkId =&gt; DMI.MasterDMI().In_RBCContactInformation.NetworkId )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleRBCRIUSystemVersion"
 Guid="10dc8bf3-fb79-4fc2-987d-1b29ba45fa25"
>
<ReqRef
 Id="02f20f26-3445-49b9-95cf-a6948ab029b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ca11414d-dcc4-4bd5-992b-5a6a7c591964"
>
</ReqRef><Comment>When the RBC/RIU system version is received, it is stored on-board and will be used to indicate that the RBC connection is established.</Comment>
<Parameters>
<Parameter
 Type="Messages.MESSAGE.TRACK_TO_TRAIN.RBC.RIU_SYSTEM_VERSION.Message"
 Name="aMessage"
 Guid="ae749290-5bd3-4a59-8892-1f02e400373a"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Store the received system version"
 Guid="fb46a7fe-c199-4921-811e-cdacaa581017"
>
<Comment>Stores the received system version.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Store the received system version"
 Guid="b5198c94-238e-49b1-ab0f-a07e1f53f92d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e17bef78-a2ff-421f-8ab3-bf8d2d0939ac"
>RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.Value &lt;- VersionManagement.SystemVersionFromMessageVersion ( aMessageVersion =&gt; aMessage.M_VERSION )</Action><Action
 Guid="8212c19a-2428-4a44-aa05-ed206845382b"
>ValidateInformation(RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TerminateOpenSessions"
 Guid="a3c4ec01-2064-42db-9733-47c9ba067bc2"
>
<ReqRef
 Id="058ba686-ff06-4bed-b616-68b4fb4ea7fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dee19d3d-a303-43da-9657-2c31176d9fe8"
>
</ReqRef><ReqRef
 Id="ae649b47-cdfc-4223-b13d-4b1efaef612d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd97a9b4-bc7d-414e-806c-039772acf530"
>
</ReqRef><ReqRef
 Id="83709cd5-3863-48a0-8264-34f65a482b28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb8ebad9-d6c1-4ff5-b076-0fce02f9804a"
>
</ReqRef><ReqRef
 Id="84374b3d-739e-4c5f-909d-4c138dedec38"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f4db309f-d9b3-4b31-86d7-3216265e7a31"
>
</ReqRef><Comment>Tarts the termination of the open sessions and keeps contact information or not depending on the parameter.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="contactInformationIsKept"
 Guid="90f0aec2-781d-4caf-8b17-9b8289d2a45c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="CurrentRBCConnection"
 Guid="9bc0eae8-7ffc-4b56-8fa1-e74478ee604d"
>
<Comment>Terminates the curent connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="CurrentRBCConnection"
 Guid="785baa4f-c283-490a-943c-7692fe5aa0d5"
>
<PreConditions>
<PreCondition
 Guid="5c543f0c-9a08-432a-842a-e3e1ac4f742f"
>Available(CurrentRBCConnection())</PreCondition><PreCondition
 Guid="b9063662-ad00-4212-9e4b-1004b6b361b2"
>CurrentRBCConnection().ConnectionState in RBCStruct.ConnectionStateSM.Connected</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9a58b646-3072-4ae3-a4df-c5846429744d"
>CurrentRBCConnection().TerminateCommunicationSession( contactInformationIsKept)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="SecondaryRBCConnection"
 Guid="6650ff3a-5554-4188-ac6e-d70118ce2bea"
>
<Comment>Terminates the secondary connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="SecondaryRBCConnection"
 Guid="a0c2878e-1128-48ca-9b96-d6a6b2f24da2"
>
<PreConditions>
<PreCondition
 Guid="946b988a-cda4-4922-94af-6a34915dbf70"
>Available(SecondaryRBCConnection())</PreCondition><PreCondition
 Guid="f5965370-6191-47f0-a05c-165b7151c9a3"
>CurrentRBCConnection().ConnectionState in RBCStruct.ConnectionStateSM.Connected.ConnectionEstablished</PreCondition><PreCondition
 Guid="ca9e3c7b-3721-400e-b62c-c2ec0f96c48e"
>CurrentRBCConnection().SafeRadioConnection.ConnectionIsEstablished</PreCondition></PreConditions>
<Actions>
<Action
 Guid="726b2365-2bfa-47c8-b252-c076dd6c1aa4"
>SecondaryRBCConnection().TerminateCommunicationSession( contactInformationIsKept)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Time"
 DefaultValue="45.0"
 VariableMode="Constant"
 X="510"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConnectionStatusTimer"
 Guid="65e21fb1-d0d3-454f-8133-56deba993df5"
>
<ReqRef
 Id="ad234759-9dd4-4ff4-9b9e-764c96f7b0cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dcdc5994-68e4-4ef9-afeb-c4ea66058fc8"
>
</ReqRef><ReqRef
 Id="cd18a937-9dc2-456d-bee7-a61bcd564e32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e7a9c6a-4a8a-47ce-95f5-e7fd726a7c40"
>
</ReqRef><Comment>&quot;Connection status&quot; timer for safe radio connection indication.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="15.0"
 VariableMode="Constant"
 X="730"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TimeBeforeMessageRepetition"
 Guid="7fb9905e-15ef-46c7-bd03-db851be58bc7"
>
<ReqRef
 Id="0f9b05dd-7dd5-408f-94d8-e94d2b283f7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0415d335-0a90-4f02-8ec4-240662656ae8"
>
</ReqRef><Comment>Represents the waiting time before radio message repetition.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue=""
 VariableMode="Internal"
 X="510"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InRadioHole"
 Guid="97985c72-02b5-4a17-8ed4-4970137ace9d"
>
<ReqRef
 Id="24ab9b8d-19b6-48f1-8762-46dbc0b3a225"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0bea44c-7f00-4a05-95bf-38ccbe185cb2"
>
</ReqRef><ReqRef
 Id="60e39a2f-4380-44e7-bf85-7142748b200f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb1699ec-7395-4a62-a4fa-624a40634a3b"
>
</ReqRef><Comment>Indicates that the train is curently in a radio hole. Used to determine when the train leaves a radio hole.</Comment>
</Variable><Variable
 Type="Integer"
 DefaultValue="3"
 VariableMode="Constant"
 X="620"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NumberOfMessageRepetitions"
 Guid="c6fc6f21-c004-4e60-9413-a82917e94238"
>
<ReqRef
 Id="023bb134-975d-4e3e-9294-8f3644763d4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="430f28c3-f752-4247-93ae-fd580cbd55c8"
>
</ReqRef><Comment>Indicates the number of repetitions of radio messages (i.e. excluding the first sending).</Comment>
</Variable><Variable
 Type="Integer"
 DefaultValue="3"
 VariableMode="Internal"
 X="620"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NumberOfTimesToEstablishSafeRadioConnection"
 Guid="5f2a0228-c803-47a9-b5d4-a66255b13d73"
>
<ReqRef
 Id="8930cc43-c129-487c-beb7-9ed8bd9d1851"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d0ce163-1722-4f0e-bd2f-d992faa362ee"
>
</ReqRef><Comment>Number of times to try to establish a safe radio connection.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="60.0"
 VariableMode="Constant"
 X="840"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DelayToDisconnect"
 Guid="54e67e1e-4418-45f2-a157-15b133a322f1"
>
<ReqRef
 Id="3289a3d9-cf40-4752-80d6-cdf4b8e86c34"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec8b8c72-983c-4056-97ad-5046cead56ac"
>
</ReqRef><Comment>Delay from the application of the M_NVCONTACT reaction (applied when the onboard does not receive any new consistent messages from the RBC after a period T_NVCONTACT) to release of the safe radio connection.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 X="10"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Track radio hole"
 Guid="44044d2b-8618-4e18-9371-c2955e0b096e"
>
<ReqRef
 Id="24ab9b8d-19b6-48f1-8762-46dbc0b3a225"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c23a7a12-2335-4221-93bd-9002979d616a"
>
</ReqRef><ReqRef
 Id="60e39a2f-4380-44e7-bf85-7142748b200f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="087d0d1b-9218-47d5-81bf-7bfedb16c5d1"
>
</ReqRef><Comment>Tracks whether the train has entered or left a radio hole. Used to refresh the reference time (for time stamp checks on received radio messages).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Exit radio hole"
 Guid="384eb0b9-619d-427a-afd2-b1cdd4e560b2"
>
<Comment>The train just left a radio hole.</Comment>
<PreConditions>
<PreCondition
 Guid="3bd733c8-e1ef-40ff-99cb-c61837ed78b5"
>NOT THERE_IS X IN Kernel.TrackDescription.TrackConditions.General.ProfileAtDistance(
    Kernel.TrainPosition.FrontEndPosition(
        PointOfInterest=&gt; DistanceIntervalEnum.Nom
    )
) | X.Value == Kernel.TrackDescription.TrackConditions.General.TrackConditionEnum.RadioHole</PreCondition><PreCondition
 Guid="eaaf519d-801e-429f-9218-97c4800dab2c"
>InRadioHole</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a230aa99-1898-41d5-9c7d-7fc6327cfbeb"
>CurrentRBCConnection().OnboardReference_MessageTimer &lt;- Kernel.DateAndTime.CurrentTime</Action><Action
 Guid="6f256420-36c7-4e7c-b245-f115adee0fdf"
>InRadioHole &lt;- False</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Enter radio hole"
 Guid="7f71b554-1c1d-4e57-a840-1738f5d834b5"
>
<Comment>The train just entered a radio hole.</Comment>
<PreConditions>
<PreCondition
 Guid="dcba750f-c397-40bd-bfda-714f4966a0c0"
>Kernel.TrackDescription.TrackConditions.General.IsInsideRadioHole()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4b8777ce-f4ec-4ad1-8156-c7c3e1c64ff2"
>InRadioHole &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
<RuleCheckDisabling
 Guid="3ab2c79c-366f-4f01-8d9c-59ae663492dd"
>
<RuleCheckIdentifier
 Name="Access01"
 Guid="482b6168-cb5b-4f93-b7ff-0ec76273238d"
>
</RuleCheckIdentifier></RuleCheckDisabling></NameSpace>
