<NameSpace
 X="560"
 Y="130"
 Width="100"
 Height="50"
 Name="ERA_BrakingCurvesVerification"
 Guid="336a4b67-324d-4b67-b2ce-31dc4f686df4"
>
<Comment>The functions used to compare the values imported from the ERA braking curves tool with braking curve calculations performed in EFS.

TODO: Move this to Testing.</Comment>
<NameSpaces>
</NameSpaces>
<Functions>
<Function
 Type="Boolean"
 Default=""
 X="441"
 Y="1"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="Compare"
 Guid="e28e6af8-9a4e-4301-a06b-00654d61ce89"
>
<Comment>This function indicate whether the two values are close enough to be considered as equal</Comment>
<Parameters>
<Parameter
 Type="Double"
 Name="Val1"
 Guid="d6419bbd-a046-4395-b7bc-00f5af95af94"
>
</Parameter><Parameter
 Type="Double"
 Name="Val2"
 Guid="f7c1aaab-fce2-4f84-b61e-8f2beb11c3f2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="f19d0f87-1351-47db-a1f1-4c546277f614"
>
<Expression>ERA_BrakingCurvesVerification.AbsoluteValue ( ERA_BrakingCurvesVerification.AbsoluteValue (Val1) - ERA_BrakingCurvesVerification.AbsoluteValue (Val2) ) &lt; 0.25</Expression>
</Case></Cases>
</Function><Function
 Type="Double"
 Default=""
 X="551"
 Y="1"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="AbsoluteValue"
 Guid="5583d127-8106-4b70-818b-44eeadd96040"
>
<Comment>This function provides tha absolute value of the parameter</Comment>
<Parameters>
<Parameter
 Type="Double"
 Name="Value"
 Guid="70b87f78-56af-4eb7-b0b7-6dc1d19d3634"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Negative"
 Guid="91192a34-c7bf-4c66-92ae-e9901cc137ab"
>
<PreConditions>
<PreCondition
 Guid="416f61fb-8367-49b6-a3ab-fd8adf404b5c"
>Value &lt; 0.0</PreCondition></PreConditions>
<Expression>- Value</Expression>
</Case><Case
 Name="Positive"
 Guid="860438cb-c475-4f5f-b32a-34fd2fc79248"
>
<Expression>Value</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="111"
 Y="1"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="ConvertTargetDistance"
 Guid="cdded46f-adbd-4dde-ac56-2eeeec5c17c7"
>
<Comment>This function indicate whether the two target distances are close enough to be considered as equal</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="d"
 Guid="00fe5a17-f511-4e1b-9eb5-c2ecd4750f54"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="22b25330-520a-4851-8375-7040e4d36edd"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="0b0e4bbc-39c9-4923-a447-63fe6b79cda8"
>
<Expression>aTarget.Location - d</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="221"
 Y="1"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="CompareAcceleration"
 Guid="b9d2686e-06d9-4932-8ec2-3ccca803d773"
>
<Comment>This function indicate whether the two accelerations are close enough to be considered as equal</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Acceleration"
 Name="Val1"
 Guid="06c31594-3cd7-4731-a4f4-06887819da9a"
>
</Parameter><Parameter
 Type="BaseTypes.Acceleration"
 Name="Val2"
 Guid="9d6431d2-ccad-441e-b067-1ffb6dce14f9"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="688d8a7e-6fe5-4f6c-b56c-28dce7f0c743"
>
<Expression>ERA_BrakingCurvesVerification.AbsoluteValue ( ERA_BrakingCurvesVerification.AbsoluteValue (Val1) - ERA_BrakingCurvesVerification.AbsoluteValue (Val2) ) &lt; 0.001</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="331"
 Y="1"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EBDDistanceFromTarget"
 Guid="81eff649-177c-42d0-bc53-100664a8238e"
>
<Comment>Returns the distance between the value of the EBD of the target at teh given speed and the point where the EBD reaches zero speed</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="69c30e72-d230-4d63-9c44-c4ac075ef1c9"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="b9d05649-817d-44f6-8922-36f9b41a97a2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="cbff820d-516b-4ce6-b28a-bfa4598aab5e"
>
<Expression>aTarget.Location
 - 
DistanceForSpeed(
    Function =&gt; FUNCTION d : Default.BaseTypes.Distance =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_Target ( Distance =&gt; d, aTarget =&gt; aTarget),
    Speed =&gt; aSpeed
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="1"
 Y="61"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EBIDistanceFromTarget"
 Guid="f30ba803-7a5e-4931-bbd9-2d8163a9b433"
>
<Comment>Returns the distance between the value of the EBD of the target at teh given speed and the point where the EBD reaches zero speed</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="d637fbec-8ecd-4fe7-8cce-a68ace0d2205"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="849a11b2-4fb1-4940-bd27-8652c410b43a"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="585be932-e1ba-4e45-805e-e14b77126ce8"
>
<Expression>aTarget.Location
 - 
(Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.d_EBI(
    aSpeed =&gt; aSpeed,
    aTarget =&gt; aTarget,
    NoA_est =&gt; False,
    IsIndication =&gt; False,
    IsTargetDistance =&gt; False
)
 - 
Odometry.Accuracy.D_ura)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="111"
 Y="61"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="SBIDistanceFromTarget"
 Guid="8cf82fc5-adcf-4fca-ae02-19c10500b06f"
>
<Comment>Returns the distance between the value of the EBD of the target at teh given speed and the point where the EBD reaches zero speed</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="6bd1b073-ced7-4719-8c02-c62ea688655b"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="5575c672-ac92-4cec-bb96-77645839b044"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="67ac0f78-e2c4-45b7-b48c-917dcccb2f2c"
>
<Expression>aTarget.Location
 - 
(Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.d_SBI2(
    aSpeed =&gt; aSpeed,
    aTarget =&gt; aTarget,
    NoA_est =&gt; False,
    IsIndication =&gt; False,
    IsTargetDistance =&gt; False
)
 - 
Odometry.Accuracy.D_ura)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="221"
 Y="61"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="WarningDistanceFromTarget"
 Guid="baa13872-41a0-4e37-8a0e-a4b50920be64"
>
<Comment>Returns the distance between the value of the EBD of the target at teh given speed and the point where the EBD reaches zero speed</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="edac65fc-6ad9-4593-a3ca-e80c78d9934b"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="901dd4a4-3844-4865-afa5-9a41a3270816"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="0c0993a4-c3c4-454f-8990-7b6bf582165d"
>
<Expression>aTarget.Location
 - 
(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W(
    Vest =&gt; aSpeed,
    aTarget =&gt; aTarget
)
 - 
TrainPositionCompensation( Kernel.MA.EOA.IsEOA(aTarget) ))</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="331"
 Y="61"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="PermittedDistanceFromTarget"
 Guid="4910f242-5eb4-4ad1-8793-06ba3bef4e4d"
>
<Comment>Returns the distance between the value of the EBD of the target at teh given speed and the point where the EBD reaches zero speed</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="0b3b6661-a74a-4870-b380-4d93bd13bfae"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="b13fbd0e-bccf-4d6a-88c1-c7b782992359"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="In TSM"
 Guid="d1439d1f-4daf-41c6-afdb-5fce4ed82b81"
>
<PreConditions>
<PreCondition
 Guid="fff7c75b-7270-4680-ad15-4e678ca6c220"
>aSpeed &lt; Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="57b2b0f2-b029-4556-810e-052994de28ac"
>aSpeed &gt; aTarget.Speed</PreCondition></PreConditions>
<Expression>aTarget.Location - (Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
(
  Vest =&gt; aSpeed,
  aTarget =&gt; aTarget,
  NoA_est =&gt; False
)
 - 
TrainPositionCompensation( Kernel.MA.EOA.IsEOA(aTarget) ))</Expression>
</Case><Case
 Name="In CSM, before the target"
 Guid="67d7b6ed-d8c5-45be-a65e-ff11032edcdd"
>
<PreConditions>
<PreCondition
 Guid="b67f82fb-2a12-461a-9f29-7e0b52b61945"
>aSpeed &gt; aTarget.Speed</PreCondition></PreConditions>
<Expression>aTarget.Location - (Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
(
  Vest =&gt; Kernel.MRSP.V_MRSP(),
  aTarget =&gt; aTarget,
  NoA_est =&gt; False
)
 - 
TrainPositionCompensation( Kernel.MA.EOA.IsEOA(aTarget) ))</Expression>
</Case><Case
 Name="In CSM, after the target"
 Guid="86a5a6a8-9b1b-4291-b406-0fb3393d627a"
>
<Comment>The ERA braking curves do not go beyond the target location, so if the speed is equal to or less than the target speed, the distance is reduced to the target location.</Comment>
<Expression>aTarget.Location
 - 
aTarget.Location</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="441"
 Y="61"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="IndicationDistanceFromTarget"
 Guid="c0f8ca24-8f5d-4114-822a-6c6574303418"
>
<Comment>Returns the distance between the value of the EBD of the target at teh given speed and the point where the EBD reaches zero speed</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="72c396ed-60eb-4237-975d-27d065a9b12a"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="79267637-173d-45a7-85c0-8238e5246975"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="In TSM"
 Guid="7add738c-2670-44b8-9d53-b418cf7b7d10"
>
<PreConditions>
<PreCondition
 Guid="9264fc0e-60e8-498d-aee4-0ec5a0e02d16"
>aSpeed &lt; Kernel.MRSP.V_MRSP()</PreCondition></PreConditions>
<Expression>aTarget.Location - (Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; aSpeed,
    aTarget =&gt; aTarget
)
 - 
TrainPositionCompensation( Kernel.MA.EOA.IsEOA(aTarget) ))</Expression>
</Case><Case
 Name="In CSM"
 Guid="ed1bcb2f-4429-465d-8bce-f8c28737612e"
>
<Expression>aTarget.Location - (Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; aTarget
)
 - 
TrainPositionCompensation( Kernel.MA.EOA.IsEOA(aTarget) ))</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="551"
 Y="61"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="TrainPositionCompensation"
 Guid="780489a6-4177-44e8-9c22-4702e193041a"
>
<Comment>Adds the compensation to the train position depending on the type of the target:
   0 if the target is the EOA
   Odometry.Accuracy.D_ura for all other targets.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="isEOA"
 Guid="da068e8e-b651-4515-bee5-78819da6040f"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target is EOA"
 Guid="4cb173ee-e690-4391-ad1b-bb94c9514333"
>
<PreConditions>
<PreCondition
 Guid="ef4f3740-b22e-4c67-8d4d-cf06b9e45e72"
>isEOA</PreCondition></PreConditions>
<Expression>0.0</Expression>
</Case><Case
 Name="Otherwise"
 Guid="82a120ae-1cab-459a-95fb-23c777dbc6ba"
>
<Expression>Odometry.Accuracy.D_ura</Expression>
</Case></Cases>
</Function></Functions>
</NameSpace>
