<NameSpace
 X="10"
 Y="70"
 Width="100"
 Height="50"
 Name="Orientation"
 Guid="33a77712-b6ff-466f-8280-837b4d074694"
>
<Comment>Functions and procedures related to the change of train orientation.</Comment>
<NameSpaces>
</NameSpaces>
<Functions>
<Function
 Type="OrientationEnum"
 Default=""
 X="130"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="OrientationOfActiveCab"
 Guid="0fba04e5-606a-4a67-8aa5-9b92fa6f45a4"
>
<ReqRef
 Id="e4ba9e39-0596-45cb-a3b4-e7e37c3b50b2"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="91c4831c-4ad0-4286-8a96-227291995f5c"
>
</ReqRef><ReqRef
 Id="7498df92-a3c7-4b25-922e-9add31ac8f26"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="46d48cac-ad5c-4bbd-8f3f-cc86ee60597d"
>
</ReqRef><ReqRef
 Id="fd2b65f4-fdab-4cbe-8299-77e2f93055e0"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="2a68e3d2-54f1-4049-bedb-b63439edfe3d"
>
</ReqRef><ReqRef
 Id="df7b5f6a-299e-410d-ac09-c0baf1903753"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62d1d5ec-95f5-456a-8be8-8c8b8747dfb4"
>
</ReqRef><Comment>Provides the train orientation based on the opened desk.</Comment>
<Cases>
<Case
 Name="Nominal"
 Guid="0726ef87-b126-4ae4-8e9d-527f8187ff57"
>
<PreConditions>
<PreCondition
 Guid="4c47fff6-4e0e-42df-ad38-44ebca6914b5"
>DMI.DeskIsOpen( DMI.DMI1 )</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Reverse"
 Guid="4f00f0ec-9463-4696-9a9a-c709a4f27ee2"
>
<PreConditions>
<PreCondition
 Guid="d6cac5d8-bca4-4d15-9dbf-4a4e05612d0d"
>DMI.DeskIsOpen( DMI.DMI2 )</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="Otherwise"
 Guid="ba5e66ae-fb2f-40c0-846a-711a5481d8c0"
>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="20"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="OrientationChanged"
 Guid="e774fb08-7e6a-4d96-9e03-b09f7270ac07"
>
<ReqRef
 Id="2e3eda46-b060-4164-9dc4-05e853b23a11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92aa109b-e36b-44dd-a695-8caf70f842c5"
>
</ReqRef><ReqRef
 Id="2716843f-aeab-4fa3-8b17-006bff38ba9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67244d94-2c96-44a8-a872-eeb45383e5b4"
>
</ReqRef><Comment>Returns true when the master cab is closed and the slave open, causing the slave to become the master and the train&apos;s orientation to change.</Comment>
<Cases>
<Case
 Name="Desk of DMI 2 opened"
 Guid="113e542a-d95b-4b06-acdf-33abb503a954"
>
<PreConditions>
<PreCondition
 Guid="6a925ab3-d28b-434e-badb-0cef959fd10a"
>DMI.DeskIsOpen( DMI.DMI2 )</PreCondition><PreCondition
 Guid="d88ca082-4fcc-47cd-802c-416b1fc8a91d"
>NOT DMI.DMI2.IsMaster</PreCondition></PreConditions>
<Expression>NOT DMI.DeskIsOpen( DMI.DMI1 )</Expression>
</Case><Case
 Name="Desk of DMI 1 opened"
 Guid="cc400689-5e08-4b41-b163-42c7acab06f2"
>
<PreConditions>
<PreCondition
 Guid="ebac7dc7-5e2b-42e8-9439-65b159b41e7a"
>DMI.DeskIsOpen( DMI.DMI1 )</PreCondition><PreCondition
 Guid="cf573e64-bed4-4c3a-b34a-9b4d1beb593e"
>NOT DMI.DMI1.IsMaster</PreCondition></PreConditions>
<Expression>NOT DMI.DeskIsOpen( DMI.DMI2 )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="76501c1b-43f1-488d-be1f-ae1aaf53ca2b"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="20"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="UpdatedTrainFrontEndPosition"
 Guid="4c8db76e-266b-4f50-b599-55419511a799"
>
<ReqRef
 Id="18585bb5-dc2f-4e24-bb2e-10c77305d565"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0cb163e1-9d48-4f87-9cbe-2bb0c0434d46"
>
</ReqRef><ReqRef
 Id="4f6dd5a0-a24c-40f0-8757-8c0c86cc2c43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="842b059a-b24a-4e61-af24-1f0e7ff20670"
>
</ReqRef><Comment>Returns the updated train front end relative to the LRBG once a change of orientation has occurred.
This is determined by checking the relative positions of the front and rear end positions with respect to the LRBG.</Comment>
<Parameters>
<Parameter
 Type="OrientationEnum"
 Name="aPreviousTrainFront"
 Guid="6827eedc-0756-4105-ab2d-3ec4f25b46eb"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Unchanged"
 Guid="dbac1fe6-b9c9-4aa1-be9e-31cdadcd3c18"
>
<PreConditions>
<PreCondition
 Guid="5574dc2c-d666-40af-bb42-8d01119667f2"
>(
  FrontEndPosition( Default.DistanceIntervalEnum.Nom ) &gt; BTM.LRBG.LRBG().Position.Position
    AND  
  RearEndPosition( Default.DistanceIntervalEnum.Nom ) &gt; BTM.LRBG.LRBG().Position.Position
)

  OR  

(
  FrontEndPosition( Default.DistanceIntervalEnum.Nom ) &lt; BTM.LRBG.LRBG().Position.Position
    AND  
  RearEndPosition( Default.DistanceIntervalEnum.Nom ) &lt; BTM.LRBG.LRBG().Position.Position
)</PreCondition></PreConditions>
<Expression>aPreviousTrainFront</Expression>
</Case><Case
 Name="Changed"
 Guid="ed8eaae8-1920-4130-88e5-e07502de8357"
>
<Expression>ReverseOfOrientation( aPreviousTrainFront )</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="130"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrainOrientation"
 Guid="e6a45959-fed2-48ed-990b-9291b5ea891c"
>
<ReqRef
 Id="e4ba9e39-0596-45cb-a3b4-e7e37c3b50b2"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="7f4f6fa1-283b-44f7-aa3a-3f961333f0a8"
>
</ReqRef><ReqRef
 Id="7498df92-a3c7-4b25-922e-9add31ac8f26"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="0cd200cc-0145-4ced-a1bb-1cfbe4ac591e"
>
</ReqRef><ReqRef
 Id="fd2b65f4-fdab-4cbe-8299-77e2f93055e0"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="b7c4941a-4f20-46bb-8cf1-226d82fc4f95"
>
</ReqRef><Cases>
<Case
 Name="Nominal"
 Guid="6e54bfcc-59da-4ae8-a342-f028a8f4624a"
>
<PreConditions>
<PreCondition
 Guid="eff0036a-b455-4e11-866c-46a88fa7693f"
>DMI.DMI1.IsMaster</PreCondition><PreCondition
 Guid="ef4df789-217e-4fea-8c5c-f9f961d4200b"
>NOT DMI.DMI2.IsMaster</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Reverse"
 Guid="67092474-d026-4c68-865c-aab867e2bbd8"
>
<PreConditions>
<PreCondition
 Guid="a0a8c66a-6df7-45a6-9d67-53378cdce8b6"
>NOT DMI.DMI1.IsMaster</PreCondition><PreCondition
 Guid="3d4797d4-a87e-4fd3-bac5-199350050944"
>DMI.DMI2.IsMaster</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="Otherwise"
 Guid="5854ccf0-30e4-41da-bdb0-8eb3587e4bd9"
>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="130"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleStoredInformation"
 Guid="062ef265-5877-4923-a7d7-eb02e13d5a57"
>
<ReqRef
 Id="de696b0d-7dc0-4f7d-a1a3-a2085fff0c6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="640c2afb-225d-4e0f-b639-ce1095ecd68d"
>
</ReqRef><ReqRef
 Id="937ae4a5-e171-4a75-90fa-d90a3e16810f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="998f4043-1308-4645-9b0f-f8201ee3bc25"
>
</ReqRef><ReqRef
 Id="d4bc7469-49ff-4a7d-9404-c01cf99d97d5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac49baa7-249b-4c35-bd23-cf3098051b25"
>
</ReqRef><ReqRef
 Id="c8d2dd00-d534-48c6-b75f-1319f928f070"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a9f2b67a-fb19-45cc-bb47-76ea8400bcb1"
>
</ReqRef><ReqRef
 Id="2e3eda46-b060-4164-9dc4-05e853b23a11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cf4925f5-e4b7-4f3d-9cfe-a8aacd1bd577"
>
</ReqRef><ReqRef
 Id="2716843f-aeab-4fa3-8b17-006bff38ba9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9490453f-021c-44c1-849e-be1450c98ef4"
>
</ReqRef><ReqRef
 Id="35aec466-872c-424f-9c1e-29ed3c6a09f3"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="d82f0650-2313-43c5-8879-c04629fe0a58"
>
</ReqRef><Comment>A change of orientation occurs when the driver closes one cab and open another.
Closing the cab causes the on-board to enter SB mode, which deletes or resets almost all stored information.
Of the unchanged data, only
        Not yet applicable national values
        Level transition order
        Geographical position
        Train position
are position-based, and need to be handled.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update train position"
 Guid="a423cf65-1f1c-41fe-be12-09aae3c5708b"
>
<Comment>The train position is updated by setting the orientation depending on the opened DMI.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update train position"
 Guid="ec75b8a0-8534-452a-8c54-15feda288ca9"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6660475b-6427-4ccc-8fdb-53fb8b17c7f0"
>Position.DirectionalPositionInformation &lt;- TrainPosition.DirectionalTrainPositionInformationStruct{
TrainFrontEndPosition =&gt; Orientation.UpdatedTrainFrontEndPosition(Position.DirectionalPositionInformation.TrainFrontEndPosition),
TrainOrientation =&gt; ReverseOfOrientation(Position.DirectionalPositionInformation.TrainOrientation),
TrainRunningDirection =&gt; ReverseOfOrientation(Position.DirectionalPositionInformation.TrainRunningDirection)
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update level transition orders"
 Guid="54945c74-c809-475e-a29a-d29c7f8b91e5"
>
<Comment>Level transition orders are removed, since the running direction of the train has changed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update level transition orders"
 Guid="875359f4-776f-4ee5-90fa-9229460b382b"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="99a430e8-953b-4960-a001-d89729e30c51"
>LevelTransition.LevelTransitionOrder &lt;- EMPTY</Action><Action
 Guid="1ff3daa7-d07e-4b4b-8d38-3695fff263be"
>LevelTransition.LevelTransitionToProcess &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update geographical position"
 Guid="a6175b53-a11d-4b37-b222-a6fb3345e9d1"
>
<Comment>Nothing to change here, the distance between the train and the geographical location reference does not change when orientation changes.</Comment>
<SubRules></SubRules>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Hidden="TRUE"
 Implemented="TRUE"
 Name="Update not yet applicable national values"
 Guid="41a37a35-63d5-4692-bb28-ee28ce6a6f78"
>
<Comment>Not yet applicable national values are removed, since the running direction of the train has changed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update not yet applicable national values"
 Guid="ed2640e4-ad66-4b70-9004-2e9758c0e0e1"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f4686b39-1e93-4389-9f92-ab6cb140ef00"
>Kernel.NationalValues.NotApplicableNationalValues &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Update train integrity"
 Guid="e7cc2b21-540a-4a71-9eb0-6ba62fb6a4a4"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Update train integrity"
 Guid="35e6ef61-a700-4e7f-b1b3-3bdb64aae00e"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e5e4e373-a0e1-4a15-95d6-b3e939648eb7"
>InvalidateInformation( TrainIntegrity.TrainIntegrity )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="20"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleOrientationChange"
 Guid="8cca87fa-0da3-449b-a768-4b6e44f8ace8"
>
<ReqRef
 Id="2e3eda46-b060-4164-9dc4-05e853b23a11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3dcbda0d-6aec-4b24-8ed7-7e55ef6afe72"
>
</ReqRef><Comment>Handle the stored information and the DMI statuses when the orientation changes.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle orientation change"
 Guid="a8bd62a2-f168-4ffd-b42d-82f31cdfbeaa"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Orientation changed"
 Guid="b2e24701-e296-44d8-9357-9c375b162ae2"
>
<PreConditions>
<PreCondition
 Guid="8d965b4d-b3c9-4931-8d7c-1d523787ef61"
>Orientation.OrientationChanged()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6c9a5bdc-f161-4685-a449-0b52e5a617aa"
>Orientation.HandleStoredInformation()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Hidden="TRUE"
 Implemented="TRUE"
 Name="Update master DMI"
 Guid="82ad9921-d736-4b1e-b2cb-9c1e225f97ee"
>
<Comment>Update the DMI statuses for indicating hte master DMI.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="DMI 1 is master"
 Guid="b3632b98-8719-4568-956a-cb43cda545e4"
>
<Comment>If the DMI1 was opened, then it is master and DMI2 is slave.</Comment>
<PreConditions>
<PreCondition
 Guid="85454027-ef28-4e3a-b4d2-d1cdd70ebacd"
>DMI.DeskIsOpen( DMI.DMI1 )</PreCondition><PreCondition
 Guid="b6a1c8d0-5c5a-4f83-8d86-1b47256db7ea"
>NOT DMI.DeskIsOpen( DMI.DMI2 )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cbd7fe42-b464-4d92-aff5-b66292d4b07e"
>DMI.DMI1.IsMaster &lt;- Boolean.True</Action><Action
 Guid="bfe10844-b364-4d89-9722-e5fed689af3a"
>DMI.DMI2.IsMaster &lt;- Boolean.False</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="DMI 2 is master"
 Guid="02d6f43e-6416-4a46-8c21-a70d141330c0"
>
<Comment>If the DMI2 was opened, then it is master and DMI1 is slave.</Comment>
<PreConditions>
<PreCondition
 Guid="3fbf233a-9688-453d-a87b-f8fc452417a0"
>NOT DMI.DeskIsOpen( DMI.DMI1 )</PreCondition><PreCondition
 Guid="6736c6c4-9c88-4e57-a12d-fcbe6c9eb720"
>DMI.DeskIsOpen( DMI.DMI2 )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6aac5a48-5b23-4789-a7a2-31aaafa039b3"
>DMI.DMI1.IsMaster &lt;- Boolean.False</Action><Action
 Guid="fb5332c4-63bb-43b1-90c9-9d1d92107d27"
>DMI.DMI2.IsMaster &lt;- Boolean.True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
</NameSpace>
