<NameSpace
 X="260"
 Y="60"
 Width="100"
 Height="50"
 Name="Display"
 Guid="80739a0a-9d9a-4836-960d-a70674342006"
>
<NameSpaces>
</NameSpaces>
<Functions>
<Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="120"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayReleaseSpeed"
 Guid="0e03db57-f072-4c06-9f8d-37b08022f0ce"
>
<ReqRef
 Id="da81dc9e-7c01-462c-ae9b-108704d780bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26165586-b87b-4fc6-aef9-ec247e260bce"
>
</ReqRef><ReqRef
 Id="ee7b5ecc-20f6-480c-aa0a-7836d5308d32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c84326fe-ff7d-48f4-a605-f443b22b4615"
>
</ReqRef><Comment>Determines whether the DMI should display a release speed.</Comment>
<Cases>
<Case
 Name="Monitoring target speed"
 Guid="c220ae83-9fd0-4062-b2dd-0b4508cc0570"
>
<PreConditions>
<PreCondition
 Guid="eae54f73-e54c-496a-b739-536763fd2530"
>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() in [Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM]</PreCondition></PreConditions>
<Expression>MA.EOA.IsEOA(MRDT())
  OR  
MA.SvL.IsSvL(MRDT())</Expression>
</Case><Case
 Name="Monitoring release speed"
 Guid="08d09e11-9195-4651-b68a-5e2963886bc4"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.RSM</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="230"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="PermittedSpeed"
 Guid="98c15b8c-4a8b-4fc0-8d3c-6e940e541fe2"
>
<ReqRef
 Id="09e9b21f-a204-44c7-9829-f4221f5ff7a6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8cf0ba7-f32e-4c2a-b835-6ba6cb0f32e1"
>
</ReqRef><ReqRef
 Id="74e64307-2966-461e-a976-9a0194ca8514"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f77e2edc-d3c3-4e18-9ba7-1dd5896b3583"
>
</ReqRef><ReqRef
 Id="66b79932-5e84-4126-abe6-3094347749c2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dce28774-413f-472c-ac6f-6a203e4c010c"
>
</ReqRef><ReqRef
 Id="7da2c959-4215-45b4-b239-3b315d76277c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c841058e-4afa-43ae-be78-9321f14c4139"
>
</ReqRef><Comment>Provides the current permitted speed of the train, accounting for the speed and distance monitoring.</Comment>
<Cases>
<Case
 Name="CeilingSpeedMonitoring_P"
 Guid="9bcbf022-4599-40dc-ad8a-f5e831f6af26"
>
<Comment>The permitted speed P (in ceiling speed monnitoring) is equal to V_MRSP or V_LOA.</Comment>
<PreConditions>
<PreCondition
 Guid="5394d167-a030-4b1d-a096-b176e1075237"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in MonitoringTypeSM.Ceiling</PreCondition></PreConditions>
<Expression>Kernel.MRSP.V_MRSP()</Expression>
</Case><Case
 Name="Other monitoring types"
 Guid="c121bdd5-4b33-48ef-b069-9a042e43983d"
>
<PreConditions>
<PreCondition
 Guid="5ba6a2ec-fce4-46ab-8e17-256f0a63ae84"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in [MonitoringTypeSM.Target, MonitoringTypeSM.Release]</PreCondition></PreConditions>
<Expression>V_P_DMI()</Expression>
</Case><Case
 Name="No monitoring"
 Guid="04a5e145-1016-4f38-8932-0f95a42ea43c"
>
<Expression>BaseTypes.Speed.NA</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="340"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SBISpeed"
 Guid="beeb4057-0fc3-4386-a02a-0a1658883998"
>
<ReqRef
 Id="d5f24a7e-2926-4921-9498-c6e5c16964e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f256a09c-7d89-4cd5-b2f6-9e1c790067ff"
>
</ReqRef><ReqRef
 Id="eb90e9d9-f130-4725-b447-bd6e474f0c8b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="db43c11d-14da-4358-a984-768d070e34b4"
>
</ReqRef><Comment>Returns the value of the closest SBI curve at the given distance</Comment>
<Cases>
<Case
 Name="In ceiling speed supervision"
 Guid="3206369b-6c11-4a65-8d73-d2fbb08375b3"
>
<PreConditions>
<PreCondition
 Guid="9317ac62-ab65-4993-8355-a3fa4ac12f32"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in MonitoringTypeSM.Ceiling</PreCondition></PreConditions>
<Expression>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi(Kernel.MRSP.V_MRSP())</Expression>
</Case><Case
 Name="In target speed supervision"
 Guid="eb3345ab-0d5e-4790-8fb3-c13af69a753d"
>
<PreConditions>
<PreCondition
 Guid="1eda699e-a4d2-4106-8a9a-daf5761de88c"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in MonitoringTypeSM.Target</PreCondition></PreConditions>
<Expression>V_SBI_DMI()</Expression>
</Case><Case
 Name="Otherwise"
 Guid="07d8597d-5080-4592-9364-68effd5fe51e"
>
<Expression>BaseTypes.Speed.NA</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayIndicationLocationAtMRSPSpeed"
 Guid="1d5d650d-4dbe-4eb6-98b0-8f065c0641ce"
>
<ReqRef
 Id="5e511b79-1787-413b-ae27-0d7d6246b010"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="da0dbae1-4e49-47e3-ace0-053eb338998f"
>
</ReqRef><ReqRef
 Id="b10067eb-6ad7-4c8c-9aab-ef1740ef0e13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="271b7a86-f4c8-48f2-94a4-3bb89f087ed6"
>
</ReqRef><Comment>Indicates whether the DMI should display the indication location at MRSP speed.</Comment>
<Cases>
<Case
 Name="In CSM or PIM"
 Guid="9ee1faaa-c254-4694-813e-d2f3b395ff81"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() in [Kernel.SpeedAndDistanceMonitoring.MonitoringType.CSM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM]</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayTargetSpeed"
 Guid="9f89dd50-834d-4421-b50c-c7e12fe87e96"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44cb4cfa-f720-422e-afb5-9a0f9fa85c2d"
>
</ReqRef><Comment>Indicates whether the DMI should display the target speed.</Comment>
<Cases>
<Case
 Name="In TSM or PIM"
 Guid="1e9502cd-e9d2-4538-94b0-a6b1ec5dbc9c"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() in [Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM]</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="120"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayTargetDistance"
 Guid="275df331-07bf-45cd-8400-eee36e59fe70"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4db5a85b-0481-4cce-9a5f-319a4f5c45a2"
>
</ReqRef><ReqRef
 Id="220617b2-d0d2-4c8e-a475-e9d9a8761441"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a887fb02-1b48-4cd5-8834-4417c0d7aae7"
>
</ReqRef><Comment>Indicates whether the DMI should display the distance to the MRDT.</Comment>
<Cases>
<Case
 Name="In PIM, TSM or RSM"
 Guid="2d23ed32-c791-4f2c-a838-05eef58b8112"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() in [Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.RSM]</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="450"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IndicationLocation"
 Guid="9c99dc6f-90d1-40a8-8f36-618768e23a53"
>
<ReqRef
 Id="615ccbef-ab0a-4f6f-9624-9ace6361ea83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c1d660be-4df4-4aa1-af88-684d71829ff5"
>
</ReqRef><ReqRef
 Id="06815a39-d3d2-4de8-9e48-9737e56724ca"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="6a421bb3-7a8e-4ac7-a496-87dd6377ae85"
>
</ReqRef><Comment>Provides the indication location at MRSP speed for the DMI</Comment>
<Cases>
<Case
 Name="No indication location"
 Guid="c80160ab-e13f-4fb0-b1a3-f9c908f94cba"
>
<PreConditions>
<PreCondition
 Guid="72ab8956-2490-4512-b3ea-38c62860ff3b"
>NOT
(
Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
Kernel.ActiveFunctions.SuperviseTrainSpeed_All_Information()
)</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="In RSM or in TSM"
 Guid="eb912e76-b2e4-4dc5-9bce-22fb930ffb1f"
>
<PreConditions>
<PreCondition
 Guid="e6e2dfb6-e10b-4b64-8387-340273acfb3a"
><Comment>In RSM and in TSM (but not PIM) we do not need to calculate the indication location since it is already in rear of the train.</Comment>
Monitoring in MonitoringTypeSM.Release
  OR
(
Monitoring in MonitoringTypeSM.Target
  AND  
NOT IsInPIM()
)</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="d_I behind the train"
 Guid="913a30c9-7476-4590-a80b-3970deaa3894"
>
<PreConditions>
<PreCondition
 Guid="fa0c9d7c-78ac-4201-9248-1cf43a6f34ae"
>Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed(
    aTarget =&gt; MRDT(),
    aSpeed =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(MRDT()).Speed)
 == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Otherwise"
 Guid="8bdffb03-588c-4283-94e4-00ae6887a869"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed(
    aTarget =&gt; MRDT(),
    aSpeed =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(MRDT()).Speed) - Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)</Expression>
</Case></Cases>
</Function><Function
 Type="TargetStruct"
 Default=""
 X="340"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FirstTargetAtZeroSpeed"
 Guid="00e54b91-7312-4f95-8481-7e4186d7193c"
>
<ReqRef
 Id="615ccbef-ab0a-4f6f-9624-9ace6361ea83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2afec32f-1777-4ba0-adf3-e9b09f86a23e"
>
</ReqRef><ReqRef
 Id="2cd466ba-aedb-4f3e-8661-ae10ee1737c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="82f5dc19-3cc2-4de1-855f-e06348e8b20b"
>
</ReqRef><Comment>Checks the list of stored targets for the closest target with a target speed of zero.
this is used ot limit the planning information displayed to the driver on the DMI.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="9bbb9be3-b612-4e3a-aeb1-5b4e2db35f77"
>
<Expression>REDUCE Kernel.SpeedAndDistanceMonitoring.TargetsList() | X.Speed == 0.0 USING X 
IN ClosestTarget(
    Target1 =&gt; X,
    Target2 =&gt; RESULT
)
INITIAL_VALUE TargetStruct {
    Location =&gt; BaseTypes.Distance.Infinity, 
    Length =&gt; BaseTypes.Length.Infinity,
    Speed =&gt; 0.0
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="230"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplaySBISpeed"
 Guid="97bb1728-2cff-42ff-b083-57242a76b997"
>
<ReqRef
 Id="eb90e9d9-f130-4725-b447-bd6e474f0c8b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b26dfe18-b610-472b-8a78-fd4b9000ebe8"
>
</ReqRef><ReqRef
 Id="d5f24a7e-2926-4921-9498-c6e5c16964e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c8a1a5f-b339-4fa5-bfe8-ecd56aee5347"
>
</ReqRef><Comment>Indicates whether the DMI should display the SBI speed
.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="8bc2f483-fb14-4f83-95e8-bfe092b87bc5"
>
<Expression>Monitoring in [MonitoringTypeSM.Ceiling, MonitoringTypeSM.Target]
  AND  
GetSupervisionStatus() in [SupervisionStatusEnum.Overspeed, SupervisionStatusEnum.Warning, SupervisionStatusEnum.Intervention]</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayPermittedSpeed"
 Guid="b17119fd-7b3d-4e3e-877f-2aa079d010e3"
>
<ReqRef
 Id="74e64307-2966-461e-a976-9a0194ca8514"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a088ca9-8522-4d16-8f30-44d2dfa604e0"
>
</ReqRef><ReqRef
 Id="66b79932-5e84-4126-abe6-3094347749c2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c78b8f8e-9b11-4aa1-a4c6-e8236d0674dd"
>
</ReqRef><ReqRef
 Id="09e9b21f-a204-44c7-9829-f4221f5ff7a6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddd22956-4dc8-457b-856c-ad25f6fb403e"
>
</ReqRef><Comment>Indicates whether the DMI should display the target speed.</Comment>
<Cases>
<Case
 Name="Speed and distance monitoring active"
 Guid="e92d79c5-ad29-46d6-a718-dd96ab16deb1"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() in [Kernel.SpeedAndDistanceMonitoring.MonitoringType.CSM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM, Kernel.SpeedAndDistanceMonitoring.MonitoringType.RSM]</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="220"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TargetDistance"
 Guid="e8c7c99b-8bfa-48ab-be05-e479c99d4026"
>
<ReqRef
 Id="a80d2a3c-74bd-4a69-b199-4dead00ff0d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ab563e9-065d-4edd-9bf5-5619441c34a8"
>
</ReqRef><ReqRef
 Id="77b648ad-7252-476f-be13-f85e426e8f12"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8df358b0-8c8c-4ec8-befd-2f3d05e9e64e"
>
</ReqRef><ReqRef
 Id="c5c3fd28-41ac-4ad2-a5ea-ba3e63205382"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1650ea1-6c4f-4465-b880-51632e1acd06"
>
</ReqRef><Comment>Provides the distance to the MRDT. the calculation of this distance depends on whether the MRDT is EOA/SvL or another type of target.</Comment>
<Cases>
<Case
 Name="Supervising max dist in SR"
 Guid="5ea21d75-ea2b-4b65-b935-97e8b8332413"
>
<PreConditions>
<PreCondition
 Guid="cbebfd0e-2d3b-4f65-8478-e3cd710700ac"
>Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()</PreCondition><PreCondition
 Guid="6580cd96-d7fe-44ae-85db-07515746be94"
>Modes.StaffResponsible.IsMaxDistInSR( MRDT() )
  AND  
MRDT().Location != BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>BaseTypes.MaxDistance(
    X1 =&gt; Kernel.NationalValues.CurrentNV().MaxPermDistToRunInStaffResponsibleMode - Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Nom),
    X2 =&gt; 0.0
)</Expression>
</Case><Case
 Name="Max dist in SR at infinity"
 Guid="cd32ed2e-6793-4d14-9e88-88377bb04209"
>
<PreConditions>
<PreCondition
 Guid="d12984cd-3d7c-4fb8-b574-9e0b893b05a2"
>Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()</PreCondition><PreCondition
 Guid="811326d0-1c10-4225-8924-80189db65a4a"
>Modes.StaffResponsible.IsMaxDistInSR( MRDT() )
  AND  
MRDT().Location == BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="MRDT is EOA or SvL"
 Guid="82194262-9ba2-4fde-8a4d-317280711763"
>
<PreConditions>
<PreCondition
 Guid="93e6226e-a005-4917-8b21-45a1a7127f27"
>MA.EOA.IsEOA(MRDT())
  OR  
MA.SvL.IsSvL(MRDT())</PreCondition><PreCondition
 Guid="9e8b494f-0f00-484d-b42e-0b49a82dd742"
>Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
Kernel.ActiveFunctions.SuperviseTrainSpeed_All_Information()</PreCondition></PreConditions>
<Expression>BaseTypes.MaxDistance(
    X1=&gt;BaseTypes.MinDistance(
        X1 =&gt; MA.EOA.EOA().Location - Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom),
        X2 =&gt; SvLDistance()
    ),
    X2=&gt;0.0
)</Expression>
</Case><Case
 Name="Train speed supervision based on MRSP"
 Guid="0ca3e6c9-dd75-4e99-834a-cff3a97950d4"
>
<PreConditions>
<PreCondition
 Guid="eff9f4f7-c7f2-401c-bf59-3146753ed19d"
>Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
Kernel.ActiveFunctions.SuperviseTrainSpeed_All_Information()</PreCondition></PreConditions>
<Expression>BaseTypes.MaxDistance(
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P(
        aTarget =&gt; MRDT(),
        Vest =&gt; MRDT().Speed,
        NoA_est =&gt; True
)-Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max),
    X2 =&gt; 0.0
)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="664832bc-e26e-4216-8b41-fe8a924433ad"
>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="420"
 Y="490"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TargetSpeed"
 Guid="5fbef55c-3069-4bb7-a577-f2b6dae4d2dd"
>
<ReqRef
 Id="b2d1ec0c-6179-487e-8bd5-c648d7a87f56"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ba11cac5-d30e-4e8a-b898-dfbb46ad701e"
>
</ReqRef><Comment>Provides the speed of the MRDT.</Comment>
<Cases>
<Case
 Name="MRDT exists"
 Guid="4215fe73-0ac0-49bb-b54f-8c52bfc20be2"
>
<PreConditions>
<PreCondition
 Guid="cdec1685-c604-4b2d-af3f-fe81165a65bc"
>Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
Kernel.ActiveFunctions.SuperviseTrainSpeed_All_Information()</PreCondition></PreConditions>
<Expression>MRDT().Speed</Expression>
</Case><Case
 Name="Otherwise"
 Guid="a5b1fd8d-7afa-41e0-9986-631bddcd7042"
>
<Expression>BaseTypes.Speed.NA</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="420"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_DMI"
 Guid="9d863556-7e7d-42b2-994a-447321c65271"
>
<ReqRef
 Id="74e64307-2966-461e-a976-9a0194ca8514"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71de75da-dda1-4585-8b17-667aeea13130"
>
</ReqRef><Comment>The permitted speed as reported to the driver (through the DMI).</Comment>
<Cases>
<Case
 Name="Value"
 Guid="3b2124db-7a45-4f5d-b030-095438388390"
>
<Expression>BaseTypes.MinSpeed(
    X1 =&gt; V_P_MRDT(),
    X2 =&gt; Kernel.MRSP.V_MRSP()
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="220"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SvLDistance"
 Guid="1455010c-0eb4-467d-bc96-1985d5cc05b7"
>
<Comment>Handles the case where the function call for SvL does not work.</Comment>
<Cases>
<Case
 Name="SvL available"
 Guid="f27a7401-a0d5-4d46-bc34-d7012b4d6c2d"
>
<PreConditions>
<PreCondition
 Guid="104c8194-1f31-4c18-b4a6-9f1da87c0b4b"
>Available(MA.SvL.SvL())</PreCondition></PreConditions>
<Expression>MA.SvL.SvL().Location - Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="a4044a21-12b3-43ad-a351-8d08bc843b0d"
>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="TargetStruct"
 Cacheable="TRUE"
 Default=""
 X="640"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MRDT"
 Guid="c23acb47-fdeb-4b58-b3df-fdf995401020"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ded4780e-f8f3-459f-92ea-6561b63cdeaf"
>
</ReqRef><Comment>Returns the most restrictive displayed target, the target for which the permitted speed (determined from the target location and the calculated braking curves) is smallest at the train&apos;s current position.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="c3a48f3d-32bb-44b9-bad0-fd7ac0c82bb3"
>
<Expression>REDUCE
    Kernel.SpeedAndDistanceMonitoring.TargetsList()
USING X IN
    MinTarget ( X1 =&gt; X, X2 =&gt; RESULT )
INITIAL_VALUE
    Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MovementEnd()</Expression>
</Case></Cases>
</Function><Function
 Type="TargetStruct"
 Default=""
 X="110"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MinTarget"
 Guid="a78639d3-3001-473f-97a6-b4b96c1da340"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="307235e7-d376-4f8b-8f05-ecc74bf353ed"
>
</ReqRef><Comment>Returns the target that causes the lowest permitted speed between the two parameters.
If both return the same permitted speed, it returns the second parameter.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="X1"
 Guid="99b4f72a-6815-4d7e-8399-67569b67864b"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="X2"
 Guid="03f9e4e0-748a-4af5-91fc-184584ea00dc"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="V_P(X1) &lt; V_P(X2)"
 Guid="c57b0e3f-56ef-418d-bdc5-4f4e1a9b6adf"
>
<PreConditions>
<PreCondition
 Guid="2e2cb67d-e986-47dd-9a32-d34ea033b11a"
>V_P_Target(
    aTarget =&gt; X1,
    Vest =&gt; Odometry.TrainSpeed() )
  &lt;
V_P_Target(
    aTarget =&gt; X2,
    Vest =&gt; Odometry.TrainSpeed() )</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="Otherwise"
 Guid="35cbb373-54b4-4f1c-9886-0fe496087890"
>
<Expression>X2</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="530"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_MRDT"
 Guid="1e4dbe7f-a6a6-4336-bbfb-3e05f6fb09a5"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e23e205e-c96d-4701-8d67-907847c9d5e3"
>
</ReqRef><ReqRef
 Id="06815a39-d3d2-4de8-9e48-9737e56724ca"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="deeee241-4d3e-4090-9381-a1eadd58ff24"
>
</ReqRef><Comment>The permitted speed of the MRDT.</Comment>
<Cases>
<Case
 Name="Max dist in SR"
 Guid="e3d6ef1f-eecd-4e3e-81f7-a3074b4048f5"
>
<PreConditions>
<PreCondition
 Guid="3a0c2a8a-74d6-4796-be6b-59799791f944"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="d95afede-c96a-425e-8056-2fe078c73a94"
>Display.MRDT().Location == Kernel.NationalValues.CurrentNV().MaxPermDistToRunInStaffResponsibleMode
  AND  
Display.MRDT().Speed == 0.0</PreCondition></PreConditions>
<Expression>V_P_EBD_Target(
    d_maxsafefront =&gt; Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max),
    aTarget =&gt; Display.MRDT(),
    Vest =&gt; Odometry.TrainSpeed()
)</Expression>
</Case><Case
 Name="MRDT is the EOA"
 Guid="da50275f-a949-4fe9-b3ab-e1285e86eb11"
>
<PreConditions>
<PreCondition
 Guid="178905dd-ce63-4fba-8a0b-3c4f22c9b159"
>MA.EOA.IsEOA(Display.MRDT())</PreCondition></PreConditions>
<Expression>V_P_EOA(d_estfront=&gt;Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom), Vest=&gt;Odometry.TrainSpeed())</Expression>
</Case><Case
 Name="Otherwise"
 Guid="ce69f6f0-25b3-421d-b722-f59a85591ca8"
>
<Expression>V_P_EBD_Target(
    d_maxsafefront =&gt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max),
    aTarget =&gt; Display.MRDT(),
    Vest =&gt; Odometry.TrainSpeed()
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="220"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_EOA"
 Guid="e53bbfb6-f615-4220-bf4a-53900602d192"
>
<ReqRef
 Id="fdddd187-528c-44e6-9583-2900e0e2afca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1b68fb9-3c03-4dcc-9d61-e272b5f98a3a"
>
</ReqRef><ReqRef
 Id="8b2366a5-38e0-4885-836f-fdcbbf43e1b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95a223bd-f060-420b-9ed5-7c2d3e655c0d"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89de16fc-bf66-4440-934b-7a1fe5007c54"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2418807b-78a2-4374-81b5-839321ac053f"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a87d0d2-6795-4a7e-975f-4da7407478f4"
>
</ReqRef><Comment>The permitted speed of an EOA target, as used in the calculation of the MRDT.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="d_estfront"
 Guid="8e0a7656-cae6-4169-9913-594f836cb945"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="b53b2821-ad3b-4e56-b39c-37df100eba8b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="GUI is inhibited, first case"
 Guid="bd651fd3-7709-4de5-bb0c-c3abea4c233e"
>
<PreConditions>
<PreCondition
 Guid="3b40019d-ded4-4c90-874f-5655ba662c14"
>d_estfront + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 ) &lt; MA.EOA.EOA().Location</PreCondition><PreCondition
 Guid="8b332ee1-e275-4c1d-b11c-5aaaf0880d71"
>NOT Kernel.NationalValues.ComputationOfGUIIsEnabled ()</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_Target(
    Distance =&gt; d_estfront + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1),
    aTarget =&gt; MA.EOA.EOA()
)</Expression>
</Case><Case
 Name="GUI is enabled, first case"
 Guid="0c8c1aab-75c3-4d07-b159-af8a7433a06f"
>
<PreConditions>
<PreCondition
 Guid="25a8c888-2fbe-4c82-aeed-91f3341c0a3d"
>Kernel.NationalValues.ComputationOfGUIIsEnabled ()</PreCondition><PreCondition
 Guid="ae292cb2-e670-4c12-9ec0-b9244a86f5d1"
>d_estfront + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 ) &lt; MA.EOA.EOA().Location</PreCondition></PreConditions>
<Expression>BaseTypes.MinSpeed(
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_Target(
        Distance =&gt; d_estfront + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 ),
        aTarget =&gt; MA.EOA.EOA() ),
    X2 =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.GUI_Target(
        Distance =&gt; d_estfront,
        aTarget =&gt; MA.EOA.EOA() )
)</Expression>
</Case><Case
 Name="Second case"
 Guid="e154f4c7-5452-4307-a281-82156ab1a210"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="110"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_P_EBD_Target"
 Guid="32777de1-dcc5-4e84-a87d-fc7c53f5ef17"
>
<ReqRef
 Id="07eb8e7a-b28f-4fcc-96e6-2042d5ca7980"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3814f8f2-3c72-4d97-bf84-c4047ba2e853"
>
</ReqRef><ReqRef
 Id="18ac7a51-42e7-45d9-b16c-290a09782304"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40f5a6c7-ba1c-4cf7-a46d-01817ab2e98b"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d226611-d671-4df7-944d-eddc7efb6366"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4a29dbfc-d8a9-4af8-9fd7-7b10eddeacbb"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6ce518f2-328d-4a52-a04f-a3b5b596fdfc"
>
</ReqRef><Comment>The permitted speed as used in the calculation of the MRDT.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="d_maxsafefront"
 Guid="9d0d9740-70a0-4e00-91b9-22507eb04f5c"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="66a7c1ee-0117-4b52-a235-d68da4f21e6f"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="bbc0930b-32a4-4df4-abed-036218611ac2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target at infinity"
 Guid="ed2ebbeb-2af3-489a-a72c-7b2f96841d05"
>
<PreConditions>
<PreCondition
 Guid="d165fa9a-e604-4ec9-8859-de6ede874796"
>aTarget.Location == BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.Infinity</Expression>
</Case><Case
 Name="GUI is inhibited, first case"
 Guid="1bf856e8-dee1-44b0-a1a6-bd4d7ac34525"
>
<PreConditions>
<PreCondition
 Guid="7b9f6890-4be7-49cf-9750-bc2b6d56cfb4"
>d_maxsafefront + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver +   Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 ) +   Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Dbe_display( Vest =&gt; Vest, NoA_est=&gt;False)
  &lt;  
Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_TargetForSpeed(
    aSpeed =&gt; aTarget.Speed,
    aTarget =&gt; aTarget,
    NoA_est =&gt; False )</PreCondition><PreCondition
 Guid="2784bf61-3ed4-4bb9-ba3c-cfa74d731b58"
>NOT Kernel.NationalValues.ComputationOfGUIIsEnabled ()</PreCondition></PreConditions>
<Expression>BaseTypes.MaxSpeed(
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_Target(
    Distance =&gt; d_maxsafefront + BaseTypes.SpeedToMS(Vest)*(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2) + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Dbe_display( Vest =&gt; Vest , NoA_est =&gt; False ),
    aTarget =&gt; aTarget
) - ( Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Vdelta0() + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Vdelta1(False) + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Vdelta2(False)),
    X2 =&gt; aTarget.Speed
)</Expression>
</Case><Case
 Name="GUI is enabled, first case"
 Guid="ea008d5f-1c70-4000-a4d1-1f59f4575794"
>
<PreConditions>
<PreCondition
 Guid="0eca90da-8457-4dee-9fe8-edd31394c8f9"
>Kernel.NationalValues.ComputationOfGUIIsEnabled ()</PreCondition><PreCondition
 Guid="b6dbd2ec-7f55-4672-b4b9-9c4635a43455"
>d_maxsafefront + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 ) + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Dbe_display ( Vest =&gt; Vest, NoA_est =&gt; False )
  &lt;
Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_TargetForSpeed(
    aSpeed =&gt; aTarget.Speed,
    aTarget =&gt; aTarget,
    NoA_est =&gt; False )</PreCondition><PreCondition
 Guid="d74cbcd2-5d36-4d92-ac09-52e9c8b2c16a"
>d_maxsafefront &lt; DistanceForSpeed(
    Function =&gt; FUNCTION d : BaseTypes.Distance =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.GUI_Target(
        Distance =&gt; d,
        aTarget =&gt; aTarget ),
    Speed =&gt; aTarget.Speed
)</PreCondition></PreConditions>
<Expression>BaseTypes.MaxSpeed(
X1 =&gt; BaseTypes.MinSpeed(
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_Target(
        Distance =&gt; d_maxsafefront 
              + BaseTypes.SpeedToMS(Vest) * ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver + Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 )
              + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Dbe_display ( Vest =&gt; Vest, NoA_est =&gt; False ),
        aTarget =&gt; aTarget )
          - ( Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Vdelta0() + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Vdelta1(False) + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Vdelta2(False) ),
    X2 =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.GUI_Target(
        Distance =&gt; d_maxsafefront,
        aTarget =&gt; aTarget )
    ),
X2 =&gt; aTarget.Speed
)</Expression>
</Case><Case
 Name="Second case"
 Guid="37ee1eee-2b68-457d-9e98-2a3cf3de4ae6"
>
<Expression>aTarget.Speed</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="310"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="V_SBI_DMI"
 Guid="e7fb5746-f019-4849-8e26-45b0825554d0"
>
<ReqRef
 Id="eb90e9d9-f130-4725-b447-bd6e474f0c8b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ccf64606-46a3-4aca-bef8-4c8a8e53505c"
>
</ReqRef><Comment>The most restrictive SBI speed as reported to the driver.</Comment>
<Cases>
<Case
 Name="Invalid position"
 Guid="8aa5b468-e884-4dcb-89e4-931b977bf6b7"
>
<PreConditions>
<PreCondition
 Guid="ded8a579-9aab-40e6-8f39-1c32b6903f6f"
>Kernel.TrainPosition.Position.DataState != DataStateEnum.Valid</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.NA</Expression>
</Case><Case
 Name="Value"
 Guid="20305c0b-b18d-4d3b-b937-1488474eccf8"
>
<Expression>BaseTypes.MinSpeed
(
  X1 =&gt; BaseTypes.MinSpeed(

    X1 =&gt; BaseTypes.MaxSpeed(
      X1 =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Vsbi1(Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)),
      X2 =&gt; Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed),

    X2 =&gt; BaseTypes.MaxSpeed(
      X1 =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Vsbi2_SvL( Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max) )
      X2 =&gt; Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed)
    ),

  X2 =&gt; BaseTypes.MinSpeed(

    X1 =&gt; REDUCE TARGETS( MIN( First =&gt; MRSP.SpeedRestrictions, Second =&gt; MA.EOA.LOASpeedRestriction) ) USING X IN
      BaseTypes.MinSpeed(
        X1 =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Vsbi2(
            Dmaxsafefrontend =&gt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max),
            aTarget =&gt; X,
            NoA_est =&gt; False),
        X2 =&gt; RESULT
    ) INITIAL_VALUE BaseTypes.Speed.MaxSpeed,
    X2 =&gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( Kernel.MRSP.V_MRSP() )
    )
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="V_P_Target"
 Guid="21ea79b5-4b33-46e7-96c0-4c4221295c47"
>
<ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea8e7940-4fee-4dc9-a018-fbb6fbcbba3a"
>
</ReqRef><ReqRef
 Id="2c11a715-c52a-4168-b8fb-64484d1fd6d5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="12a88d73-c099-47cc-87c6-629df40c2ff5"
>
</ReqRef><ReqRef
 Id="fdddd187-528c-44e6-9583-2900e0e2afca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab6c6c19-437a-4188-afcf-4b05fab8e3ad"
>
</ReqRef><ReqRef
 Id="8b2366a5-38e0-4885-836f-fdcbbf43e1b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb5e3074-b164-4381-b231-f48f5df56fa9"
>
</ReqRef><ReqRef
 Id="07eb8e7a-b28f-4fcc-96e6-2042d5ca7980"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="08d48986-1558-44ca-8bd6-0dd72117abeb"
>
</ReqRef><ReqRef
 Id="18ac7a51-42e7-45d9-b16c-290a09782304"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89631abb-5fdc-496e-a2f3-2a6964be1326"
>
</ReqRef><Comment>Provides the permitted speed restriction based on the provided speed and target.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="5e2d89d8-d613-46d2-8794-f7265a7bc618"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="3a0e2f3d-5371-4b4c-91da-9fda10669eb6"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target is EOA"
 Guid="f651ef51-067d-44ac-9c97-38abc06c2dad"
>
<PreConditions>
<PreCondition
 Guid="cc84ad4f-0b13-49af-b506-0dc57a7cd3d2"
>MA.EOA.IsEOA( aTarget )</PreCondition></PreConditions>
<Expression>V_P_EOA(
    d_estfront =&gt; TrainPosition.FrontEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Nom ),
    Vest =&gt; Vest
)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="121b3fa2-79e4-4431-8b2b-8357c771e077"
>
<Expression>V_P_EBD_Target(
    d_maxsafefront =&gt; TrainPosition.FrontEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Max ),
    aTarget =&gt; aTarget,
    Vest =&gt; Vest
)</Expression>
</Case></Cases>
</Function></Functions>
</NameSpace>
