<NameSpace
 X="1"
 Y="1"
 Width="100"
 Height="50"
 Name="SupervisionStatus"
 Guid="8ed06e47-0480-4067-8954-fc0c2b4e82c9"
>
<NameSpaces>
</NameSpaces>
<Functions>
<Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t1"
 Guid="1d1d3457-29ee-438a-81ac-d4d23972c41a"
>
<ReqRef
 Id="c9726f4e-f5b9-4cb2-8c10-be51cb610a07"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c1c3dd35-dc59-43d0-9ac5-9e049565a92c"
>
</ReqRef><ReqRef
 Id="9b17a2d5-ae6a-4720-acd3-fd9bc37ce0cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a64f5997-edb9-4cec-b4b0-74da19b71b7e"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="57186205-e98e-459e-ac19-4ae6a4e51ace"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fe83c8f-9a55-45a8-83fd-09b8eb26f293"
>
</ReqRef><Comment>Trigger 1: True if Vest below speed of target</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="3489aac9-dda9-4df5-8b77-ee001462bb6a"
>
<PreConditions>
<PreCondition
 Guid="5a7c088e-89b1-46d7-9431-d0ad925bbb09"
>Odometry.TrainSpeed() &lt;= 0.0</PreCondition><PreCondition
 Guid="49b16975-8d0d-4c0d-9314-edacd2c4736c"
>Kernel.Mode == ModeEnum.SR</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL"
 Guid="32018810-19b6-49fe-b687-d49217823078"
>
<PreConditions>
<PreCondition
 Guid="6bf7a424-c2a1-4041-9758-4e364833d790"
>Odometry.TrainSpeed() &lt;= Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA"
 Guid="33e06563-a800-4905-96bd-8b83452e1938"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
Odometry.TrainSpeed() &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.SupervisionStatus.SpeedOfTarget(aTarget)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="110"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t2"
 Guid="c6ca97d1-550f-4e81-9738-3bd170fbd50d"
>
<ReqRef
 Id="235a2d43-f1f5-49b1-8517-1f6b17a29a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6989d42b-0ae0-43b4-83b8-61b3c45f99dd"
>
</ReqRef><ReqRef
 Id="1900c77e-8d93-44ae-a0c6-75c7b767420f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7354edab-4c19-4019-9586-970ac81ee3f2"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="52c38e2d-44bc-4dad-a884-f2201d111027"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b0e3414-a4f3-4dcd-b41b-37d489ee2700"
>
</ReqRef><Comment>Trigger 2: True if V is between the speed of target and the MRSP speed, and if the front end is in rear of the indication distance for V.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="43fe9f60-71a0-4bc2-8864-95f16b2306a8"
>
<PreConditions>
<PreCondition
 Guid="05a1fb9f-1ee5-4111-8cfe-81308c4e97f8"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="2d76c279-9c44-414e-a7da-a597b9959db2"
>0.0 &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="6f30e0cb-6eaa-45f6-b002-5a0a3598a78d"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="fd5e6266-aa7b-42a3-9cde-871febdd1614"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="d92ffa20-568c-44e1-b6c5-0c9d290a4aaf"
>
<PreConditions>
<PreCondition
 Guid="87efc79c-cd6b-4c61-a0c9-1e3965377bd7"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="56938139-7e3f-47e3-8946-27c1c207bdfb"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="10f58d96-c05d-4049-aae8-7245af552c2c"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

  AND  

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

    AND    

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="c75a89eb-c9fe-4ac5-9250-b1dad82d823a"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(aTarget.Speed &lt; Odometry.TrainSpeed()
  AND
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()

    AND    

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="220"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t3"
 Guid="38ea0fc4-d9c7-4154-b392-8609f0de3c64"
>
<ReqRef
 Id="fda34875-06ef-46a2-b272-8fdf00368ad5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="119ef36c-fbfa-4b4b-b96a-db4dc54f197f"
>
</ReqRef><ReqRef
 Id="3b4965fd-7899-4aeb-8759-571b7de8121d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eedd2a25-aece-4669-924d-2e0c0092a07e"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c14a1107-4b33-489f-8db7-54f530cf794a"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="554780c9-f487-481a-bc3e-543860422cf3"
>
</ReqRef><Comment>Trigger 3: True if V is between the speed of target and the MRSP speed, and if the front endd is beyond the indication distance for V.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="821f5f3b-3137-464e-9cc6-d7b20659c4f2"
>
<PreConditions>
<PreCondition
 Guid="26373687-3772-4096-9095-ce328533d997"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="95bd7280-b63c-4f86-8a15-6c459d4d4ebc"
>0.0 &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="46ce3e46-09af-4ec4-b0c5-596d538dc278"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="bf1a9aa2-6328-4b32-85b2-a4fe3d27e6b9"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="c866e79d-b8d4-4840-8528-6e14bafc2497"
>
<PreConditions>
<PreCondition
 Guid="8490520b-0484-4ea0-a598-7c8157fa8276"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

    OR    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition><PreCondition
 Guid="10b25826-9caa-4ff6-b838-c97e31aa5bc8"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="d4307c38-3194-408f-a83e-134dd68d6e42"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="56e2b874-6051-4a14-9bc2-0f44e01ad161"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(aTarget.Speed &lt; Odometry.TrainSpeed()
  AND  
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="330"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t4"
 Guid="ba38ff03-f6fb-48b8-bcb9-7194548d4d0c"
>
<ReqRef
 Id="81b045fa-67f4-4abe-9d72-380cb0687a1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b2baec3-14ee-41a1-8641-4dfe9647be54"
>
</ReqRef><ReqRef
 Id="7ea3bac1-7296-4790-a939-f6100738c30a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="59be3cb3-de73-4807-86e2-1afe4243aefc"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="02bacb5a-6ffe-4e0b-9d00-5131c37fdc20"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3191060e-c360-4834-9386-d56c37814ad1"
>
</ReqRef><Comment>Trigger 4: True if V is between the speed of target and the MRSP speed, and if the front end is beyond the permitted distance for the current speed.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="b995d3e7-ed07-4618-b2db-676c95dbe5ce"
>
<PreConditions>
<PreCondition
 Guid="955e43a0-b936-4514-94ef-ab7a1a843b71"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="423a28c9-660f-439e-bf3b-a86ef1b38a10"
>0.0 &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="c6b1bf5f-4451-423e-a6ea-b5b6520aabe8"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="29acbbd9-6a14-4923-aac5-152799b4c7a8"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
(
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget(),
    Vest =&gt; Odometry.TrainSpeed(),
    NoA_est =&gt; False
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="816da540-64a5-4438-9434-2cfde2f94cac"
>
<PreConditions>
<PreCondition
 Guid="6706cb7c-de71-46a2-96f7-e57ac8b3f366"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0
 AND 
(
  FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
      (
          Vest =&gt; Odometry.TrainSpeed(),
          aTarget =&gt; MA.SvL.SvL(),
          NoA_est =&gt; False 
      )
  )
    OR    
  FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
      (
          Vest =&gt; Odometry.TrainSpeed(),
          aTarget =&gt; MA.EOA.EOA(),
          NoA_est =&gt; False 
      )
  )
)</PreCondition><PreCondition
 Guid="10cf72a7-349f-4977-8b7b-001cb384d690"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()</PreCondition><PreCondition
 Guid="5ecb6c49-78e4-4a21-afa1-126de0b33c2e"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="2854a847-3e8d-4468-a9bd-a85e9df77c42"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(
  aTarget.Speed &lt; Odometry.TrainSpeed()
    AND
  Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()
    AND    
  FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
      (
          Vest =&gt; Odometry.TrainSpeed(),
          aTarget =&gt; aTarget,
          NoA_est =&gt; False 
      )
  )
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="440"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t5"
 Guid="adf6796a-16ce-4016-81e0-acf30334c7a6"
>
<ReqRef
 Id="366c7bc8-9a83-43fb-b4e8-f41812946c97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec8f8c2d-6c0b-49f8-b517-fdc4dc4da9c7"
>
</ReqRef><ReqRef
 Id="f528e538-4118-4426-920e-582f6cf5c8ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa17ae7f-473e-41f6-9e26-cb6555ca10fd"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac27eef8-84c1-44be-b463-5a0aabb35398"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c7e13f90-038a-4fbe-9728-f0c2b7059939"
>
</ReqRef><Comment>Trigger 5: True if V is between the MRSP speed and the MRSP warning speed, and if the front end is in rear of the indication location.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="a3b8c215-582a-408e-beeb-74daa64ebbd7"
>
<PreConditions>
<PreCondition
 Guid="b839ac28-ae65-4c0f-8b35-000505b104db"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="2ac64b41-80c9-4ceb-9731-d6f8860e0ec4"
>Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="1d09dc23-9222-472e-bfbf-0358c5f37231"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="2f194928-7a05-4d7f-aea1-d31fda866459"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="c0b9d527-25ba-4c7d-917e-79db487944b3"
>
<PreConditions>
<PreCondition
 Guid="ea058977-9aa3-4a2a-aca0-d84672eb81be"
>Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="9a170c78-605b-4d4b-89fb-fb294b836b34"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="7d512598-3d29-421b-95bb-a8fce77a02b6"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="2db9bb5e-952a-4ba8-af80-55bfaccbc14e"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() |
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed()
  AND
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning ( Kernel.MRSP.V_MRSP() )

    AND    

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="550"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t6"
 Guid="ab9c9689-baeb-45c6-aa33-c1b95b4f5743"
>
<ReqRef
 Id="ac2002ec-cc04-4e25-8344-d90765ce4d29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acb059a6-8a6e-48b5-91af-42745e65282f"
>
</ReqRef><ReqRef
 Id="e54412a7-2129-4360-a62a-d2fccfd74679"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c36dd658-e5b6-4b16-811a-a21689976352"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7606bb27-6744-42f2-b437-92207376cff2"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0acb59b4-90d2-40eb-836d-c5b4de816bfc"
>
</ReqRef><Comment>Trigger 6: True if V is between the MRSP speed and the MRSP warning speed, and if the front end is between the indication location and the warning distance for V.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="af3e2c31-651d-408e-9c41-5202f309348d"
>
<PreConditions>
<PreCondition
 Guid="0bf3ee3f-c26c-4256-8955-a28d386a480f"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="d82fa389-2d5c-494d-83ee-2fc6d2c1dc6b"
>Kernel.MRSP.V_MRSP()&lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="33d11481-c0da-46de-8ba2-4d7657a68498"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="2ffcd774-542e-48e1-8ca7-1c6a959ab69d"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)

  AND  

Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="0beb63d1-aba8-4340-8010-136e8b8e74bc"
>
<PreConditions>
<PreCondition
 Guid="697254df-fd0a-4df1-811b-c6d5c266723f"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="4c7b7eea-de86-458b-970c-d0ed1d5d1bd2"
>Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="ac3fff62-f1e0-4cc7-8396-8d882a8f3736"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
( 
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.SvL.SvL()
    )
)
    OR  
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)

  AND  

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)
   AND  
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="ba3bceba-575d-4cfe-863f-7b13981fd406"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed()
  AND  
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning ( Kernel.MRSP.V_MRSP() )

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
)
  AND  
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="660"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t7"
 Guid="252d6c66-6794-49bc-9a04-a57aef7531dd"
>
<ReqRef
 Id="d394cede-dff2-4764-b72a-288ee8d5617c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dd02560-8bcc-4381-91a1-8f40acc2d48b"
>
</ReqRef><ReqRef
 Id="024d5773-00f6-4c63-83dd-29b47ad8e8ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b6060ed-ce7c-4f79-97c5-8fadbfcc7332"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e107d39-e5e1-4374-8130-816a485dbff3"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c5aa1fb-8cf7-4597-9db2-124f02e3f49e"
>
</ReqRef><Comment>Trigger 7: True if V is between the warning speed of target and the MRSP warning speed, and if the front end is beyong the warning distance for V.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="2fb83f3f-1da9-4923-aa7d-409be1f9b877"
>
<PreConditions>
<PreCondition
 Guid="ed779231-6ff2-45f9-b196-6c96f366b93a"
>0.0 &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="9876ef17-5a09-410a-b14d-deda68e45908"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="3076d147-37ec-43b6-8b06-8580da05eb47"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition><PreCondition
 Guid="3eeab62b-3df1-447b-bd8a-647ce7c87ceb"
>Kernel.Mode == ModeEnum.SR</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="ec56264e-86dd-456b-a1ff-508ece12b841"
>
<PreConditions>
<PreCondition
 Guid="a35a1039-f912-422c-bc48-1d918c4b32d9"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="68260460-f757-4cb6-9117-d32b41e6242c"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="eb49a539-7a7f-4f4c-911a-2613f043ea76"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

  OR  

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="ed30bc4a-a69c-4209-a3e4-837a6726cad1"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.SupervisionStatus.WarningSpeedOfTarget( aTarget ) &lt; Odometry.TrainSpeed()
  AND  
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning ( Kernel.MRSP.V_MRSP() )

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_W
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="0"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t8"
 Guid="0f5f0947-d060-4c27-9e5c-1b111d887a0b"
>
<ReqRef
 Id="d916181f-d7a1-4043-9617-e814b97ae7b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d84242d-5523-4781-8d06-ee5c98f0a902"
>
</ReqRef><ReqRef
 Id="14be9c17-d5ca-40d8-ae7f-15b68df84b13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c93734d6-0acc-4dd3-be41-ce685c54594c"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c8fdacd8-455e-4793-8966-68c1f05e63ca"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e973fc2-615a-4348-b014-dfaf7653a95e"
>
</ReqRef><Comment>Trigger 8: True if Vis between the MRSP warning speed and the MRSP SBI speed, and if the front end is beyond the indication location.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="c2b15757-8dab-41de-8ba3-ac54a75c4222"
>
<PreConditions>
<PreCondition
 Guid="af2468e7-5604-4dc0-92d8-6717334d7fe0"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="9d2b3db3-19c7-4f9f-bdeb-1cc65223f82f"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="3a3debe1-625f-44fc-87cc-428207f46d6e"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="14f1484e-5d51-4124-9e4b-e4a96ba5f0ec"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="bc3cd16a-e8df-4852-80da-fcd57d6fa131"
>
<PreConditions>
<PreCondition
 Guid="cf73e62e-3f3c-4b89-956c-9a4d32f2dece"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="13232c71-e9d9-492b-a8ca-d13750aa5146"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="498da79d-c744-4203-bb43-041d3c4806fe"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

  OR  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="20933763-b87b-4bf7-ab53-7119bba2d16a"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning ( Kernel.MRSP.V_MRSP() ) &lt; Odometry.TrainSpeed()
  AND  
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( Kernel.MRSP.V_MRSP() )

    AND    

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="110"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t9"
 Guid="3bae291c-0999-40d9-b9c0-7d19e5e30b1e"
>
<ReqRef
 Id="0342251f-d656-4d41-8ece-bde758fbfadf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="00a9260f-0e80-4116-8b6a-71a6a982f34b"
>
</ReqRef><ReqRef
 Id="01550cfd-1b51-4675-b2c3-6dae7cf1ea0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6ec88d77-ad0a-453b-9c06-29fd98924959"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e611f7db-535f-4c05-a438-a3dee5325c9c"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b45fe3cc-c9d7-42fe-8cf6-a22cbdab643b"
>
</ReqRef><Comment>Trigger 9: True if V is between the MRSP warning and SBI speeds, and if the front end is between the indication location and the nearest SBI distance for V.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="5af4e249-9e18-4d28-a087-d8b18f8cbddc"
>
<PreConditions>
<PreCondition
 Guid="4bcd77e7-e55c-4b6b-b87e-9c04544377ef"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="04980250-15ef-4189-b808-dbaafc19c40e"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )  &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="1d2c8097-b965-4172-80eb-ee1110c6630d"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="1ad85ffe-6b3b-4e42-afc5-989c5afc986b"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)

  AND  

Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
,
    NoA_est =&gt; False )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="39c3284d-3d0b-4584-b706-daf8d78d1d8b"
>
<PreConditions>
<PreCondition
 Guid="56dd96fd-5cf3-4d8b-afb7-0afb0fc451b6"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning( Kernel.MRSP.V_MRSP() )  &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="85529716-5270-4dee-a9b6-8725853dfae9"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="b74a54af-2191-47ce-b256-ce1909d22c61"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
( 
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.SvL.SvL()
    )
)
     OR    
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)

  AND  

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL(),
        NoA_est =&gt; False 
    )
)
    AND    
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1
    (
        Vest =&gt; Odometry.TrainSpeed()
    )
)
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="8425461c-f75f-42f6-8fe4-a064555e00d3"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning ( Kernel.MRSP.V_MRSP() ) &lt; Odometry.TrainSpeed()
  AND  
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( Kernel.MRSP.V_MRSP() )

    AND    

 FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
      (
          Vest =&gt; Odometry.TrainSpeed(),
          aTarget =&gt; aTarget
      )
  )
  AND
  NOT FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
      (
          Vest =&gt; Odometry.TrainSpeed(),
          aTarget =&gt; aTarget,
          NoA_est =&gt; False 
      )
  ) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="220"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t10"
 Guid="9e1e8636-9e50-4763-af99-106f4b17fd2d"
>
<ReqRef
 Id="49cb1ac1-74b3-4afe-865d-d6b4401719da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3697d91d-66a2-4302-9242-109f7ebf8f48"
>
</ReqRef><ReqRef
 Id="8cbd8d63-d690-46a3-949e-0118624c0bda"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2df09958-00ad-4baf-a628-4175ddf298ac"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23a1bf88-d933-4348-b9b2-9d3b1f410b4b"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7220e91e-94aa-444f-af74-952d53fc6f50"
>
</ReqRef><Comment>Trigger 10: True if V between speed of target and SBI speed, and if front end in rear of the SBI</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="bce10d13-6bb5-457c-bec3-3038ec033338"
>
<PreConditions>
<PreCondition
 Guid="d03037cd-a67b-4521-a942-8133539eec58"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="a1fa1940-f18c-4571-8548-e4a2a84135db"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="0e04f5c4-231d-47ea-a2d1-a645b932dbec"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="6292932a-4da3-468b-b518-ae4ee4fcb90e"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget(),
    NoA_est =&gt; False )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="7cfc204d-8db7-4b59-8f4b-bd92640280d4"
>
<PreConditions>
<PreCondition
 Guid="c7f073f8-260b-4b35-bede-4be01887b319"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="43cfa677-694e-4c1b-968a-0b887d27e12b"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL(),
        NoA_est =&gt; False 
    )
)

  OR  

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1
    (
        Vest =&gt; Odometry.TrainSpeed()
    )
)
)</PreCondition><PreCondition
 Guid="dfd7754d-e882-47a7-8ecf-db66cb027851"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="5c4828b1-0a48-4d0a-a431-c8d2e4d06db0"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.SupervisionStatus.SBISpeedOfTarget(aTarget) &lt; Odometry.TrainSpeed()
  AND
 Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( Kernel.MRSP.V_MRSP() )

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget,
        NoA_est =&gt; False 
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="330"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t11"
 Guid="379484e1-fa4a-4743-9ffa-c91020acdaa3"
>
<ReqRef
 Id="b3b7e30c-6bb4-4cd9-8e6d-dfb514676cbd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f5856524-74f9-4f74-8023-fdaee98934a0"
>
</ReqRef><ReqRef
 Id="f1638f47-91c3-47b5-95c8-929a83f2c89a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a12b2f43-8a09-4822-b506-89a859c76ab5"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae9c9f41-05fd-43be-aefd-5a15da4cda92"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5d62796e-1a95-45c7-9701-52861d52a741"
>
</ReqRef><Comment>Trigger 11: True if V between SBI speed and EBI speed, and front end in rear of indication location.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="93eff610-defb-4da1-a517-e9dab91a9143"
>
<PreConditions>
<PreCondition
 Guid="8c82bd9f-ed47-47fa-9c5a-2ad65ef4eeae"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="37432676-e4ff-4122-ac0c-0f671e11de14"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="b50b7cbf-0435-4ba9-b4ce-9d30c45f4183"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="11ec7d1e-65f1-4ab5-a550-b4b78675ee3a"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="fef6e571-9ff0-4c31-8adc-6b762d06b84b"
>
<PreConditions>
<PreCondition
 Guid="8d60acbf-9fa8-42e3-b1e7-3ae1e7f26625"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="75c54332-9a82-42de-bf5b-c23064138beb"
>Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="6f84ab62-4a0a-46f5-a1b9-539cf0c4c8ec"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Kernel.MRSP.V_MRSP(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

  AND  

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Kernel.MRSP.V_MRSP(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="103cd448-689f-4944-a9c6-cb6f24307ac2"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( Kernel.MRSP.V_MRSP() ) &lt; Odometry.TrainSpeed()
  AND  
Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi ( Kernel.MRSP.V_MRSP() )

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="440"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t12"
 Guid="9918ddd0-6f1e-49e4-b53e-3b5b815ce4c8"
>
<ReqRef
 Id="e354be4a-8c30-493a-8607-87b51d1ac30c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="222e05ac-072a-4e8e-8544-209395bb391a"
>
</ReqRef><ReqRef
 Id="6adc672f-bb83-47c8-850c-a7604401a379"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="269ee37d-e086-49d1-a99b-526080bb6422"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="37541295-cde9-4214-ada2-80aec3f62f64"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ef2f11f2-8590-405b-92db-455fb2dd1170"
>
</ReqRef><Comment>Trigger 12: True if V between the MRSP SBI and EBI speeds, and if front end is beyond the indication location and in rear of the EBI distance for V.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="38ae10f6-d5bc-4262-9c1c-4bc5e6bf1dae"
>
<PreConditions>
<PreCondition
 Guid="97f5d293-6858-4e44-a893-53c4f3664eba"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="af279e14-f824-4766-aae4-ec40d7a4d2e3"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="ea13585b-79b5-4e94-9f1d-20f70caca56a"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="d62fb026-0dfe-46d4-b297-9d13a84749ee"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)

  AND  

Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_EBI(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="4099fbf5-84a9-430e-9ee7-e1f9815af3c3"
>
<PreConditions>
<PreCondition
 Guid="a9b8f7a2-bce8-4098-b31d-21fc11c97695"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
( FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
      (
          Vest =&gt; Kernel.MRSP.V_MRSP(),
          aTarget =&gt; MA.SvL.SvL()
      )
  )
    OR  
  FrontEndIsPast(
      aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
      aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
      (
          Vest =&gt; Kernel.MRSP.V_MRSP(),
          aTarget =&gt; MA.EOA.EOA()
      )
  ) )

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_EBI
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)
)</PreCondition><PreCondition
 Guid="8724f5ef-1327-466d-b33d-f5a87e1ecf5b"
>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi( Kernel.MRSP.V_MRSP() )  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="20736e6a-7c98-4c0b-a762-0d72acf8f825"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="4268be01-a895-4a34-b6c1-2472ae2e7c48"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( Kernel.MRSP.V_MRSP() ) &lt; Odometry.TrainSpeed()
  AND  
Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi ( Kernel.MRSP.V_MRSP() )

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
)
  AND  
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_EBI
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
))</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="550"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t13"
 Guid="f6b87a23-a348-43bd-a634-1c3599573e3e"
>
<ReqRef
 Id="6d9d71c4-5508-47ef-ab3d-c32522306769"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84282adb-3b54-4490-9440-cf61980249b7"
>
</ReqRef><ReqRef
 Id="1230c827-9c0a-4903-80b2-609619e53d02"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e82e2cf8-bc8b-48f1-b79b-306fe3a486f9"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e433fc00-2b4a-4d16-892b-fc04d55da826"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="43f563df-c6e3-4d14-92e1-6709ee486663"
>
</ReqRef><Comment>Trigger 13: True if V is between the target EBI speed and the MRSP EBI speed, and if the front end is in rear of the EBI distance for the current speed.</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="81d1c788-e6fd-4e64-977b-9ed6152ccbf6"
>
<PreConditions>
<PreCondition
 Guid="a4eaed8f-35ff-4238-855d-22ae6e6372ac"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="69841c47-1e6a-47e1-a080-91f9ede0a96e"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_EBI(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition><PreCondition
 Guid="d9ed9e43-7d34-44ef-a52f-2bfc4ea13e50"
>0.0  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="824d880b-059d-4332-8908-a00e3a784084"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="af7ef0df-2439-4eab-96c3-500c80650b23"
>
<PreConditions>
<PreCondition
 Guid="dd4c474e-259c-40e2-bf18-48a272250ae0"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_EBI
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)</PreCondition><PreCondition
 Guid="d74824b5-8d62-479c-bf50-e299986692d5"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed  &lt;  Odometry.TrainSpeed()</PreCondition><PreCondition
 Guid="a1ee7e5f-7986-47a2-9ebf-da2f289da221"
>Odometry.TrainSpeed()  &lt;=  Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="34e8f5f0-20b8-4ee6-84b1-5371fbbcad32"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(aTarget.Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( aTarget.Speed ) &lt; Odometry.TrainSpeed()
  AND  
Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi ( Kernel.MRSP.V_MRSP() )

    AND    

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_EBI
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="660"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t14"
 Guid="0de3b0a2-32ac-401b-83f5-1844d948827a"
>
<ReqRef
 Id="a77d9b43-ca07-4b88-99c9-aee4aac78473"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae053d78-cd55-4ddc-8954-bb726b74bda4"
>
</ReqRef><ReqRef
 Id="184511ec-2ccf-4307-aa0d-64e5b4424e92"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ba98a7a-7879-45c4-9f9d-12a7b43ebab5"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0c127c35-fba6-4db7-8f44-6e350eb6cb05"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="00b3ec62-0af5-4a64-8ffc-dc9682f4b2ed"
>
</ReqRef><Comment>Trigger 14: True if V is greater than the MRSP EBI speed and the max safe front end is before the indication location at MRSP speed</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="4badce43-0259-4edb-ade2-d59050b13c7f"
>
<PreConditions>
<PreCondition
 Guid="1788e4ad-5a93-452d-b094-56b2dc9823d2"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="ab1a64ff-33d1-4770-af7d-d95a4733e145"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &lt;= Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition><PreCondition
 Guid="11168aca-1f55-4c52-b369-44d49b1b1ec8"
>Odometry.TrainSpeed() &gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="a0ce7040-02a5-496e-8baf-3f5ce0c5a5a0"
>
<PreConditions>
<PreCondition
 Guid="dfb42557-a911-492d-aff0-2f210ee69e3c"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND

(
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

    AND    

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition><PreCondition
 Guid="4754155e-7e88-4d87-b130-22c93357e138"
>Odometry.TrainSpeed() &gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="8ecc19c1-a5ef-4ee9-a774-b4c117f5757c"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Odometry.TrainSpeed() &gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="0"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="r0"
 Guid="19a2f845-3a75-4bab-a290-f11e06cff0b1"
>
<ReqRef
 Id="775d91cf-e44c-4da5-964b-d0cb40ab524b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44bf2e0b-1202-4830-aeba-7498246d601d"
>
</ReqRef><ReqRef
 Id="95129f07-4e8c-4a36-be22-0671888b69bb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dab8786-cade-4871-9e71-2498e4ed65e9"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c217b93-d279-448c-9592-cd9fc3432643"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e6b0205-1cc1-4035-8863-2f5b25ae24f6"
>
</ReqRef><ReqRef
 Id="c7a10d36-1ba2-41ce-b30c-d4072f8b2929"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="7fd5ce7e-2844-4db4-ae44-69d2387323ed"
>
</ReqRef><Comment>Revocation 0: True if the train is at standstill.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="906c107b-7b02-4f3e-84f9-177932c58041"
>
<Expression>Odometry.TrainIsAtStandstill()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="110"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="r1"
 Guid="9eaded74-04fe-4de1-8982-179d8450fab7"
>
<ReqRef
 Id="c67a3f36-61c7-4021-a4d9-2d9bbe0d08aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b5466f4-03c4-484a-af6b-a88d3b6187db"
>
</ReqRef><ReqRef
 Id="2c0f9388-fcbe-4608-aafb-aad27bc06d88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dfe1e769-29ba-4e17-bbb3-2f33b504b1cf"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd8dcfb9-80b5-4e60-a43b-442e835447d1"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23cbcb05-0633-4c0e-ba15-7b3ebfb8e2e5"
>
</ReqRef><ReqRef
 Id="c7a10d36-1ba2-41ce-b30c-d4072f8b2929"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="606899dd-a92a-44d2-9a70-c154b7184f8a"
>
</ReqRef><Comment>Revocation 1: True if V is less than or equal to the speed of target.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="4b2890d3-9788-4e83-ace0-a28b24d7cb3c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Max distance to run in SR Mode"
 Guid="156abf7d-0603-4b6a-8ac9-ab3397a16a4c"
>
<PreConditions>
<PreCondition
 Guid="2983c36e-fb95-41c0-acb4-9240397a256f"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="153e9e6d-2519-4fb5-b6f2-702212d5277d"
>Odometry.TrainSpeed() &gt; 0.0</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="EOA or SvL"
 Guid="069dd634-dca9-47a5-a29c-782256c4a17e"
>
<PreConditions>
<PreCondition
 Guid="a39d3b7f-0d8b-4dcd-8505-da106412b1a8"
>MA.EOA.IsEOA(aTarget)
  OR  
MA.SvL.IsSvL(aTarget)</PreCondition></PreConditions>
<Expression>Odometry.TrainSpeed() &lt;= Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed</Expression>
</Case><Case
 Name="MRSP target and LOA"
 Guid="5f0d2e6c-c8c4-477b-9126-235984081071"
>
<Expression>Odometry.TrainSpeed() &lt;= aTarget.Speed</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="220"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="r2"
 Guid="82b6ff61-72d1-4e4e-bcc8-3208f2bda4d8"
>
<ReqRef
 Id="8f56c788-64ae-457b-b163-9023aca9643c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79c9a41b-0789-474f-980f-d069c74f42a0"
>
</ReqRef><ReqRef
 Id="9e577947-88cc-41b1-857e-6a7b33567ea5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab019a2c-f6cc-40ae-a5df-0054e791ec3e"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d480015c-9b7a-42ef-afe1-060ec5323187"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e91fc60a-6332-47ba-bd2c-e4df62041561"
>
</ReqRef><ReqRef
 Id="c7a10d36-1ba2-41ce-b30c-d4072f8b2929"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="42193bfc-dd5f-448e-a333-9b98b8a5a1de"
>
</ReqRef><Comment>Revocation 2: True if V is between the speed of target and the MRSP speed, and if the front end is in rear of the indication distance for V.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="97ae5371-6a85-47b4-addd-afbad2d41527"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Max Dist to run in SR"
 Guid="29b4bb96-5dd2-4056-8980-a7ceacc1de28"
>
<PreConditions>
<PreCondition
 Guid="205ff24c-db10-4759-9768-6cd354aa9601"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="2dcaba8b-9363-473a-b234-369bad423775"
>Odometry.TrainSpeed() &lt;= 0.0
  OR  
Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed()


    OR    


Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Odometry.TrainSpeed(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="EOA or SvL"
 Guid="3e6ff83f-1640-48f8-b243-00a4ce65c9c2"
>
<PreConditions>
<PreCondition
 Guid="5d3d2172-b1ba-472c-a2f6-7259cb24c2c3"
>MA.EOA.IsEOA(aTarget)
  OR  
MA.SvL.IsSvL(aTarget)</PreCondition></PreConditions>
<Expression>(
  Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()
    AND  
  Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()
)

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA() 
    )
)

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL() 
    )
)</Expression>
</Case><Case
 Name="MRSP Target or LOA"
 Guid="d02c5076-60d6-459a-a275-387f8b5c2664"
>
<Expression>(
  aTarget.Speed &lt; Odometry.TrainSpeed()
    AND  
  Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()
)

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget
    )
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="330"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="r3"
 Guid="2dffbb7c-f002-4f4b-afb7-840aaf31222f"
>
<ReqRef
 Id="5b666657-27b5-46b4-9ee5-194c4319dd17"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1a941c1a-8632-4e0e-9eb0-007bdbbe2c4b"
>
</ReqRef><ReqRef
 Id="d1eb1a87-f8ea-4a77-bf6c-5d1b53c98b42"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="15f03563-ca0a-41e1-9469-c92ba01f0476"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab22dd58-872e-4bf4-9bfe-c9d91c5b0c0a"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40b2facd-419e-41d6-a67d-21009fdc4836"
>
</ReqRef><ReqRef
 Id="c7a10d36-1ba2-41ce-b30c-d4072f8b2929"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="076db5cb-6015-46fe-95c8-df9020ed91d0"
>
</ReqRef><Comment>Revocation 3: True if V is between the speed of target and the MRSP speed, and if the front end is in rear of the permitted distance for V.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="4df47526-6e82-43fd-9d1c-034b9374b057"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Max Dist to run in SR"
 Guid="22f16645-c68d-4cb5-8fcb-430477082156"
>
<PreConditions>
<PreCondition
 Guid="cf929480-260d-4420-9618-7c1bd855e254"
>(Odometry.TrainSpeed() &lt;= 0.0
  OR  
 Kernel.MRSP.V_MRSP() &lt; Odometry.TrainSpeed() )

    OR    

Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
(
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget(),
    Vest =&gt; Odometry.TrainSpeed(),
    NoA_est =&gt; False
)</PreCondition><PreCondition
 Guid="cba9e74e-f531-4a64-a766-87744964f013"
>Kernel.Mode == ModeEnum.SR</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="EOA or SvL"
 Guid="b1cf26ab-1184-461f-8b01-aca07780fca6"
>
<PreConditions>
<PreCondition
 Guid="a46f22ad-b383-4108-9bb1-a307308892b5"
>MA.EOA.IsEOA(aTarget)
  OR  
MA.SvL.IsSvL(aTarget)</PreCondition></PreConditions>
<Expression>(
  Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeed &lt; Odometry.TrainSpeed()
    AND
   Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()
)

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.EOA.EOA(),
        NoA_est =&gt; False 
    )
)

  AND  

NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; MA.SvL.SvL(),
        NoA_est =&gt; False 
    )
)</Expression>
</Case><Case
 Name="MRSP Target or LOA - Revocation condition fulfilled"
 Guid="144c5cd2-601d-483b-a026-21a3d69f75dd"
>
<Expression>(
  aTarget.Speed &lt; Odometry.TrainSpeed()
    AND  
  Odometry.TrainSpeed() &lt;= Kernel.MRSP.V_MRSP()
)
  AND  
NOT FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P
    (
        Vest =&gt; Odometry.TrainSpeed(),
        aTarget =&gt; aTarget,
        NoA_est =&gt; False 
    )
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="30"
 Y="270"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SpeedOfTarget"
 Guid="3874cbd7-1bd3-4eda-b73e-4800ade534f3"
>
<ReqRef
 Id="9b17a2d5-ae6a-4720-acd3-fd9bc37ce0cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ada1df9b-fc6f-43a4-877d-d5b7f4c8ed75"
>
</ReqRef><ReqRef
 Id="c9726f4e-f5b9-4cb2-8c10-be51cb610a07"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="38ed2a5d-6795-421b-b3c4-543860023e95"
>
</ReqRef><ReqRef
 Id="235a2d43-f1f5-49b1-8517-1f6b17a29a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42c83a7a-62f0-400f-afb6-62c0b1dedd32"
>
</ReqRef><ReqRef
 Id="fda34875-06ef-46a2-b272-8fdf00368ad5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e973a14c-aa25-4a17-905d-dc5c4666c580"
>
</ReqRef><ReqRef
 Id="81b045fa-67f4-4abe-9d72-380cb0687a1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3f343afc-7f12-4b75-bc4f-0d166eff5ebd"
>
</ReqRef><ReqRef
 Id="1900c77e-8d93-44ae-a0c6-75c7b767420f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="220fbfbc-96e7-43bd-9939-6a6256509f9d"
>
</ReqRef><ReqRef
 Id="3b4965fd-7899-4aeb-8759-571b7de8121d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ba42ad0-0b85-4ff0-b33d-b4ce0dbe9a4c"
>
</ReqRef><ReqRef
 Id="7ea3bac1-7296-4790-a939-f6100738c30a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10bb9068-efbd-4146-b96e-d99f5ec4c7e2"
>
</ReqRef><Comment>This function returns the Target Speed of the currently supervised target, unless it is the EOA or the SvL, in which case it returns the associated release speed.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="a42fe859-9b76-438a-be40-dc0154cd6d13"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EOA or SvL"
 Guid="07fa57b8-4906-4815-b7f0-d1ee2425a6a5"
>
<PreConditions>
<PreCondition
 Guid="a47022d0-0bbd-46c8-8da8-200062af1b6c"
>MA.EOA.IsEOA(aTarget)
  OR  
MA.SvL.IsSvL(aTarget)</PreCondition><PreCondition
 Guid="d03e95f1-3c65-473f-89c1-1385754a7806"
>aTarget.Speed == 0.0</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeedForTarget(aTarget)</Expression>
</Case><Case
 Name="LOA or MRSP target"
 Guid="48d39ac6-a225-406e-bf8a-3f78d555776a"
>
<Expression>aTarget.Speed</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="30"
 Y="390"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="WarningSpeedOfTarget"
 Guid="b5761995-cb23-4bac-9036-4b4f250af673"
>
<ReqRef
 Id="d394cede-dff2-4764-b72a-288ee8d5617c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb3c4e29-d78a-4308-939b-51236c0f7935"
>
</ReqRef><ReqRef
 Id="024d5773-00f6-4c63-83dd-29b47ad8e8ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="febb3fd9-0bc4-408d-acac-c5b593dd3278"
>
</ReqRef><Comment>Returns the target speed + the difference to warning speed for a LOA or MRDT target, or the release speed for a EOA or SvL.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="bcffc93e-fb88-409d-b230-a75428068c5e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EOA or SvL"
 Guid="fd407859-d7c9-446f-ab29-fd3a8b5956c2"
>
<PreConditions>
<PreCondition
 Guid="b2ce520d-61da-47f7-bd05-c1a608a44783"
>aTarget.Speed == 0.0</PreCondition><PreCondition
 Guid="c2c6b293-7c02-4c59-ab92-c985e45fb905"
>MA.EOA.IsEOA(aTarget)
  OR  
MA.SvL.IsSvL(aTarget)</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeedForTarget(aTarget)</Expression>
</Case><Case
 Name="LOA or MRSP target"
 Guid="dcc54e90-3b0d-4eb8-9445-62039c71bdaa"
>
<Expression>aTarget.Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_warning ( aTarget.Speed )</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="30"
 Y="330"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SBISpeedOfTarget"
 Guid="64a60ae5-3feb-479a-af65-f1dd3e327909"
>
<ReqRef
 Id="49cb1ac1-74b3-4afe-865d-d6b4401719da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="913a1b7a-853a-4456-a403-10413e65df3f"
>
</ReqRef><ReqRef
 Id="8cbd8d63-d690-46a3-949e-0118624c0bda"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f5aa34f6-08f5-48af-ba4a-f49f0838eaac"
>
</ReqRef><Comment>Returns the target speed + the difference to sbi speed for a LOA or MRSP target, or the release speed for a EOA or SvL.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="868355bf-af60-4a8e-b83e-1f294c8c1df6"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EOA or SvL"
 Guid="4bb84cde-25e4-4d68-a10a-7d75c067ac80"
>
<PreConditions>
<PreCondition
 Guid="abfa29b2-5f09-444a-8cb1-9269e7f12c3b"
>MA.EOA.IsEOA(aTarget)
  OR  
MA.SvL.IsSvL(aTarget)</PreCondition><PreCondition
 Guid="09ca21c3-5294-4927-a66f-0ac40068f4d6"
>aTarget.Speed == 0.0</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.ReleaseSpeedForTarget(aTarget)</Expression>
</Case><Case
 Name="LOA or MRSP target"
 Guid="48ea834b-04ad-4c0b-982f-20c21037c46b"
>
<Expression>aTarget.Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi ( aTarget.Speed )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="770"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="t15"
 Guid="e2e4425e-13b6-41c7-8ea6-53ed16f8d832"
>
<ReqRef
 Id="17f454b2-95a3-43f9-9580-b68b6c425861"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d1cf417b-6f7a-4d6d-a085-cee7dabdb708"
>
</ReqRef><ReqRef
 Id="c41cb7ca-ee2d-4af2-841c-855ef592089d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e8bb746-8895-4ad1-bc67-f2f375191141"
>
</ReqRef><ReqRef
 Id="3af8138b-bed5-48ed-ab3a-33ce3d950e16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9242829d-1499-4195-9d62-ab2b4d8524cd"
>
</ReqRef><ReqRef
 Id="45963a73-6286-4c23-8f87-9e18d78e5e28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c6ef6b5e-77a2-41f6-8dfe-41a494fd0a13"
>
</ReqRef><Comment>Trigger 15: True if V is greater than the MRSP EBI speed adn the max safe front end is after the indication location at MRSP speed</Comment>
<Cases>
<Case
 Name="Max dist to run in SR"
 Guid="4b8eff0c-c0da-4290-b161-a229d3a84bae"
>
<PreConditions>
<PreCondition
 Guid="d3ae699a-c7ca-49c4-90bf-7e9bb9d6202e"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="f80fe6b3-c394-49a0-9007-09c3436bb189"
>Odometry.TrainSpeed() &gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="24699bfb-8dd1-4e5c-9595-f1017a992208"
>Kernel.TrainPosition.DistanceRunInSR(DistanceIntervalEnum.Max) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I(
    Vest =&gt; Kernel.MRSP.V_MRSP(),
    aTarget =&gt; Kernel.Modes.StaffResponsible.SREndTarget()
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="EOA and SvL - Trigger conditions fulfilled"
 Guid="91192e5c-b467-4a08-9d67-9791b131db47"
>
<PreConditions>
<PreCondition
 Guid="a39f9b15-23ff-4264-bb8e-bb0463ac19b4"
>Odometry.TrainSpeed() &gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )</PreCondition><PreCondition
 Guid="c0f2e618-dbcc-4130-b200-7d7a73cbac8c"
><Comment>The leading term, TargetSpeed == 0.0, ensures that the end on the MA is not a LOA since, in that case, there is neither EOA or SvL</Comment>
Kernel.MA.MA.TargetSpeed == 0.0

 AND 

(
FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.SvL.SvL()
    )
)

  AND  

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Nom,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; MA.EOA.EOA()
    )
)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="MRSP target or LOA - Trigger condition fulfilled"
 Guid="fb0a9609-f3bc-473d-92b1-1df0e0b458e3"
>
<Expression>THERE_IS aTarget IN Kernel.SpeedAndDistanceMonitoring.TargetsList() | 
(NOT (MA.EOA.IsEOA(aTarget) OR MA.SvL.IsSvL(aTarget)) )
  AND  
(Odometry.TrainSpeed() &gt; Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_ebi( Kernel.MRSP.V_MRSP() )

  AND  

FrontEndIsPast(
    aTrainFront =&gt; Default.DistanceIntervalEnum.Max,
    aLocation =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
    (
        Vest =&gt; MRSP.V_MRSP(),
        aTarget =&gt; aTarget
    )
) )</Expression>
</Case></Cases>
</Function><Function
 Type="SupervisionStatusEnum"
 Default=""
 X="160"
 Y="270"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Transition"
 Guid="ee82f4ce-f19c-426d-9248-b2467feaf7b2"
>
<ReqRef
 Id="db019e71-db84-41ad-a3fe-4bf8dae5a1a3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd3f8380-26d9-4984-9999-dfa965d0825e"
>
</ReqRef><ReqRef
 Id="a23ad28c-4aab-471e-a48b-97cc5e84f75a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bf2c9acd-6995-4a8d-b92b-9b976fe4eb71"
>
</ReqRef><ReqRef
 Id="c37a61a0-4999-47a6-a190-260324acdb40"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3658840-a190-4cc7-8a77-2ab1e4c2a4f8"
>
</ReqRef><ReqRef
 Id="f48b3d4c-0b20-4478-8d97-831556c6050e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a15656e6-3470-4532-b4d3-49a28928ed8c"
>
</ReqRef><ReqRef
 Id="e5f050bb-7e6e-461d-b803-0fddb0a89260"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6aee3e29-5e84-4207-a6bc-2bdda454558f"
>
</ReqRef><ReqRef
 Id="87168408-94a2-4eeb-8c4a-666507a95b45"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5d4cdeb-9d1f-471a-9d10-321da412a47f"
>
</ReqRef><ReqRef
 Id="78901f0f-a70f-415d-8d57-e5156f7206d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90a9c386-d301-4107-b9d9-dc5f1f7862a4"
>
</ReqRef><Comment>Computes the next supervision status according to the current one</Comment>
<Parameters>
<Parameter
 Type="SupervisionStatusEnum"
 Name="current"
 Guid="a0bfb403-6136-486e-a6c4-8e8cf82b3200"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Transition to Intervention (p1)"
 Guid="213dc55a-319d-4a74-a22b-3418d7acb894"
>
<Comment>Transition =&gt; Intervention</Comment>
<PreConditions>
<PreCondition
 Guid="9289be11-6c89-4600-bbc8-f1482b5d9797"
><Comment>Beware, transition t15() does not belong to table in 3.13.10.4.15 but is present in 3.13.10.4.10</Comment>
t10() OR t11() OR t12() OR t13() OR t14() OR t15()</PreCondition><PreCondition
 Guid="e659195c-8106-44aa-a781-0d22c5c5b622"
>current in  [SupervisionStatusEnum.Normal, SupervisionStatusEnum.Indication, SupervisionStatusEnum.Overspeed, SupervisionStatusEnum.Warning]</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Intervention</Expression>
</Case><Case
 Name="Transition to Normal from Intervention (p1)"
 Guid="2a908e62-1090-4622-b7ee-69cc2166bed9"
>
<Comment>Transition to normal from intervention</Comment>
<PreConditions>
<PreCondition
 Guid="48218571-a8dc-4386-9fdb-9b8d74248c76"
>current in [SupervisionStatusEnum.Intervention]</PreCondition><PreCondition
 Guid="c1b3809f-f8f5-4938-9760-664ad5643a2c"
>r0() OR 
( 
    CanLeaveIntervention() 
 AND
    FORALL target IN TargetsList() |   r1(  target ) OR r2(  target ) 
)</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Normal</Expression>
</Case><Case
 Name="Transition to Normal from Indication (p1)"
 Guid="92fb9c1e-3c6d-4d2e-b945-8e264cc08727"
>
<Comment>Transition to normal</Comment>
<PreConditions>
<PreCondition
 Guid="eaba3318-5920-42b5-998d-c1db00c24458"
>current in [SupervisionStatusEnum.Indication]</PreCondition><PreCondition
 Guid="94760f09-44e6-44c2-99c6-f778216f4628"
>FORALL target IN TargetsList() |  
(
  ( r1(  target ) OR r2(  target ) )
    AND
  (NOT EoASvlWithReleaseSpeed( target ) OR ChangeOfDisplayedTarget())
)</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Normal</Expression>
</Case><Case
 Name="Transition to Normal (p1)"
 Guid="e5fb31a1-78dc-4988-bc9f-b9468e30ef0a"
>
<Comment>Transition to normal</Comment>
<PreConditions>
<PreCondition
 Guid="69a676f6-e2b3-4a33-b200-d999292feb92"
>current in [SupervisionStatusEnum.Overspeed, SupervisionStatusEnum.Warning]</PreCondition><PreCondition
 Guid="f165f76f-31c4-4f44-8f03-6f8ee4e52087"
>( FORALL target IN TargetsList() |  r1(  target ) OR r2(  target ) )</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Normal</Expression>
</Case><Case
 Name="Transition to Warning (p2)"
 Guid="8e8098fc-8d3f-48a8-92b1-8ba60ecf76ea"
>
<Comment>Transition to warning</Comment>
<PreConditions>
<PreCondition
 Guid="8b60a634-1848-4265-a5b7-4ec3c585a0a9"
>current in [SupervisionStatusEnum.Normal, SupervisionStatusEnum.Indication, SupervisionStatusEnum.Overspeed]</PreCondition><PreCondition
 Guid="668513f0-fd61-456a-b203-dbf267dd72ae"
>t7() OR t8() OR t9()</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Warning</Expression>
</Case><Case
 Name="Transition to Indication (from Intervention) (p2)"
 Guid="d65e6832-0e62-4ad3-85fa-6f6be858a587"
>
<Comment>Transition to indication</Comment>
<PreConditions>
<PreCondition
 Guid="0699dc5c-3975-4325-aea8-6b7b155d1212"
>current in [SupervisionStatusEnum.Intervention]</PreCondition><PreCondition
 Guid="c966826c-234c-47cb-b953-06e8fe313f2f"
>CanLeaveIntervention()
AND 
FORALL target IN TargetsList() |  r3(  target )</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Indication</Expression>
</Case><Case
 Name="Transition to Indication (p2)"
 Guid="bb8bf5a4-c496-44fe-ba38-09fbd456ab67"
>
<Comment>Transition to indication</Comment>
<PreConditions>
<PreCondition
 Guid="971e8b54-de8c-4cfe-b110-f5145e867d38"
>current in [SupervisionStatusEnum.Overspeed, SupervisionStatusEnum.Warning]</PreCondition><PreCondition
 Guid="6c0cb6ee-e302-4861-950d-4b1bc347e9ae"
>FORALL target IN TargetsList() |  r3(  target )</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Indication</Expression>
</Case><Case
 Name="Transition to Overspeed (p3)"
 Guid="fb4014f2-e725-4e15-b1b5-fd68af59744a"
>
<Comment>Transition to overspeed</Comment>
<PreConditions>
<PreCondition
 Guid="09114317-b2f7-4a4e-8b83-f5ceb946d1d7"
>current in [SupervisionStatusEnum.Normal, SupervisionStatusEnum.Indication]</PreCondition><PreCondition
 Guid="cea2f273-58e3-4792-aad2-92a1acbbe14b"
><Comment>The current status</Comment>
t4() OR t5() OR t6()</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Overspeed</Expression>
</Case><Case
 Name="Transition to Indication (p4)"
 Guid="e22e4cbc-f744-4375-ac20-65e48775ffd4"
>
<Comment>Transition to indication</Comment>
<PreConditions>
<PreCondition
 Guid="3b54771b-1a55-4eae-a16a-a79cf07e1ad3"
>current in [SupervisionStatusEnum.Normal]</PreCondition><PreCondition
 Guid="fd9eb240-291b-4005-ac35-e21daf9b2cb4"
>t3()</PreCondition></PreConditions>
<Expression>SupervisionStatusEnum.Indication</Expression>
</Case><Case
 Name="No change"
 Guid="67305bba-a360-431d-ba3d-14b53ecf82a9"
>
<Comment>No change occurs</Comment>
<Expression>current</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="300"
 Y="270"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EoASvlWithReleaseSpeed"
 Guid="77ecc733-f484-4d96-a181-ab6ee9d71f6e"
>
<Comment>Indicates whether the target is EOA or Svl and the release speed is greater than zero</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="target"
 Guid="f2c9c8e9-9ca7-4caa-9cd8-47b6557012e5"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="6d255513-7d2e-4650-96fa-53a65a0827a0"
>
<Expression>(MA.EOA.IsEOA( target ) OR MA.SvL.IsSvL( target ))
AND 
ReleaseSpeedMonitoring.ReleaseSpeed &gt; 0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="300"
 Y="330"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="ChangeOfDisplayedTarget"
 Guid="e281ef34-f501-4d05-a3e9-ff3c72dacc14"
>
<Comment>Indicates whether there is a change of displayed target</Comment>
<Cases>
<Case
 Name="Value"
 Guid="0df69ff5-b7cb-474e-9652-739992c3c628"
>
<Expression>Display.MRDT() != PreviousDisplayedTarget</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TriggerSB"
 Guid="df6e2598-4b59-4194-9200-4ebaefe6fa9f"
>
<ReqRef
 Id="49cb1ac1-74b3-4afe-865d-d6b4401719da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad68f73e-69b5-4cd2-b2d4-d1979613b7df"
>
</ReqRef><ReqRef
 Id="b3b7e30c-6bb4-4cd9-8e6d-dfb514676cbd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="868ce0c1-b20c-42f5-b08d-791d71f19a0c"
>
</ReqRef><ReqRef
 Id="e354be4a-8c30-493a-8607-87b51d1ac30c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26edbee6-eb3b-4433-b44c-9c89cbd7c841"
>
</ReqRef><ReqRef
 Id="8cbd8d63-d690-46a3-949e-0118624c0bda"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26d31194-aeb6-4b84-8791-9d4bfe7eb89e"
>
</ReqRef><ReqRef
 Id="f1638f47-91c3-47b5-95c8-929a83f2c89a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="64658cad-2744-4692-ba1a-bc47c6ed3be8"
>
</ReqRef><ReqRef
 Id="6adc672f-bb83-47c8-850c-a7604401a379"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7bc12cd6-f543-46f5-9e60-3433050ce12e"
>
</ReqRef><Comment>Indicates whether the SB command is triggered in TSM.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="e9eac7e7-2a6b-4006-8358-73dd314de0bf"
>
<Expression>t10() OR t11() OR t12()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TriggerEB"
 Guid="1ea940fe-c895-4b46-94d9-4526a4ecc4d8"
>
<ReqRef
 Id="6d9d71c4-5508-47ef-ab3d-c32522306769"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f6ae41f-412b-4929-a832-013a1938acd6"
>
</ReqRef><ReqRef
 Id="a77d9b43-ca07-4b88-99c9-aee4aac78473"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20c123e7-9fee-4726-8184-3566986c5dfe"
>
</ReqRef><ReqRef
 Id="17f454b2-95a3-43f9-9580-b68b6c425861"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e9b635d-6098-44a6-a673-3c4e34af6ee7"
>
</ReqRef><ReqRef
 Id="1230c827-9c0a-4903-80b2-609619e53d02"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f8e9168-4556-4eb1-9de8-48fa7b37d56a"
>
</ReqRef><ReqRef
 Id="184511ec-2ccf-4307-aa0d-64e5b4424e92"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bff359f5-d32f-4522-bcf6-42c04ffc08d9"
>
</ReqRef><ReqRef
 Id="c41cb7ca-ee2d-4af2-841c-855ef592089d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2460a7fe-2e1d-4cf6-afaa-52607156063a"
>
</ReqRef><Comment>Indicates whether the EB command is triggered in TSM.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="0378bfff-7aed-4027-bd00-83603c9959f5"
>
<Expression>TargetSpeedMonitoring.SupervisionStatus.t13()
  OR  
TargetSpeedMonitoring.SupervisionStatus.t14()
  OR  
TargetSpeedMonitoring.SupervisionStatus.t15()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TriggerTCO"
 Guid="76b2c9a3-981b-4682-9f7f-3e4aaf4c3029"
>
<ReqRef
 Id="d394cede-dff2-4764-b72a-288ee8d5617c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2ec8c6a-17ab-4c42-b379-09ae151d76d4"
>
</ReqRef><ReqRef
 Id="d916181f-d7a1-4043-9617-e814b97ae7b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c41ebf67-86f6-494b-b837-cc6536ea7854"
>
</ReqRef><ReqRef
 Id="0342251f-d656-4d41-8ece-bde758fbfadf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c99d6d7d-c484-495c-9c0b-5e2c10cdb44d"
>
</ReqRef><ReqRef
 Id="024d5773-00f6-4c63-83dd-29b47ad8e8ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="65ea7a4e-9680-476d-875c-bbb711e7ced8"
>
</ReqRef><ReqRef
 Id="14be9c17-d5ca-40d8-ae7f-15b68df84b13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2178063b-80a3-473f-a2f2-d59600be4a04"
>
</ReqRef><ReqRef
 Id="01550cfd-1b51-4675-b2c3-6dae7cf1ea0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="07d69809-c6c3-4f81-aad1-3282dd304e4d"
>
</ReqRef><Comment>Indicates whether the TCO command is triggered in TSM.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="cc27d427-6742-4358-9d38-dd727753b3c9"
>
<Expression>TargetSpeedMonitoring.SupervisionStatus.t7() OR
TargetSpeedMonitoring.SupervisionStatus.t8() OR
TargetSpeedMonitoring.SupervisionStatus.t9()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RevokeTCO"
 Guid="05b572d4-b1dd-4331-89da-3621969ce49b"
>
<ReqRef
 Id="c67a3f36-61c7-4021-a4d9-2d9bbe0d08aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="50ec4b4f-5972-427a-b88d-075647403e1b"
>
</ReqRef><ReqRef
 Id="8f56c788-64ae-457b-b163-9023aca9643c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e80ed08-4770-4c2c-bc01-10ce0a13d528"
>
</ReqRef><ReqRef
 Id="5b666657-27b5-46b4-9ee5-194c4319dd17"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9894a27a-2227-431d-9d80-fb606b0d17b9"
>
</ReqRef><ReqRef
 Id="2c0f9388-fcbe-4608-aafb-aad27bc06d88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="944501cf-9d3c-4f97-8a8f-2e79b102b214"
>
</ReqRef><ReqRef
 Id="9e577947-88cc-41b1-857e-6a7b33567ea5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acfbdc7f-4c5b-4522-a191-297c4867fc8c"
>
</ReqRef><ReqRef
 Id="d1eb1a87-f8ea-4a77-bf6c-5d1b53c98b42"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="83b4c042-9064-415f-8684-cee4d35a19e5"
>
</ReqRef><Comment>Indicates whether the TCO command can be revoked in TSM.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="54e02d45-ed55-4840-a7d1-272fa2cec029"
>
<Expression>FORALL target IN TargetsList() | 
(
       r1( target) OR r2( target) OR r3( target) 
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RevokeSB"
 Guid="1c43d3ed-076d-4847-961e-a5235fbc6801"
>
<ReqRef
 Id="c67a3f36-61c7-4021-a4d9-2d9bbe0d08aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a56b5f6-3b2a-4116-9ac7-11b14004d006"
>
</ReqRef><ReqRef
 Id="8f56c788-64ae-457b-b163-9023aca9643c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea0f1270-2417-43a6-bec2-019b0bab5ec7"
>
</ReqRef><ReqRef
 Id="5b666657-27b5-46b4-9ee5-194c4319dd17"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f4d6e0ee-50bf-4a45-bbbf-0abccc23effb"
>
</ReqRef><ReqRef
 Id="2c0f9388-fcbe-4608-aafb-aad27bc06d88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="602c5e43-d172-4f7e-9966-8b8f460523b0"
>
</ReqRef><ReqRef
 Id="9e577947-88cc-41b1-857e-6a7b33567ea5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0106e36a-e88a-4d44-8739-a780a9f86f8f"
>
</ReqRef><ReqRef
 Id="d1eb1a87-f8ea-4a77-bf6c-5d1b53c98b42"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95b2feed-6007-4597-a198-570dea11edbe"
>
</ReqRef><Comment>Indicates whether the SB command can be revoked in TSM.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="121f405f-c0e5-43ae-b1fb-e6b0a6f7f899"
>
<Expression>FORALL aTarget IN TargetsList() |
(
r1(aTarget)
  OR  
r2(aTarget)
  OR  
r3(aTarget)
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RevokeEB"
 Guid="0a142d23-9851-4fc8-8148-4b835ed7acab"
>
<ReqRef
 Id="775d91cf-e44c-4da5-964b-d0cb40ab524b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e733eddc-20d6-4b47-b3c6-de69fb5b72a9"
>
</ReqRef><ReqRef
 Id="95129f07-4e8c-4a36-be22-0671888b69bb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="925339d8-9b74-4c4c-b108-5c10d430f64a"
>
</ReqRef><ReqRef
 Id="c67a3f36-61c7-4021-a4d9-2d9bbe0d08aa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20d04e48-b2bb-4f74-8be3-e18b5a003d5b"
>
</ReqRef><ReqRef
 Id="8f56c788-64ae-457b-b163-9023aca9643c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8cc5a36-81bf-4eae-848b-2697bec660e0"
>
</ReqRef><ReqRef
 Id="5b666657-27b5-46b4-9ee5-194c4319dd17"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="59d4221a-4076-4026-95f5-3b14698c9c9c"
>
</ReqRef><ReqRef
 Id="2c0f9388-fcbe-4608-aafb-aad27bc06d88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d768f9c3-40bc-44ec-a955-b7e300860b81"
>
</ReqRef><ReqRef
 Id="9e577947-88cc-41b1-857e-6a7b33567ea5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5555dee2-0814-4b21-ad02-0724b1874cf1"
>
</ReqRef><ReqRef
 Id="d1eb1a87-f8ea-4a77-bf6c-5d1b53c98b42"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d78c94a1-f470-406c-9ec3-5414bf757749"
>
</ReqRef><Comment>Indicates whether the EB command can be revoked in TSM.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="b616bdfd-fc17-4664-82fa-7cf9d64f0761"
>
<Expression>r0()
  OR  
(
  NationalValues.ReleaseOfEBIsPermitted()
    AND  
  (
  FORALL aTarget IN TargetsList() |
    (
      r1(aTarget)
       OR  
      r2(aTarget)
       OR  
      r3(aTarget)
    )
  )
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Name="FrontEndIsPast"
 Guid="4a286015-daba-402a-aad0-86e2cd6c5705"
>
<ReqRef
 Id="9508c7bf-ae33-4621-a532-ebdc1c7d5fcc"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="21c73526-dea6-4f6a-9dd7-a0d46ab2c8ec"
>
</ReqRef><Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="aTrainFront"
 Guid="0c3afdfd-5d58-42a2-89a0-33207072476a"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aLocation"
 Guid="d8ba376f-b3c7-482c-b05f-afc79017b276"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Distance unknown"
 Guid="c6e9ffca-0d6f-4b5f-a800-0b8bb8113bd5"
>
<PreConditions>
<PreCondition
 Guid="6ebe2e37-65c4-4756-ae47-36b77b3a8c3e"
>aLocation == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Value"
 Guid="254d608a-20dd-4cbd-be2c-dac28fd01cf8"
>
<Expression>TrainPosition.FrontEndPosition( aTrainFront ) &gt; aLocation</Expression>
</Case></Cases>
</Function></Functions>
</NameSpace>
