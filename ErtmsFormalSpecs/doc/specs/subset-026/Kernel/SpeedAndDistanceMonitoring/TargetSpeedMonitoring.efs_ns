<NameSpace
 X="40"
 Y="0"
 Width="100"
 Height="50"
 Name="TargetSpeedMonitoring"
 Guid="cec82dde-4045-4785-a20d-9c2abe607506"
>
<NameSpaces>
<NameSpaceRef
 Name="SupervisionStatus"
 Guid="84e1d314-47ad-4b92-9302-e2f9c5fcc279"
>
</NameSpaceRef></NameSpaces>
<Functions>
<Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="600"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_SBI2"
 Guid="9adc8b34-1349-4001-9841-1dc58a51e7fa"
>
<ReqRef
 Id="88d50002-b123-41cd-8621-3ac7ae0408ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18eccf58-4bba-482d-a51e-33e42b6052c3"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a97bd283-7b7f-46c6-a7f6-c8a1eaa7658a"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e8dc6574-0fa6-4d93-a9c1-a77717adb7b0"
>
</ReqRef><Comment>Provides the distance d_SBI2.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="ef4e3d67-de48-4bd6-bc1c-dee6ea188efb"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="fda9571d-8f47-429b-99a5-c0d911da3501"
>
</Parameter><Parameter
 Type="Boolean"
 Name="NoA_est"
 Guid="f3b01b30-3b40-47e7-bcec-6ea52e210ccc"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EBIvalue unknown"
 Guid="6caabc93-dfe4-42b6-845e-3a05d61c3524"
>
<PreConditions>
<PreCondition
 Guid="a9d4c728-e23f-4e83-884d-b41a5a7f7494"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, NoA_est =&gt; NoA_est ) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="fd21b39b-f325-40fa-a78d-5ff23258542b"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, NoA_est =&gt; NoA_est )  - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="380"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_EBI"
 Guid="70924901-cff4-4895-b502-d0dc03e91af4"
>
<ReqRef
 Id="4edb2d35-ece8-4f2a-b28e-83eec4565ce4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="383c4f07-e250-41e3-a660-52a2e713c8bf"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c04d565-c302-4f16-9424-6d49becc9ee7"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a04e2676-4676-4e30-9b0f-597415e50899"
>
</ReqRef><ReqRef
 Id="a387bd06-4306-436c-ae73-a3faa509f059"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b97e8baf-2816-40e9-81ee-c44ea05b97c7"
>
</ReqRef><Comment>Provides the location of the EBI supervision limit.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="5eef95c0-266d-4452-9c08-920bc4be143f"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="75aff4e1-bc80-4c0c-ae1b-cd01e124a020"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target is EOA"
 Guid="8712ede0-dfe3-4798-ad22-166c9e136030"
>
<PreConditions>
<PreCondition
 Guid="65546442-3705-4e59-b830-1df5a25f1dba"
>MA.EOA.IsEOA(aTarget)</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="1ef44712-63ce-42dc-8422-66cfdb895afb"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget, NoA_est =&gt; False )</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="160"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Vsbi2"
 Guid="9eee0499-6300-469b-bb17-4162898ff2c5"
>
<ReqRef
 Id="5222ef04-36ae-4dc3-a10f-a31139e5b7ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bdda436e-37f8-4975-8276-04a0f256af53"
>
</ReqRef><Comment>Provides the SBI2 speed for the estimated train front end, for display purpose only.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="Dmaxsafefrontend"
 Guid="3cc56ab9-cd50-4bcd-a28a-ce08a5d1992d"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="8443afba-91bf-4019-a2da-f85044de80c5"
>
</Parameter><Parameter
 Type="Boolean"
 Name="NoA_est"
 Guid="0f25fef4-61f0-4fea-8268-a95c3e39b69b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="EBD behind Dmaxsafefrontend"
 Guid="56d1a168-ba05-42f1-892e-04934c9d544b"
>
<Comment>If the full EBD is in rear of the estimated front end, return aTarget&apos;s speed + dV_sbi.
This case protects against performing calculations on a EBD that is behingd the train.</Comment>
<PreConditions>
<PreCondition
 Guid="0d079f8d-23af-45e8-883b-25f7de1f76d3"
>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_TargetForSpeed(
    aSpeed =&gt; aTarget.Speed,
    NoA_est =&gt; False,
    aTarget =&gt; aTarget
) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>aTarget.Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi(aTarget.Speed)</Expression>
</Case><Case
 Name="After EBD(Vtarget)"
 Guid="4284e6e0-7eb5-4a62-8c8f-0cbc28530501"
>
<Comment>If the foot of the EBD is closer than the extra distance at which it is evaluated, just return aTarget&apos;s speed + dV_sbi.</Comment>
<PreConditions>
<PreCondition
 Guid="af655905-681c-467c-8a8c-2b474bb03a43"
>Dmaxsafefrontend + BaseTypes.SpeedToMS(aTarget.Speed) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 + Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Dbe_display ( Vest =&gt; aTarget.Speed, NoA_est =&gt; NoA_est )
 &gt; 
Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_TargetForSpeed(
    aSpeed =&gt; aTarget.Speed,
    NoA_est =&gt; False,
    aTarget =&gt; aTarget
)</PreCondition></PreConditions>
<Expression>aTarget.Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi(aTarget.Speed)</Expression>
</Case><Case
 Name="Before EBD(Vtarget)"
 Guid="98ddd973-1247-4b2e-a164-ff0954d53d7e"
>
<Comment>The standard case: maximum between the EBD (at max safe front end) for aTarget to aTarget&apos;s speed.</Comment>
<Expression>BaseTypes.MaxSpeed(
X1 =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_Target(
    Distance =&gt; Dmaxsafefrontend + 
                BaseTypes.SpeedToMS( Odometry.TrainSpeed() ) * T_bs2 + 
                DecelerationCurves.Dbe_display ( Vest =&gt; Odometry.TrainSpeed(), NoA_est =&gt; NoA_est),
    aTarget =&gt; aTarget
    ) - (DecelerationCurves.Vdelta0() + DecelerationCurves.Vdelta1(NoA_est) + DecelerationCurves.Vdelta2(NoA_est)),
X2=&gt; aTarget.Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi(aTarget.Speed)
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="160"
 Y="490"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Vsbi1"
 Guid="e657ee32-0530-42e6-ae03-e5bdcbca6165"
>
<ReqRef
 Id="678f7208-b36d-410b-8e62-028a110b3c70"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1574bed5-6e12-4e9a-9365-55c902798b81"
>
</ReqRef><Comment>Provides the SBI1 speed for the estimated train front end, for display purpose only.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="Destfront"
 Guid="09ed4c58-e9a7-4b17-a5c6-530136032e82"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No EOA - SR mode"
 Guid="7424996a-cdd7-43b6-8c51-b28c9be8120e"
>
<PreConditions>
<PreCondition
 Guid="fb31b0d5-2e2e-4497-9d5b-424486a3731d"
>Kernel.Mode == ModeEnum.SR</PreCondition><PreCondition
 Guid="7c22b3ae-26dd-4a92-9147-16b66f97b53b"
>NOT Available(Kernel.MA.MA)</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.Infinity</Expression>
</Case><Case
 Name="Before EOA"
 Guid="d4be67a0-0946-485f-9fe2-e631a9aabcfd"
>
<PreConditions>
<PreCondition
 Guid="bde98596-9ac7-46ec-90e4-42cd4ac651a0"
>Destfront + BaseTypes.SpeedToMS(Odometry.TrainSpeed() ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 &lt; MA.EOA.EOA().Location</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_Target(
    Distance =&gt; Destfront + BaseTypes.SpeedToMS(Odometry.TrainSpeed() ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1,
    aTarget =&gt; MA.EOA.EOA()
)</Expression>
</Case><Case
 Name="After EOA"
 Guid="f573b2a7-2c7b-41d0-b632-c6954262beea"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="490"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_SBI1"
 Guid="ff23d7c3-131e-4650-a009-eeb08d75daee"
>
<ReqRef
 Id="977790a8-3eb7-4baf-a99c-78291edbfcd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ecc861e-01b3-4bb3-bcd1-9c617da7ad85"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f29217a7-c46a-4791-b91d-2ab797f2a9ab"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="457a8338-aa65-4170-80a5-cf6b17328492"
>
</ReqRef><ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="de210259-fad0-4a65-a00d-855ce3b4c3ed"
>
</ReqRef><ReqRef
 Id="6d961621-89b1-4280-8bd7-11d37e4b3f6c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c766457-1116-4b85-830b-02452e9051ea"
>
</ReqRef><Comment>Provides the distance d_SBI1.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="62759084-4403-4c1c-b5ee-224fba41c002"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No SBD"
 Guid="6633ad72-15a7-48d6-9009-484c09973fb6"
>
<PreConditions>
<PreCondition
 Guid="8ccbaeff-7580-487f-bed3-10470968e535"
>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_Target(
    Distance =&gt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom),
    aTarget =&gt; MA.EOA.EOA()
) == BaseTypes.Speed.NA</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="SBD below Vest"
 Guid="c7b0d6a3-6808-4360-8991-791ced8b7632"
>
<PreConditions>
<PreCondition
 Guid="9e1abeb5-4d09-483c-8f53-24d85fe1e9da"
>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_TargetForSpeed(
    Vest =&gt; Vest,
    aTarget =&gt; MA.EOA.EOA()
) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="38aef605-7d44-466d-a6ca-9d9140f030b8"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_TargetForSpeed(
    Vest =&gt; Vest,
    aTarget =&gt;MA.EOA.EOA()
)  - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="600"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="EBIvalue"
 Guid="67e0983b-e9ca-4a28-85d3-89dd78057c88"
>
<ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4316e654-30de-4e18-99a9-d124517c3cf8"
>
</ReqRef><ReqRef
 Id="0e91b525-553f-4f68-8970-8bed83e88948"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30ffd978-0025-4805-8727-4144d8e3927e"
>
</ReqRef><ReqRef
 Id="7d29645c-18cf-4661-9edb-e3fcb091bc29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3f0c650-057a-43ec-85d8-8a0df7113e4d"
>
</ReqRef><Comment>Returns the closest distance at which the EBI value is equal to a provided speed (calculated from Vest and aTarget.Speed).</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="d1a8330c-ead3-4993-b78a-39e9eef5f008"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="c9becbd7-3eaf-4f49-9887-db0a41cbd161"
>
</Parameter><Parameter
 Type="Boolean"
 Name="NoA_est"
 Guid="71e6f052-cda0-4e9a-a84c-f3124a6b9a5a"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Unknown for given speed"
 Guid="68852627-8a59-4a40-863f-f157164677e2"
>
<PreConditions>
<PreCondition
 Guid="b5f767c0-d69b-47fb-910e-58b4f9b0ec0b"
>aTarget.Location == BaseTypes.Distance.Infinity
  OR  
Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_TargetForSpeed(
    aTarget=&gt;aTarget,
    aSpeed=&gt;DecelerationCurves.Vbec(
        Vest =&gt; Vest,
        Vtarget =&gt; aTarget.Speed,
        NoA_est =&gt; NoA_est
    ),
    NoA_est=&gt;NoA_est
) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Value"
 Guid="f6c71c64-a1ed-4e52-9eee-68edbd4d2eb7"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.EBD_TargetForSpeed
(
    aTarget =&gt; aTarget,
    aSpeed =&gt; DecelerationCurves.Vbec(
        Vest =&gt; Vest,
        Vtarget =&gt; aTarget.Speed,
        NoA_est =&gt; NoA_est
    ),
    NoA_est =&gt; NoA_est
)
  - Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.Dbec
(
    Vest =&gt; Vest,
    Vtarget =&gt; aTarget.Speed,
    NoA_est =&gt; NoA_est
)</Expression>
</Case></Cases>
</Function><Function
 Type="TargetsCol"
 Cacheable="TRUE"
 Default=""
 X="310"
 Y="490"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EBDTargetsList"
 Guid="080084b1-b2d0-4064-ad42-393f22dcaa17"
>
<Comment>Provides the list of EBD-based targets</Comment>
<Cases>
<Case
 Name="Value"
 Guid="432773f1-009d-4b37-a703-f1ec3389f415"
>
<Expression>FILTER TargetsList() | NOT MA.EOA.IsEOA( X ) USING X</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="110"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Vsbi2_SvL"
 Guid="e2d8cce6-4a1e-435a-8e2b-49faa5eae4af"
>
<Comment>This function adds a layer of protection to the Vsbi2 when it is called by V_SBI_DMI.
This protection is used in the case where V_SBI_DMI is calculated but the train has no MA (the JRU can do this in SR Mode)</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="Dmaxsafefrontend"
 Guid="3c8a6b79-3cf2-4c92-9799-64ee4f57ade5"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SvL available on-board"
 Guid="d092303d-95c0-4962-b454-269f77a194ef"
>
<PreConditions>
<PreCondition
 Guid="fa3471fb-0eac-447a-9a56-daf76ea28288"
>Available (MA.SvL.SvL())</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.Vsbi2(
    Dmaxsafefrontend =&gt; Dmaxsafefrontend,
    aTarget =&gt; MA.SvL.SvL(),
    NoA_est =&gt; False
)</Expression>
</Case><Case
 Name="Otherwise"
 Guid="b0c08bf3-b9dc-4921-9708-0b8bf7c2e0a5"
>
<Expression>BaseTypes.Speed.NA</Expression>
</Case></Cases>
</Function><Function
 Type="TargetStruct"
 Default=""
 X="0"
 Y="220"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MovementEnd"
 Guid="c93b9854-e057-45c5-bbb9-61c77642a1d7"
>
<Comment>Returns the EOA, if applicable. Otherwise returns the end of SR or a target at infinity.</Comment>
<Cases>
<Case
 Name="SR distance"
 Guid="4300d783-67d7-435e-bef2-930fbc546b85"
>
<PreConditions>
<PreCondition
 Guid="d7ba719f-1746-439b-a044-d8afca29cefb"
>Kernel.Mode == ModeEnum.SR</PreCondition></PreConditions>
<Expression>ClosestTarget(
    Target1 =&gt; Kernel.Modes.StaffResponsible.SREndTarget(),
    Target2 =&gt; MA.EOA.EOA()
)</Expression>
</Case><Case
 Name="EOA"
 Guid="c9c02e80-82f9-4ad7-a563-1ac844cdeb9c"
>
<PreConditions>
<PreCondition
 Guid="d2ab17a1-be70-4209-b080-7b9b79663551"
>Available(Kernel.MA.MA)</PreCondition></PreConditions>
<Expression>MA.EOA.EOA()</Expression>
</Case><Case
 Name="Otherwise"
 Guid="7ef2beef-6af6-4e22-9ddb-b9729db49aae"
>
<Expression>TargetStruct{
    Location =&gt; BaseTypes.Distance.Infinity,
    Speed =&gt; 0.0,
    Length =&gt; 0.0
}</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="490"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_I"
 Guid="38af83dd-4335-4ecf-97a6-7ee63ed47cb7"
>
<ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e55787a-fe5d-4ecd-8905-8a3e214547f4"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3a50a6b4-e50a-40c2-91d5-0c9f068e8ac2"
>
</ReqRef><ReqRef
 Id="9d47bdf0-6549-4af1-8d8a-a36c0d505ec3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a818eebb-918c-4958-ad25-c8ca03cd70ad"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ff0e00f4-7eb3-4ed3-8942-36155137286a"
>
</ReqRef><Comment>Provides the distance d_I for a given target and for the current MRSP speed.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="a679d79b-6b64-4bad-8798-bde3ea65acb4"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="a5d96bf6-4309-4789-9c0f-1b38496becaf"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="d_P is at infinity"
 Guid="3080afa9-2915-4de5-ae6c-5e4ba19bb439"
>
<PreConditions>
<PreCondition
 Guid="a633f1b8-f45e-4269-a8fc-4d6a528e587c"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P( aTarget =&gt; aTarget, Vest =&gt; Vest, NoA_est =&gt; False ) == BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="Below P"
 Guid="7f0f2991-3d1c-4e65-b84b-a0f40ec183d1"
>
<PreConditions>
<PreCondition
 Guid="75e42f83-db8f-4d4a-b665-78c3f4d685f3"
>Vest &lt;= Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.P ( Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.InterventionValue_Target( aTarget =&gt; aTarget, Vest =&gt; Vest ) )</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P ( aTarget =&gt; aTarget, Vest =&gt; Vest, NoA_est =&gt; False ) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.T_indication ()</Expression>
</Case><Case
 Name="Above P"
 Guid="c3779180-f639-4e07-bece-71f219661b84"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.InterventionValue_Target(
    aTarget =&gt; aTarget,
    Vest =&gt; Vest )</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="380"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_P"
 Guid="187628d7-1f8a-47f4-8cf0-1989afffce5d"
>
<ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c682b272-9537-479d-83af-da5eeb3f6618"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7b23b91-4c41-4a40-b4f2-a086b6886ba9"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae572195-5cd3-435d-a414-c01e34262f5e"
>
</ReqRef><ReqRef
 Id="b1bf47d0-d27a-404a-af99-2117b6bd616b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac7ab7c9-11d9-4be8-bdd4-8d02cfad1daf"
>
</ReqRef><ReqRef
 Id="0c5eaae4-4be7-4f73-ba4d-93cbbc028872"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae1e67a8-cbcf-4e20-b8cf-c1c31bb2746d"
>
</ReqRef><ReqRef
 Id="06815a39-d3d2-4de8-9e48-9737e56724ca"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="dea0fcd2-d5fd-4547-8d3c-125168eb4ef2"
>
</ReqRef><Comment>Provide the distance d_P fore the given target at the current MRSP speed.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="b58b45bb-a4c8-495c-9a62-6b4931d211f9"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="bc46c78e-bd91-4056-be71-83dc179d5819"
>
</Parameter><Parameter
 Type="Boolean"
 Name="NoA_est"
 Guid="f27462b2-a2b0-4db5-b8f7-ef4ae1d3d98e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target is EOA, SBI1 unknown"
 Guid="01ed4180-15c2-4b52-9992-e2da50549afc"
>
<PreConditions>
<PreCondition
 Guid="57ec7043-b3d1-4a71-83da-5e50c589ce94"
>MA.EOA.IsEOA(aTarget)</PreCondition><PreCondition
 Guid="33092ea4-1ff1-4fd2-8dc7-edac24989de3"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1(Vest) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="EBD based target, distance unknown"
 Guid="2282fd97-9b10-467b-82da-c856cfbb0f92"
>
<PreConditions>
<PreCondition
 Guid="13250617-f02f-44c1-afbf-b1bcac4bd983"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
(
    Vest =&gt; Vest,
    aTarget =&gt; aTarget,
    NoA_est =&gt; NoA_est
) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="GUI inhibited, target is EOA"
 Guid="e10687c2-894c-4b95-a293-4ff0b2eda62d"
>
<PreConditions>
<PreCondition
 Guid="7bbfaff1-7776-42b9-b431-29088d9c7eb3"
>MA.EOA.IsEOA(aTarget)</PreCondition><PreCondition
 Guid="57b898c1-dc92-4e49-9bfa-1e4d65ba059b"
>NOT Kernel.NationalValues.ComputationOfGUIIsEnabled()</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1(Vest) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver</Expression>
</Case><Case
 Name="GUI inhibited, EBD based target"
 Guid="0cb556fd-fe05-402a-8018-62a77936af8d"
>
<PreConditions>
<PreCondition
 Guid="fd0ca0dd-2692-4e25-af6e-b9997a25cd2a"
>NOT Kernel.NationalValues.ComputationOfGUIIsEnabled()</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
(
    Vest =&gt; Vest,
    aTarget =&gt; aTarget,
    NoA_est =&gt; NoA_est
) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver</Expression>
</Case><Case
 Name="GUI enabled, target is EOA"
 Guid="1a97b839-c0ea-49d7-9973-e4f7d632d92a"
>
<PreConditions>
<PreCondition
 Guid="478855f8-d95e-4998-8962-0cd6698978e9"
>MA.EOA.IsEOA(aTarget)</PreCondition></PreConditions>
<Expression>BaseTypes.MinDistance (
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1 ( Vest ) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver,
    X2 =&gt; DistanceForSpeed ( Function =&gt; FUNCTION d : Default.BaseTypes.Distance =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.GUI_Target ( Distance =&gt; d, aTarget =&gt; aTarget ), Speed =&gt; Vest ) )</Expression>
</Case><Case
 Name="GUI enabled, EBD based target"
 Guid="3dbf0857-8f60-4d22-855c-44f3c0dff430"
>
<Expression>BaseTypes.MinDistance (
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2 ( aTarget =&gt; aTarget, Vest =&gt; Vest, NoA_est =&gt; NoA_est ) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_driver,
    X2 =&gt; DistanceForSpeed ( Function =&gt; FUNCTION d : Default.BaseTypes.Distance =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.GUI_Target ( Distance =&gt; d, aTarget =&gt; aTarget ), Speed =&gt; Vest ) )</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="380"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="d_SBI1_Target"
 Guid="be105d94-67b3-40ff-a55a-a2ea097308fe"
>
<Comment>Provides the distance d_SBI1 for the provided target.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="b6ae4883-4a43-4eb6-8b24-168c2b7c4558"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="592d6c81-6feb-4883-8746-b8a936ff31b4"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="5cb998eb-2b28-4a53-a05f-c44196407571"
>
<Expression>DistanceForSpeed ( Function =&gt; FUNCTION d : Default.BaseTypes.Distance =&gt; Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.SBD_Target(
    Distance =&gt; d,
    aTarget =&gt; aTarget
), Speed =&gt; Vest )  - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="600"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="d_W"
 Guid="36d7c7f7-b625-4f05-8c1b-3828081ae828"
>
<ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2878e479-f90b-49e9-b83a-8b8722ac9594"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="793e0d7b-6063-4092-a105-e59137b4c3ed"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa78e1fa-957a-4642-8f6a-f8e962c7aeff"
>
</ReqRef><ReqRef
 Id="489ea7da-1016-4fd4-8a89-0ce129ff23a5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="85d22f0a-301a-41f0-afbf-e87182a36bcf"
>
</ReqRef><ReqRef
 Id="06815a39-d3d2-4de8-9e48-9737e56724ca"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="7c3d1b66-1259-4f07-920a-3fc17480f768"
>
</ReqRef><Comment>Provides the distance d_W for the given target.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="858de658-9932-4f69-bf0c-a532d954bb11"
>
</Parameter><Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="b411cfd0-85d0-4d65-8c4f-51a05f00f016"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Supervised target is the EOA, SBI1 unknown"
 Guid="ef872010-6c93-46ef-8c75-fd147510ab27"
>
<PreConditions>
<PreCondition
 Guid="4144dff3-a0e4-411f-840a-ec1a996924f8"
>MA.EOA.IsEOA(aTarget)</PreCondition><PreCondition
 Guid="2ad343fe-edd6-4f2e-bec1-dc1cc5f3a2dd"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1( Vest ) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Supervised target is the EOA"
 Guid="56f5504f-4623-45f1-a42e-25eaf3e5ec0d"
>
<PreConditions>
<PreCondition
 Guid="b85276fe-720f-482b-8dab-dd3ab55633c9"
>MA.EOA.IsEOA(aTarget)</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI1( Vest ) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_warning</Expression>
</Case><Case
 Name="Supervised target is an EBD based target, SBI2 unknown"
 Guid="da9ceb61-3e60-4085-b503-6976af46efda"
>
<PreConditions>
<PreCondition
 Guid="3cd74d09-8677-4423-a4c7-ceb4e55b9e9c"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
(
    Vest =&gt; Vest,
    aTarget =&gt; aTarget,
    NoA_est =&gt; False
) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Supervised target is an EBD based target"
 Guid="b013cd22-029f-4431-b065-367593d90bc6"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_SBI2
(
    Vest =&gt; Vest,
    aTarget =&gt; aTarget,
    NoA_est =&gt; False
) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_warning</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="490"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InterventionValue_Target"
 Guid="9ccc86b6-ab05-4408-ae56-905406d3841e"
>
<ReqRef
 Id="9d47bdf0-6549-4af1-8d8a-a36c0d505ec3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b3ddc6c-aa1f-48e5-92b9-b31117e97a30"
>
</ReqRef><Comment>Provides the location corresponding to the intervention location for the provided speed and target.</Comment>
<Parameters>
<Parameter
 Type="TargetStruct"
 Name="aTarget"
 Guid="c02d7eed-d37a-432d-8aae-271c683cfd82"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="Vest"
 Guid="b50aac75-365c-443a-96f9-ea95ded78096"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Target at infinity"
 Guid="cbc9271d-e266-4dbe-a4a9-01035e5f3123"
>
<PreConditions>
<PreCondition
 Guid="bb26ef79-e698-4367-9275-57b268328826"
>aTarget.Location == BaseTypes.Distance.Infinity</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Infinity</Expression>
</Case><Case
 Name="Value"
 Guid="0a1cc5d7-b391-4c01-9afc-d402128dcef7"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_P ( aTarget =&gt; aTarget, Vest =&gt; Vest, NoA_est =&gt; False ) - BaseTypes.SpeedToMS ( Vest ) * Kernel.SpeedAndDistanceMonitoring.DecelerationCurves.T_indication ()</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="20"
 Y="490"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InitializeTimeIntervals"
 Guid="5dc3458e-4b55-484a-973e-c7cbf3a2bae0"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eee29c97-85ab-4802-9542-0f2a129f7e06"
>
</ReqRef><ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d25ea64a-fac3-417f-a6ce-a9ffa1922f74"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0711f60-19ec-43a0-8553-56ba9cd8770c"
>
</ReqRef><Comment>Initialize the time intervals for the service brake depending of whether the feedback is available.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitializeTimeIntervals"
 Guid="eb53f9d2-158f-4358-8084-af8988bbfdf3"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="SBCommandAvailable_SBFeedbackNotAvailable"
 Guid="5e3ecd09-c5c3-428a-9afc-9d32efe08da5"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c9e822c-1b6e-46ea-8601-2566e40a3bc1"
>
</ReqRef><Comment>If the feedback is not available, both the T_bs variables are given the same constant value.</Comment>
<PreConditions>
<PreCondition
 Guid="c14a5ddc-ef60-4e6e-99df-4784e3561cf5"
>TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition><PreCondition
 Guid="6e82e8b9-b84f-477e-9588-10ef63c83133"
>NOT TrainData.TrainData.Value.SBFeedbackIsImplemented</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ec39334f-816b-488a-bb1e-4d56f2c8b2f2"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 &lt;- TrainData.BrakingParameters.T_bs()</Action><Action
 Guid="276948b7-fb73-404d-8430-160712fbc9ce"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 &lt;- TrainData.BrakingParameters.T_bs()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="SBCommandAvailable_SBFeedbackAvailable"
 Guid="bff0dfe2-30fa-44ef-9f34-c61122055bac"
>
<ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="775dcbb3-caf7-42f9-924a-7cd5b784bd29"
>
</ReqRef><Comment>If the service brake feedback is available, the T_bs are both set to the same initial value, which will be decreased after the brakes are triggered.</Comment>
<PreConditions>
<PreCondition
 Guid="a9a8135c-652f-4435-977a-b2ca399a5d48"
>TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition><PreCondition
 Guid="a472e5a3-7b3c-4a5e-a610-fb187e614c1a"
>TrainData.TrainData.Value.SBFeedbackIsImplemented</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9b28d836-1ed0-415b-9678-5c3beec361d5"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 &lt;- TrainData.BrakingParameters.T_bs()</Action><Action
 Guid="877d64de-96f2-4618-8ae7-988535b274d7"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 &lt;- TrainData.BrakingParameters.T_bs()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="SBCommandNotAvailable"
 Guid="2148a743-96cc-4e01-9647-9c28d8944e1c"
>
<ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bac524f3-c36a-4466-a08a-d0815198a43d"
>
</ReqRef><Comment>If the service brake command is not available, set the time intervals to 0 by default.</Comment>
<PreConditions>
<PreCondition
 Guid="041c65ef-2817-4558-9639-1609416c920f"
>NOT TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition></PreConditions>
<Actions>
<Action
 Guid="21600fea-3d2a-4a8c-9139-88a840203244"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs1 &lt;- 0.0</Action><Action
 Guid="8769497b-45a7-46aa-b863-da689689dad5"
>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.T_bs2 &lt;- 0.0</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="60"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_bs1"
 Guid="f967f8e6-aab3-4c66-892c-08bf18b8fde8"
>
<ReqRef
 Id="977790a8-3eb7-4baf-a99c-78291edbfcd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f35f166-c40b-4574-a5de-a2385cc839fc"
>
</ReqRef><ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="095ec7f6-e9ac-4279-9266-55c3e8647a72"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd090715-e366-4c25-b365-0a44ada6be09"
>
</ReqRef><Comment>Time interval used to compute d_SBI1.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="170"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_bs2"
 Guid="1561b05c-905c-4271-846f-279dc012082d"
>
<ReqRef
 Id="88d50002-b123-41cd-8621-3ac7ae0408ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66741b3b-0687-4ac2-9e62-3241d2df9e62"
>
</ReqRef><ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="348adf89-7166-43fe-8105-f77d17486428"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0c8ca36f-3aa7-4f17-9fea-29c6d0237618"
>
</ReqRef><Comment>Time interval used to compute d_SBI2.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="4.0"
 VariableMode="Internal"
 X="280"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_driver"
 Guid="9bfce9f1-4d0b-4c74-92b8-bf8dc511eefa"
>
<ReqRef
 Id="c7311fc7-ae05-436b-89b3-0573bdb52921"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e8ca29d-6f8c-4172-a3e5-63d6263a2105"
>
</ReqRef><ReqRef
 Id="edd3e5bf-072e-4f5c-a2d2-0852b0d7d409"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9182221-5bdb-48ac-b8ff-6019f7b15cf9"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d538a7d5-d1db-44fa-a3a9-b5cd6bc4b89b"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44ce6012-e3bb-4afb-8e6b-b4e603f399cf"
>
</ReqRef><Comment>Driver reaction time between Permitted speed supervision limit and SBI.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="2.0"
 VariableMode="Internal"
 X="390"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_warning"
 Guid="657ed886-eeba-4c46-83e6-f4fe255fffbf"
>
<ReqRef
 Id="a61536b0-4469-4cd7-9f95-560c3bd85f7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f501ace-b6f0-4cc4-aa04-ed3a9fa090fd"
>
</ReqRef><ReqRef
 Id="6867c1d9-cb85-4cc7-9083-5b893166fce7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f06ed6bc-c4fb-479e-9d3c-e831458c0d43"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19dd81dd-1282-4320-b6ae-f0f1983c2604"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="14341fa2-80ec-4bd9-817d-e92c7609c003"
>
</ReqRef><Comment>Time between Warning supervision limit and SBI.</Comment>
</Variable><Variable
 Type="TargetStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="530"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="PreviousDisplayedTarget"
 Guid="45d8592f-820f-4b5e-b55c-5336e678b7ab"
>
<ReqRef
 Id="8f56c788-64ae-457b-b163-9023aca9643c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea49f212-2398-461e-8319-22d8f049a2f2"
>
</ReqRef><ReqRef
 Id="9e577947-88cc-41b1-857e-6a7b33567ea5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b0ed04b8-f360-4a53-9eab-47b5e513bc11"
>
</ReqRef><Comment>Keeps track of the previous displayed target for the revokation condition r2 in Target speed monitoring, Indication status.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 X="20"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InitializeTimeIntervals"
 Guid="0aafaa9d-cd83-442b-9deb-15fcc3ea5a28"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4f0fa64-da3f-476a-a5fe-fe863eb3aca9"
>
</ReqRef><ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40f63c17-fdaa-47ce-ac67-da4234a2071c"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a26a68a-322e-4a14-ab28-49ba215e240d"
>
</ReqRef><Comment>Time intervals are modified when considering service brake feedback.
When the service brake feedback is not implemented, make sure the time intervals are correctly setup</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize time intervals"
 Guid="f8d98951-9145-47da-bf99-06d39c42a2f8"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="8c247c0b-5a5e-44e8-a8c1-49273a07c3b1"
>InitializeTimeIntervals()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
