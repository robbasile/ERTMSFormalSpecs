<NameSpace
 X="340"
 Y="10"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Name="MA"
 Guid="0f25952e-aa3a-4ee6-ba2c-ecc98c278777"
>
<NameSpaces>
<NameSpaceRef
 Name="ModeProfile"
 Guid="78bbf16d-77a9-451f-865c-7232182d21ec"
>
</NameSpaceRef><NameSpaceRef
 Name="MARequest"
 Guid="8e966d15-e7c8-49df-8142-00a09f0d069f"
>
</NameSpaceRef><NameSpaceRef
 Name="MATimers"
 Guid="6c9779cd-cf72-4597-9dc0-b775886c5fe4"
>
</NameSpaceRef><NameSpaceRef
 Name="EOA"
 Guid="492ced62-33bd-47a7-8d1e-c5e180ba6fa1"
>
</NameSpaceRef><NameSpaceRef
 Name="SvL"
 Guid="1d8f97c1-998e-4edd-b527-3ecbeb2b800e"
>
</NameSpaceRef><NameSpaceRef
 Name="Sections"
 Guid="1478a194-b022-4fde-9d9a-8c1f1a085057"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="540"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Verified="TRUE"
 Name="MAStruct"
 Guid="8df498d0-3616-49da-b2a7-9db1bea7f1c8"
>
<ReqRef
 Id="65a9a63b-024f-499e-9066-6149846269f5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="edccd2bb-fec6-4b8b-af7e-2e71e682514e"
>
</ReqRef><ReqRef
 Id="cc872c83-b7ef-45da-b511-6237904b6423"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="494999d8-ee8d-4548-a437-2a387cf0550c"
>
</ReqRef><ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad55e9eb-97d0-4c95-b79d-f134ce82a0f3"
>
<Comment>EOA is computed based on the sections defined in the MA (see function EOA)</Comment>
</ReqRef><ReqRef
 Id="82d5bd61-4bef-4cfb-a68a-312446d79df1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f86c00f8-e1e7-4ec3-9d8a-502524b6b533"
>
</ReqRef><ReqRef
 Id="e63ca8af-18f8-432f-9c22-f989952a9561"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3a19dfd-675a-47a7-a05e-124f6fa87627"
>
</ReqRef><ReqRef
 Id="588756eb-1786-4776-86ae-3aaa296881a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1ef48ef-ea46-416a-8690-ce4920df0402"
>
</ReqRef><Comment>Represents the Movement Authority of the train</Comment>
<StructureElement
 TypeName="BaseTypes.Speed"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="TargetSpeed"
 Guid="822a4190-32bb-49a2-b2a4-791f898eb763"
>
<ReqRef
 Id="9d444c1e-f8ce-44ed-adb0-f81c08abac75"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="936c8093-d42f-4ff8-b183-3dfae95ad59c"
>
<Comment>In this model, there is no distinction between EOA and LOA</Comment>
</ReqRef><ReqRef
 Id="03cd0321-724a-4dbf-ae18-99839cda8019"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9461219e-bdcd-4ea7-abd7-6d6994d58c3d"
>
</ReqRef><ReqRef
 Id="6daa6231-e601-4f4d-80cc-590024cf24ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fa9e005e-d4c8-4e08-80cc-1e312307064d"
>
</ReqRef><Comment>The target speed represents the permitted speed at the EOA.</Comment>
</StructureElement><StructureElement
 TypeName="Sections.SectionsCol"
 Default="[]"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Sections"
 Guid="92fb792b-224a-4e77-9363-39a46ceb3b79"
>
<ReqRef
 Id="cfc4df94-c1ee-4d42-b8ab-44f37ef4a6ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3c67ee5-da42-41e7-9c2c-518d605f7070"
>
</ReqRef><ReqRef
 Id="173067d8-3484-4ec9-81e4-7275c3374764"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e44cc5f0-6ddb-44ee-b37d-f60aed1ee7cd"
>
</ReqRef><Comment>Represents the sections of the MA.</Comment>
</StructureElement><StructureElement
 TypeName="EndSectionStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="EndSection"
 Guid="13876bf8-6e84-4ade-bd66-f668c1e7ed94"
>
<ReqRef
 Id="cfc4df94-c1ee-4d42-b8ab-44f37ef4a6ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="37902c55-a2aa-4782-b696-10ee844af696"
>
</ReqRef><ReqRef
 Id="21d0760f-a057-466a-bdf0-41f316e4721c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="075e3863-3e3e-4ccc-86eb-cefe3ffa1bb5"
>
</ReqRef><Comment>Represents the end section of this MA.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Time"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="TargetSpeedTimeOut"
 Guid="c05d7ceb-20bd-46df-9df9-9b923de8dce9"
>
<ReqRef
 Id="9d444c1e-f8ce-44ed-adb0-f81c08abac75"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f533b353-d451-400a-8dd2-5abae051378a"
>
</ReqRef><ReqRef
 Id="a774525d-0597-4d00-a2f5-3148dcf359bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e1ccf55-ac6f-46d9-ba7d-2d3cf8103f1c"
>
</ReqRef><Comment>The time-out associated to the target speed, if any.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="540"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="EndSectionStruct"
 Guid="a413947b-e66e-4566-b7e6-c0cf63e5a079"
>
<ReqRef
 Id="cfc4df94-c1ee-4d42-b8ab-44f37ef4a6ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4970a73a-1da7-4bc8-954f-4925e2d13724"
>
</ReqRef><ReqRef
 Id="21d0760f-a057-466a-bdf0-41f316e4721c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be8d438c-ce95-492f-bddb-997f4f6ae273"
>
</ReqRef><ReqRef
 Id="588756eb-1786-4776-86ae-3aaa296881a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94c96f01-8bbd-48d9-84d8-c56c227e7ca7"
>
</ReqRef><Comment>Stores all the information relative to the final section of the MA</Comment>
<StructureElement
 TypeName="MATimers.TimeOutStruct"
 Default="EMPTY"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="EndSectionTimeOut"
 Guid="2d6af58d-dd8c-472d-9572-ab7f1a8b21f2"
>
<ReqRef
 Id="5fa277c4-02a9-47ea-b645-f1473c0617ae"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="abb3e391-8159-4201-b085-365fa15f7ebf"
>
</ReqRef><ReqRef
 Id="8d09ca53-1394-4843-b8d6-829a86336ca3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d4a0928c-20e3-4ff0-a01e-6332c2d4cc8c"
>
</ReqRef><ReqRef
 Id="86b0e1e8-53c9-4a9f-9b60-1863f04939ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60c65f97-9c1a-4bca-9c17-a18e2afa8ba1"
>
</ReqRef><Comment>Represents the end section time-out, if any.</Comment>
</StructureElement><StructureElement
 TypeName="SvL.DangerPointStruct"
 Default="EMPTY"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="DangerPoint"
 Guid="8214d334-19c9-42f7-92ef-8fdd2829cd53"
>
<ReqRef
 Id="48fba67a-8f19-4715-92e7-aea531d01881"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44ac511f-732d-4ab6-ab87-44e92ca647ec"
>
</ReqRef><ReqRef
 Id="53a5391c-db43-4e26-95c4-26b8316d77a8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92727fe6-13d6-4976-b57c-f69074594a97"
>
</ReqRef><ReqRef
 Id="30dda18a-b11e-4bbe-a761-8fe4113de2e5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c0ab255-bf75-406b-9d3b-cec018d96ba1"
>
</ReqRef><Comment>Represents a location beyond the EOA that can be reached by the front end of the train without a risk for a hazardous situation.</Comment>
</StructureElement><StructureElement
 TypeName="SvL.OverlapStruct"
 Default="EMPTY"
 Mode="Internal"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Overlap"
 Guid="b93ed011-6182-442b-9c6b-dd405f79deca"
>
<ReqRef
 Id="7fa6af9c-023d-474c-a0f7-8f72181a8fee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b9c990f-17d1-4914-b45b-f667d4516013"
>
</ReqRef><ReqRef
 Id="4777cb40-cb40-4257-8324-c515327a0152"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="593f76fa-7c77-452d-8a35-f3f01e98fd7c"
>
</ReqRef><ReqRef
 Id="b3845192-4c2b-4425-bdb0-c0a568c940ea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8fd8e6bd-205b-443d-bf8a-7c515f2b4eb5"
>
</ReqRef><Comment>Location beyond the danger point that can be reached by the front end of the train without a risk for a hazardous situation.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="680"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MaShorteningHandlerStruct"
 Guid="cb017d60-1896-46d2-84be-837577197514"
>
<ReqRef
 Id="d8e470e4-30ad-41be-8c8d-9828fc218d73"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b92e3a7f-2314-423a-b172-57a7387edfe4"
>
</ReqRef><ReqRef
 Id="0c39084a-19e8-4784-962f-8dd4ba8a2aee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67c5844c-2587-487e-a1a0-437d5be4dbf5"
>
</ReqRef><Comment>Used to store the information about the previous MA, when a new MA is received. Allows to verify if the MA was shortened.

IsSvL indicates if the previous End of Movement Authority was an SvL (to detect the case of MA shortening regardless of the SvL Location).

Location stores the previous End of Movement Authority location.</Comment>
<StructureElement
 TypeName="BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Location"
 Guid="3b031a74-bd3f-4780-957d-90c57a29cfbe"
>
<Comment>The location of the previous SvL (is &quot;Unknown&quot; if there was none)</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="IsSvL"
 Guid="18c808fe-83c5-4bd0-86bd-a48d90be00d7"
>
<Comment>Records whether the previous MA was supervising a SvL or has a LOA</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="610"
 Y="290"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SignallingRelatedSRStruct"
 Guid="0c84b253-952d-4564-a54b-1b1ab882ae29"
>
<ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="45f287e9-67df-4d6b-b1d4-173ccab6e473"
>
</ReqRef><ReqRef
 Id="5f3132e8-fb36-491a-b7e8-7e237d362383"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bca8be52-5a77-4332-a27d-ffab6ba55efc"
>
</ReqRef><ReqRef
 Id="13aed33d-db2d-43fb-a5bf-be02674ae095"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb2a3794-e141-4e98-a752-ddd6e2dd413b"
>
</ReqRef><ReqRef
 Id="abebe747-9cb7-4549-9f60-efbcf8ae9583"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="225abe71-66b8-4401-8fea-0340ec8b28e6"
>
</ReqRef><ReqRef
 Id="3cce6f09-5a15-4d2f-b994-461d00a54711"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68a9dddf-c7ea-480d-ac3a-f7dd195496a3"
>
</ReqRef><ReqRef
 Id="e8d016fe-f419-450e-a7e5-261b1035e3cc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d07ee7e-bfdc-4062-aed4-828df99b09d7"
>
</ReqRef><Comment>Represents the signalling related speed restriction.</Comment>
<StructureElement
 TypeName="BaseTypes.Speed"
 Default="BaseTypes.Speed.MaxSpeed"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
 Guid="e6b96b03-f514-4e9d-8824-7b18c46f21a1"
>
<Comment>The value of the signalling related speed restriction.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Distance"
 Default="BaseTypes.Distance.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="End"
 Guid="5eda04d0-93e3-4567-a9e6-994f3d6d565f"
>
<Comment>The distance until which the signalling related speed restriction is valid, if any.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Distance"
 Default="BaseTypes.Distance.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="Start"
 Guid="ac92a40a-b664-4a4a-8ac3-cfa0f9363554"
>
<Comment>The distance at which the signalling related speed restriction becomes valid, if any. Needed for infill.</Comment>
</StructureElement><StructureElement
 TypeName="DataStateEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Validity"
 Guid="95eb2cfc-0d01-4c95-bb3b-deb5de520cf4"
>
<Comment>Used to tell whether information is valid or not. Always valid for the 
non-infill SR. Validity of infill SR depends on whether infill SR was received or not.</Comment>
</StructureElement></Structure></Structures>
<Functions>
<Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1"
 Default=""
 X="240"
 Y="310"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ConvertSectionLvl2or3_to_SectionLvl1"
 Guid="ceb5e609-8c37-4294-9586-4a69e0070fc4"
>
<ReqRef
 Id="3ea65cb2-f46e-4d0e-885e-8ae8c75b4a06"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e555afdc-c196-4df7-b252-268c0e464fa1"
>
</ReqRef><ReqRef
 Id="b796c06e-efd9-4a35-abfc-9983a477fc35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3cc6d5df-2fd0-42b7-8f0d-ad1b2ff9cf85"
>
</ReqRef><Comment>Creates an EFSSection from a section received from a balise of RBC (level 1).</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1"
 Name="SectionLvl2or3"
 Guid="4d27be20-b76b-44c0-818f-80dd2b0de1dd"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="636795e1-325d-4997-9856-6e67e4d53efe"
>
<Expression>Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
{
    L_SECTION =&gt; SectionLvl2or3.L_SECTION,
    Q_SECTIONTIMER =&gt; SectionLvl2or3.Q_SECTIONTIMER,
    T_SECTIONTIMER =&gt; SectionLvl2or3.T_SECTIONTIMER,
    D_SECTIONTIMERSTOPLOC =&gt; SectionLvl2or3.D_SECTIONTIMERSTOPLOC
}</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="240"
 Y="440"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="SignallingRelatedSpeedRestrictions"
 Guid="d6a64001-c3fe-44e8-9434-132f86949851"
>
<ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24bbf4ac-19d9-4c24-bd69-862fdf5fbfc0"
>
</ReqRef><ReqRef
 Id="bfa09769-fb03-456f-b92b-14ab4cf7977b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b30f9b7b-ec01-49f6-b5b0-99817d4717a1"
>
</ReqRef><ReqRef
 Id="b2a3ff3a-3f41-4dde-9bf8-ee649ce14d86"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bd5f0b6c-32b6-40d1-ac01-9aff2971e8a6"
>
</ReqRef><ReqRef
 Id="40e65850-da07-4c7a-bd9f-43c30f8a20a5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d81c479c-4f78-4832-95cd-b273f3c38560"
>
</ReqRef><ReqRef
 Id="e8d016fe-f419-450e-a7e5-261b1035e3cc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="83093f8f-42af-4fd7-9988-a601ff1666c5"
>
</ReqRef><ReqRef
 Id="13aed33d-db2d-43fb-a5bf-be02674ae095"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc9fb826-7a46-465a-ab32-6de7e961b836"
>
</ReqRef><ReqRef
 Id="5f3132e8-fb36-491a-b7e8-7e237d362383"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="614817c3-5e06-4b9b-b675-8ad015bb3aef"
>
</ReqRef><ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="422aec71-279c-4648-9b55-769667008431"
>
</ReqRef><ReqRef
 Id="6d40cd91-a858-435e-83bf-8b5fd647e114"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d7ed19a-efaf-448c-8621-d5e214252211"
>
</ReqRef><Comment>Provides the speed profile due to signalling related speed restrictions. Only applicable for level 1.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="d"
 Guid="819fd0de-4226-49f5-91e0-88d9da2f6949"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Level 1, End unknown"
 Guid="2e6b1009-f980-487a-849d-ebb6b37ddf03"
>
<PreConditions>
<PreCondition
 Guid="882879c9-2057-45f9-afa8-3b11d5abd62a"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition><PreCondition
 Guid="10848d71-717a-4061-bb58-ba05a566ffb4"
>SignallingRelatedSR.End == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>SignallingRelatedSR.Value</Expression>
</Case><Case
 Name="Level 1, before speed restriction end"
 Guid="7744e1bb-1000-449a-ae1c-f49bb21d3391"
>
<PreConditions>
<PreCondition
 Guid="d2bff3e6-038c-4b12-badc-217bacb1cdff"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition><PreCondition
 Guid="f951c6ec-5896-44d3-b028-65064fc48a8a"
>d &lt; SignallingRelatedSR.End</PreCondition></PreConditions>
<Expression>SignallingRelatedSR.Value</Expression>
</Case><Case
 Name="Level 1, before infill speed restriction end"
 Guid="916dc878-3012-4e92-85c1-21b710b25f0e"
>
<PreConditions>
<PreCondition
 Guid="6a4e3e80-2caa-4d02-a69f-8c50209e6f32"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition><PreCondition
 Guid="9179237b-50f6-4b76-92f4-6c7847fd4d1b"
>InfillSignallingRelatedSR.Validity == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="9124a4c6-fe4a-4eee-98dc-e1104b246f88"
>d &lt; InfillSignallingRelatedSR.End</PreCondition></PreConditions>
<Expression>InfillSignallingRelatedSR.Value</Expression>
</Case><Case
 Name="Otherwise"
 Guid="b5339113-60a7-4cec-9e60-c156ca255ef5"
>
<Expression>BaseTypes.Speed.MaxSpeed</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="130"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SpeedRestrictions"
 Guid="e2bd1235-36f0-49b6-aad4-b5149860a234"
>
<ReqRef
 Id="02854410-9ddb-4b94-993c-b26498a498bf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c9d89b39-4203-4dda-a11a-939c57050fae"
>
</ReqRef><ReqRef
 Id="50a11b55-dc19-4427-b0fd-d81384417f79"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="778e779f-ea18-4500-85c8-582d82fbed36"
>
</ReqRef><ReqRef
 Id="68cdb140-3c4e-4bdc-a122-88e2b2e22f7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94298eb1-0458-4526-ae4c-a02d03d1301d"
>
</ReqRef><ReqRef
 Id="ca1c598d-015e-44b0-9659-1a4c483f22b5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c3e88d1-0c30-47b1-b54e-4f263dc99927"
>
</ReqRef><ReqRef
 Id="78901f0f-a70f-415d-8d57-e5156f7206d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="76dc6a7d-a019-48e4-bb17-9c3a8e5afb0b"
>
</ReqRef><Comment>Returns the maximum speed permitted by the MA</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="Distance"
 Guid="cafdef69-776b-45aa-85cf-c27fd8208974"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No MA available"
 Guid="116fae04-3eb4-4678-9caa-e8684037bc76"
>
<PreConditions>
<PreCondition
 Guid="765c0674-3659-40da-b982-66fd686466df"
>Kernel.MA.MA == EMPTY</PreCondition></PreConditions>
<Expression>0.0</Expression>
</Case><Case
 Name="Before end of movement authority"
 Guid="0abfbd82-eaf8-4217-ba9d-7c277c70b2c5"
>
<PreConditions>
<PreCondition
 Guid="61aaf608-32c4-4026-a55c-a9828eaacc69"
>Distance &lt; EOA.EOA().Location</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.MaxSpeed</Expression>
</Case><Case
 Name="After LOA"
 Guid="4f751946-7630-41bb-847e-8d355511ed87"
>
<PreConditions>
<PreCondition
 Guid="22b40574-308e-4350-b8cc-9b21682fd64e"
>Kernel.MA.MA.TargetSpeed != 0.0</PreCondition><PreCondition
 Guid="788808e3-5b2d-4dcf-a6ba-96961f01f422"
>EOA.EOA().Location &lt;= Distance</PreCondition></PreConditions>
<Expression>Kernel.MA.MA.TargetSpeed</Expression>
</Case><Case
 Name="Otherwise"
 Guid="09116a4e-beda-460c-9d94-5cb177833416"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="20"
 Y="370"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CreateReleaseSpeed"
 Guid="ce1ae19d-f94e-447b-ab55-405ef7ed72a6"
>
<ReqRef
 Id="530b6e5d-9ed2-460a-bc4f-9e158ad1c0b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="504a91b9-ef17-4281-8cc7-87c6fc58bb8f"
>
</ReqRef><ReqRef
 Id="646fea43-0ea3-400a-89a4-02268d193745"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d92acf09-fdc3-431e-892f-a7eba845a804"
>
</ReqRef><ReqRef
 Id="76f867cd-faea-4765-a0a3-22abe280a92c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfba465f-04f7-44f3-9f64-9cb5a77cdf39"
>
</ReqRef><ReqRef
 Id="fd8ad766-e2af-4dec-8c00-61b7e5d9b49c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="215e2d91-c545-47d5-83ee-b9a859ca88f7"
>
</ReqRef><Comment>Gets the release speed from the MA packet</Comment>
<Parameters>
<Parameter
 Type="MessageTypes.Speed"
 Name="Speed"
 Guid="405a9c49-28dd-4720-9656-e61045e6681f"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="ComputeOnBoard"
 Guid="d55c95f3-db74-4443-ad3c-7a5b9b0c7ea2"
>
<PreConditions>
<PreCondition
 Guid="e9c98b36-1925-434e-896b-fa4ce03dc5a0"
>Speed == 126</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.ComputeReleaseSpeedOnBoard</Expression>
</Case><Case
 Name="UseNationalValue"
 Guid="d9d1591d-d96e-4b2d-b480-6d89d9bb75d4"
>
<PreConditions>
<PreCondition
 Guid="a980e397-a795-40b4-b011-0c1cb04f1c00"
>Speed == 127</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.UseNV</Expression>
</Case><Case
 Name="ReleaseSpeedValue"
 Guid="9b709fe8-17d7-413b-b63a-bf07d8f08c8c"
>
<Expression>MessageTypes.SpeedResolution ( Speed, 5.0 )</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Length"
 Default=""
 X="20"
 Y="310"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AbsoluteDistance"
 Guid="9d38e360-bd00-4e60-a515-b33be10fff5f"
>
<ReqRef
 Id="4f9e6037-be46-477d-bbca-3122bd9ad940"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18f755e4-1844-4280-8e91-1f496c122858"
>
</ReqRef><Comment>Provides the absolute distance (from the LRBG) to the beginning of the given section.</Comment>
<Parameters>
<Parameter
 Type="Sections.SectionStruct"
 Name="aSection"
 Guid="77265b1e-4cf7-4df7-a1d7-5d3621b225c0"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="4f07055e-9131-4099-bcbf-9f8192604aeb"
>
<Expression>SUM
    Kernel.MA.MA.Sections |
        Before ( ExpectedFirst =&gt; X, ExpectedSecond =&gt; aSection, Collection =&gt; Kernel.MA.MA.Sections)
USING X IN
    BaseTypes.LengthToDistance ( X.Length )</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Default=""
 X="240"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ConvertMALvl2or3_to_MALvl1"
 Guid="047048de-91c5-4e60-9985-a11e4627ed1d"
>
<ReqRef
 Id="9f918f6f-f470-4613-ab97-374dc595ce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04d40134-05ca-4612-b046-7a683b13f916"
>
</ReqRef><ReqRef
 Id="e63ca8af-18f8-432f-9c22-f989952a9561"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a36361aa-5603-4d2c-9d48-20b02576001e"
>
</ReqRef><Comment>Converts a received level 2 or 3 MA into a level 1 MA so that they can all be handled by the same procedures</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message"
 Name="MALvl2or3"
 Guid="bb0632db-8fbf-403e-b539-c8f01d1e7de4"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="c83bf597-ce6b-4f10-ac08-cf2ed5729c4f"
>
<Expression>Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
{
    NID_PACKET =&gt; MALvl2or3.NID_PACKET,
    Q_DIR =&gt; MALvl2or3.Q_DIR,
    L_PACKET =&gt; MALvl2or3.L_PACKET,
    Q_SCALE =&gt; MALvl2or3.Q_SCALE,
    V_MAIN =&gt; 0,
    V_LOA =&gt; MALvl2or3.V_LOA,
    T_LOA =&gt; MALvl2or3.T_LOA,
    N_ITER =&gt; MALvl2or3.N_ITER,
    Sequence1 =&gt; MAP MALvl2or3.Sequence1 USING X IN Kernel.MA.ConvertSectionLvl2or3_to_SectionLvl1 ( X ),
    L_ENDSECTION =&gt; MALvl2or3.L_ENDSECTION,
    Q_SECTIONTIMER =&gt; MALvl2or3.Q_SECTIONTIMER,
    T_SECTIONTIMER =&gt; MALvl2or3.T_SECTIONTIMER,
    D_SECTIONTIMERSTOPLOC =&gt; MALvl2or3.D_SECTIONTIMERSTOPLOC,
    Q_ENDTIMER =&gt; MALvl2or3.Q_ENDTIMER,
    T_ENDTIMER =&gt; MALvl2or3.T_ENDTIMER,
    D_ENDTIMERSTARTLOC =&gt; MALvl2or3.D_ENDTIMERSTARTLOC,
    Q_DANGERPOINT =&gt; MALvl2or3.Q_DANGERPOINT,
    D_DP =&gt; MALvl2or3.D_DP,
    V_RELEASEDP =&gt; MALvl2or3.V_RELEASEDP,
    Q_OVERLAP =&gt; MALvl2or3.Q_OVERLAP,
    D_STARTOL =&gt; MALvl2or3.D_STARTOL,
    T_OL =&gt; MALvl2or3.T_OL,
    D_OL =&gt; MALvl2or3.D_OL,
    V_RELEASEOL =&gt; MALvl2or3.V_RELEASEOL
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FullTrackDescriptionAvailable"
 Guid="3f902f3d-ba04-401b-8cb7-6dec20472418"
>
<ReqRef
 Id="63f87a6b-8c3e-4333-b97e-9e417e3623d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79426624-3172-4e01-905e-c6f842754e2d"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="a3599a2e-5b3f-4ae4-b506-f7fb8e2fc079"
>
</ReqRef><ReqRef
 Id="c610a0e4-7479-4ceb-8944-e767ebd408b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="744307fe-5cb3-4db4-bbf6-5a792c959735"
>
</ReqRef><ReqRef
 Id="164cf128-0c88-4e8f-8c60-5ceb78a0f8e3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c55810d0-bb12-44be-a07e-8b396fc6e77c"
>
</ReqRef><Comment>Indicates if the full track description (SSP + grandient) is available for the newly received MA. &quot;given together with the MA&quot; is not considered here because A1.1.6.2 ensures all relevant information has been processed at the time of evaluation of this function.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="4fff5cf5-b388-41d2-8003-2c23c9414f1e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="d5333f4d-b410-46c7-95c6-2a1a5b3bee9b"
>
<Expression>Kernel.MA.FullTrackDescriptionAvailableForDistanceInterval
(
  MessageTypes.QScaleLength
  (
    length =&gt; (SUM Packet.Sequence1 USING X IN X.L_SECTION) + Packet.L_ENDSECTION,
    scale =&gt; Packet.Q_SCALE
  )
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="20"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AcceptMA"
 Guid="2b06bc8f-a6b6-4fbe-ab3f-3b81193ce0d7"
>
<ReqRef
 Id="ddf1106f-1c68-46d4-bb66-180ab706aa8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec6ee5a5-aba2-4618-b45f-6c9d875a8eaa"
>
</ReqRef><ReqRef
 Id="ee4976a9-43b5-48a3-83fa-b4b49e47c1a8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b826e2a-2d34-496e-a3c9-e8f51ed8e8b0"
>
</ReqRef><ReqRef
 Id="9be8a6ae-9abe-4a16-8a19-f28a0581c994"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d2904bf6-1131-4253-aad3-a1b8f26d9f43"
>
</ReqRef><ReqRef
 Id="c610a0e4-7479-4ceb-8944-e767ebd408b8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11dd8c43-c89c-4fc2-a7da-e74870227574"
>
</ReqRef><ReqRef
 Id="164cf128-0c88-4e8f-8c60-5ceb78a0f8e3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b23cf52e-d97a-4f7e-9183-7e44b1993147"
>
</ReqRef><Comment>Indicates whether the MA received in the handled packet is valid</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="1036d46e-5bf8-4cad-85bb-bfa9585a87a7"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Full track description not available"
 Guid="e0b694f9-3a5f-48cd-93c8-06424ca09f3f"
>
<PreConditions>
<PreCondition
 Guid="00d7cd05-a9ec-410b-84e7-e65a24ffc933"
>NOT Kernel.MA.FullTrackDescriptionAvailable(Packet =&gt; Packet)</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="The train is tripped"
 Guid="550702ae-e019-451f-8b45-c5e05f21be0c"
>
<PreConditions>
<PreCondition
 Guid="df6aa353-159b-4d1e-aab6-259ec49faed8"
>Kernel.Mode == ModeEnum.TR</PreCondition></PreConditions>
<Expression>Boolean.False</Expression>
</Case><Case
 Name="Otherwise"
 Guid="604836d9-ccc9-41e8-b9d5-a815ab25a7f2"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="130"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ShortenedMAIsAccepted"
 Guid="1891bebe-22be-4c1a-89f9-80a427758759"
>
<ReqRef
 Id="26d39c75-1c24-46e6-b725-d71bd2fbd1c3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="824425e1-3a34-448f-8987-803cd6e72e2e"
>
</ReqRef><ReqRef
 Id="c11c2ace-e3a5-4fe7-9621-b28a5a50f720"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dec6ae6-cf88-4abd-941a-de545fe4a4fb"
>
</ReqRef><ReqRef
 Id="d88061c9-dc9a-4ffc-8134-4bc8eef39511"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="87020019-c181-451a-bc6d-2ecd3d4e8350"
>
</ReqRef><ReqRef
 Id="bc02069a-b3f9-44d3-ae1b-fb27d71bb51d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a8b15f1-1207-4f8a-b0ef-ac53d671ecfb"
>
</ReqRef><Comment>Indicates whether the shortened MA sent by RBC is accepted.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message"
 Name="aShortenedMA"
 Guid="5c891ee4-a50f-478d-85e4-84cdab2858d1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="9481bd1d-6bc4-4ebc-8167-a44b76beb265"
>
<Expression>Kernel.TrainPosition.FrontEndPosition( PointOfInterest =&gt; DistanceIntervalEnum.Nom )
  &gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.d_I
(
    Vest =&gt; Odometry.EstimatedSpeed,
    aTarget =&gt; TargetStruct
    {
        Location =&gt; MessageTypes.QScaleDistance
        (
            distance =&gt; (SUM aShortenedMA.Sequence1 USING X IN X.L_SECTION) + aShortenedMA.L_ENDSECTION,
            scale =&gt; aShortenedMA.Q_SCALE
        ),
        Speed =&gt; 0.0,
        Length =&gt; 0.0
    }
)</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="130"
 Y="310"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EndSectionStart"
 Guid="1775d84c-6222-482b-bc55-76a46dfdb7fd"
>
<Comment>Returns the distance of the start of the end section</Comment>
<Cases>
<Case
 Name="There are sections"
 Guid="3f457220-852f-400d-81b0-85c02da4c0ea"
>
<PreConditions>
<PreCondition
 Guid="d56e2714-804f-45b5-a3b2-be9833877d97"
>COUNT X IN Kernel.MA.MA.Sections &gt; 0</PreCondition></PreConditions>
<Expression>AbsoluteDistance( LAST X IN MA.Sections )</Expression>
</Case><Case
 Name="Only an end section"
 Guid="9c09af30-c90b-4397-82e8-dcfddda6ba1e"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="190"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FullTrackDescriptionAvailableForDistanceInterval"
 Guid="36b5a937-717f-4f60-a667-3fd84cdda4a0"
>
<ReqRef
 Id="63f87a6b-8c3e-4333-b97e-9e417e3623d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b404fca5-2ab2-493c-baaf-a8eeddc1d8a6"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="0f07c7f8-8b1d-4794-81b9-c1d261b4aa3e"
>
</ReqRef><Comment>Indicates if the distance interval provided as parameter is fully covered by the track description (SSP + gradient).</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Length"
 Name="aDistanceInterval"
 Guid="1e8c4f20-5a79-4fda-9dd3-56eb3051e2f7"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SSP does not cover required length"
 Guid="b29c3310-7396-4241-abfd-98a86531a0f0"
>
<PreConditions>
<PreCondition
 Guid="f924c4c6-4cde-4b20-af66-c70d48f076d4"
>Kernel.TrackDescription.StaticSpeedProfile.SSP == []
  OR
Kernel.TrackDescription.StaticSpeedProfile.SSPEnd ( Current =&gt; LAST X IN Kernel.TrackDescription.StaticSpeedProfile.SSP )
  &lt; 
BaseTypes.LengthToDistance( aDistanceInterval )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Gradient information does not cover required length"
 Guid="cea59c88-cd6c-410d-a2d8-b65efc841bc6"
>
<PreConditions>
<PreCondition
 Guid="7a11d20e-5b84-4027-b9dc-cdcb8e629093"
>Kernel.TrackDescription.Gradient.Gradients == []
  OR
Kernel.TrackDescription.Gradient.GradientEnd(Current =&gt; LAST X IN Kernel.TrackDescription.Gradient.Gradients)
  &lt;
BaseTypes.LengthToDistance ( aDistanceInterval )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Otherwise"
 Guid="65d1b600-ae05-4297-a75f-69ba7f8415ab"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="SignallingRelatedSRStruct"
 Default=""
 X="20"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SignallingRelatedSRFromMAPacket"
 Guid="22888365-e977-4186-9006-455051f85761"
>
<Comment>Convenience function to get the SignallingRelatedSpeedRestrictions from 
an MA packet.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="b117437e-004f-4adb-9dde-f1cd9cc54aad"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="9b80beed-e173-4ada-bfa5-d005bdc79de7"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="fe603f7c-6d98-4208-a514-0d2d96d66002"
>
<Expression>SignallingRelatedSRStruct{
        End  =&gt; aDistanceFromRef + MessageTypes.QScaleLength(
            length =&gt; Packet.L_ENDSECTION,
            scale =&gt; Packet.Q_SCALE
            ) + SUM Packet.Sequence1 USING X IN MessageTypes.QScaleLength(
            length =&gt; X.L_SECTION,
            scale =&gt; Packet.Q_SCALE
            ),
        Start =&gt; aDistanceFromRef,
        Validity =&gt; DataStateEnum.Valid,
        Value =&gt; MessageTypes.SpeedResolution ( speed =&gt; Packet.V_MAIN, resolution =&gt; 5.0 )
}</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="510"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MALvl2or3ProfileReceived"
 Guid="378f83b5-170c-4c7f-afd4-18cc1e467fe4"
>
<ReqRef
 Id="9f918f6f-f470-4613-ab97-374dc595ce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4b9f3ea1-bcff-43b8-a127-4ac234dfd7cd"
>
</ReqRef><ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6bcd4eb-a286-47b1-acb0-fb7b0e350571"
>
</ReqRef><ReqRef
 Id="1800bf83-b2c2-4d37-8406-ca0c31b30f0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cff68d26-817b-4cd4-895a-0d19b1206836"
>
</ReqRef><ReqRef
 Id="456d49d8-e372-4a93-b53b-700d92362a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d175ac8f-f58a-4e6f-a960-5b92b4f27dec"
>
</ReqRef><ReqRef
 Id="209659eb-aa53-4a6d-a58e-491a42b89b61"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a654f51-45e3-4462-a6e2-8f7b462685d7"
>
</ReqRef><ReqRef
 Id="3b4bfa4e-f425-4b5d-a82e-aaaf923dad11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2fcf9cc5-f26b-42d4-982e-5790128433e1"
>
</ReqRef><ReqRef
 Id="c57326e0-6fe8-4373-825f-149a86761548"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7bbeb16c-e0c5-4398-9df1-c4841958e04b"
>
</ReqRef><ReqRef
 Id="6c2271aa-b854-4ce6-ba1f-4892e06164b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6bd62b5-91b6-4091-8f69-0afc54729f4a"
>
</ReqRef><Comment>Determines for which direction is applicable the received MA and calls the appropriate procedure to update the appropriate MA.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="312f1bb7-65aa-4453-bc63-26f53d29b24f"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="e30eabf9-dbd6-4355-bee8-27b2e2e7ce7d"
>
</Parameter><Parameter
 Type="BaseTypes.Time"
 Name="SectionStartTimer"
 Guid="4dc676aa-f0e6-4858-8811-4526592f5424"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="8194573d-515c-40ba-93b2-387b739d29aa"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle new MA"
 Guid="6fc7171c-6986-4137-bdd6-b65a06a83d84"
>
<Comment>Updates the stored MA with the information from the packet.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle new MA"
 Guid="ddb3309f-db79-43b7-938a-d3dc7c9abd43"
>
<PreConditions>
<PreCondition
 Guid="0e3998df-1466-494e-970e-1f5815fd1e46"
>Kernel.MA.FullTrackDescriptionAvailable(Packet =&gt;  Kernel.MA.ConvertMALvl2or3_to_MALvl1 ( Packet ))</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c6a9825b-4180-4447-a067-78ee2400685c"
><Comment>EURORADIO Infill is out of scope. Should this change, adapt the boolean parameter isInfillMA.</Comment>
Kernel.MA.UpdateMA
(
    Packet =&gt; Kernel.MA.ConvertMALvl2or3_to_MALvl1 ( Packet ),
    SectionStartTimer =&gt; SectionStartTimer,
    aDistanceFromRef =&gt; aDistanceFromRef,
    isInfillMA =&gt; False
)</Action><Action
 Guid="3e4d5ecc-98c0-4000-9d12-5b63e89e74c7"
>Kernel.MA.MAIsAccepted &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Exit override"
 Guid="b017fc6d-6cf9-4e6e-8669-bcbb31cafac5"
>
<ReqRef
 Id="6d584b1c-04b7-424f-9087-e95a0cf7c65d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6bf2139-c3b6-4d32-8abf-3e6447513ef5"
>
</ReqRef><ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c53d8ba1-e994-4318-9d8a-5e790e6ee731"
>
</ReqRef><ReqRef
 Id="c9c7c7f3-3d1c-42b1-b80c-061de2d83f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b45fc0ee-504c-4701-bed3-3908a66484bc"
>
</ReqRef><Comment>Ends the Override function if the MA received is not a trip order (if V_MAIN != 0).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Exit override"
 Guid="5e50dd51-a694-490a-986d-fc58ddaba209"
>
<PreConditions>
<PreCondition
 Guid="bd46248f-d028-4d5e-95b6-25ea8c62ed58"
>Override.OverrideIsActive()</PreCondition><PreCondition
 Guid="053853b8-9c88-4d62-ba52-8d9b2261b3a4"
>Kernel.Mode not in [ModeEnum.UN, ModeEnum.SN]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fec4ea71-9030-4796-a90a-2d1c21a90d00"
>Override.EndOverride()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="510"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MALvl1ProfileReceived"
 Guid="8c3e9d6b-09c9-4fc2-9ccd-c0714332dfae"
>
<ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d815577a-8ca4-4355-a39a-af5d3d99eaba"
>
</ReqRef><ReqRef
 Id="13aed33d-db2d-43fb-a5bf-be02674ae095"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6609a045-df06-4dea-8fbc-4633d72658f7"
>
</ReqRef><ReqRef
 Id="7f3ae822-7b90-4352-9369-c4e3ce05a91e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ceeb7429-f3c0-4971-a745-af6ed2550759"
>
</ReqRef><ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="840ddf85-feab-4bc4-b546-417584b9c55c"
>
</ReqRef><ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7defd0d3-44f4-4598-8654-6615d6a4fffa"
>
</ReqRef><ReqRef
 Id="456d49d8-e372-4a93-b53b-700d92362a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a58d5d5c-6cb7-4ea7-89a4-6a4f2bda5e5c"
>
</ReqRef><ReqRef
 Id="209659eb-aa53-4a6d-a58e-491a42b89b61"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e212076a-2271-4a2f-ba37-8b1ebe93367f"
>
</ReqRef><ReqRef
 Id="3b4bfa4e-f425-4b5d-a82e-aaaf923dad11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7b4cd46-4d12-423f-9418-aca440b2f906"
>
</ReqRef><ReqRef
 Id="c57326e0-6fe8-4373-825f-149a86761548"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="422046b9-075e-46b7-b272-39f7a8c8a333"
>
</ReqRef><ReqRef
 Id="6c2271aa-b854-4ce6-ba1f-4892e06164b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="392fc091-865b-4c1c-b7d5-a3878adc88c9"
>
</ReqRef><Comment>Determines for which direction is applicable the received MA and calls the appropriate procedure to update the appropriate MA.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="463fa7cb-d178-49da-8089-4913f650d73d"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="61481ee2-2442-47b8-b858-47aac732fa15"
>
</Parameter><Parameter
 Type="Boolean"
 Name="isInfillMA"
 Guid="ec3e87ff-099b-405d-80bc-4f2e452b938c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Store information"
 Guid="59782eb8-89ce-4ed7-a9e4-be2e7479b21f"
>
<Comment>Updates the stored MA with the information from the packet.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store MA information"
 Guid="24f6ec7d-dba8-491e-843b-cb222002046b"
>
<ReqRef
 Id="40e65850-da07-4c7a-bd9f-43c30f8a20a5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="39fafddb-6147-4359-80b0-ca5993b268b3"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ef76590-6199-4b24-8ff8-2a6bb2c90930"
>
</ReqRef><ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f31c8ce-57e8-48e3-a5b6-3506a69a8199"
>
</ReqRef><ReqRef
 Id="0d501890-d967-43e6-b663-c526a3371860"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3a4ca2cf-0b50-4c9b-b314-f32a554ec7aa"
>
</ReqRef><ReqRef
 Id="f9ca42e2-644d-47a2-b6e3-80059c79e361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71e2701d-8dbf-465b-b542-3eb2fe6e9835"
>
</ReqRef><ReqRef
 Id="0e6a08d0-98b2-451c-bd8b-74b39807dde8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3425acbd-4984-4092-ba24-f889e46845f1"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="9f480703-6045-4959-8238-ce2a2407ae11"
>Kernel.MA.AcceptMA( Packet =&gt; Packet )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0b32d029-1703-4f17-9be3-7ba6576b3c68"
>Kernel.MA.UpdateMA
(
    Packet =&gt; Packet,
    SectionStartTimer =&gt; Kernel.MA.MATimers.CurrentBGTimeOfPassage,
    aDistanceFromRef =&gt; aDistanceFromRef,
    isInfillMA =&gt; isInfillMA
)</Action><Action
 Guid="f8a42f47-6bf7-4155-9ad4-52eb896fbff6"
>Kernel.MA.UpdateSignallingRelatedSR(
    Packet =&gt; Packet,
    aDistanceFromRef =&gt; aDistanceFromRef,
    isInfillMA =&gt; isInfillMA
)</Action><Action
 Guid="80edc04f-5273-4997-8bd5-e5b012a9c650"
><Comment>Current BG time of passage becomes section timer start</Comment>
Kernel.MA.MATimers.LOATimerStart &lt;- Kernel.MA.MATimers.CurrentBGTimeOfPassage</Action><Action
 Guid="e1d644fe-308d-4060-a4cc-c14066ce2a1e"
>Kernel.MA.MAIsAccepted &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Train trip order"
 Guid="cfbd968f-f68f-4cd6-85c8-9bfc46c1f134"
>
<ReqRef
 Id="e8d016fe-f419-450e-a7e5-261b1035e3cc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="151477a9-3a3a-40e1-a984-f4403b43f327"
>
</ReqRef><ReqRef
 Id="8c086287-3454-4b36-8382-3b59a0debda0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="080ffc52-67c5-4270-857f-817ac767d00f"
>
</ReqRef><Comment>Initiates a train trip if the received MA orders it.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Trip order received"
 Guid="e8d13251-e995-4b36-99fa-c6063c1bbd42"
>
<PreConditions>
<PreCondition
 Guid="24fa9f46-1301-47de-99ce-2c32073aec79"
>Packet.V_MAIN == 0</PreCondition><PreCondition
 Guid="e0d4c189-2d3a-447c-847b-21b748321d56"
>NOT isInfillMA</PreCondition></PreConditions>
<Actions>
<Action
 Guid="430affa2-f9d2-4aa8-9feb-f862786a55c4"
>Kernel.SpeedAndDistanceMonitoring.TrainTripped &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Exit override"
 Guid="ff43d19a-fa07-4aa5-b6aa-e05ff5f114d0"
>
<ReqRef
 Id="26a62de7-212e-49df-b2c4-e9ad9a16303c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e40740d0-1cb6-4e94-b03f-6c72d9005ec9"
>
</ReqRef><ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="154d3390-eeb7-4179-a42a-789e2abe0f3d"
>
</ReqRef><ReqRef
 Id="c9c7c7f3-3d1c-42b1-b80c-061de2d83f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="522c0c40-9182-4b47-907e-eb0ee723dcc4"
>
</ReqRef><Comment>Ends the Override function if the MA received is not a trip order (if V_MAIN != 0).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Exit override"
 Guid="04673d35-78fe-4e4b-b203-8aba00c6486f"
>
<PreConditions>
<PreCondition
 Guid="6c1d680b-de67-4a2b-b1e5-4f97fa26d8d4"
>Override.OverrideIsActive()</PreCondition><PreCondition
 Guid="18ef947f-814b-4b60-9630-be17bd17273e"
>Packet.V_MAIN != 0</PreCondition><PreCondition
 Guid="af686ed0-4141-488a-8e9d-316c1d0246a0"
>Kernel.Mode not in [ModeEnum.UN, ModeEnum.SN]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2b82f74d-810e-4f72-977c-0ca411d9a9bd"
>Override.EndOverride()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="750"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateMA"
 Guid="42292706-6baf-47a0-aefc-be6ee6030aaf"
>
<ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="782774b1-d899-4424-abd8-51a040a8a72f"
>
</ReqRef><ReqRef
 Id="82d5bd61-4bef-4cfb-a68a-312446d79df1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c854f642-e58c-497e-b961-781a5669b671"
>
</ReqRef><ReqRef
 Id="c579a0d5-fcc0-4564-bbf3-599cd68b9344"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="499755e6-9445-4626-9972-592333bd2076"
>
</ReqRef><ReqRef
 Id="76a67f0f-9afc-46c4-80b9-b7a211017100"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93da8eab-c16d-4e10-af07-b5464a42a64b"
>
</ReqRef><ReqRef
 Id="456d49d8-e372-4a93-b53b-700d92362a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60674933-380c-4bd5-99c6-23f65fec0717"
>
</ReqRef><ReqRef
 Id="209659eb-aa53-4a6d-a58e-491a42b89b61"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="469c0ffc-43d0-450b-9e6c-f45fd68a6982"
>
</ReqRef><ReqRef
 Id="3b4bfa4e-f425-4b5d-a82e-aaaf923dad11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5a9cc11-403b-4c1d-a757-348ccd774a6f"
>
</ReqRef><ReqRef
 Id="c57326e0-6fe8-4373-825f-149a86761548"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90d7aa6b-433a-40f5-93d1-532d2ed4128b"
>
</ReqRef><ReqRef
 Id="6c2271aa-b854-4ce6-ba1f-4892e06164b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="63db6a6d-196f-4267-a394-f2dbc76974f6"
>
</ReqRef><Comment>Updates the stored MA with the information from a new level 1 (or converted level 2 or 3) movement authority.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="a470a1bd-758c-46c3-8b3f-f995e79d1f7a"
>
</Parameter><Parameter
 Type="BaseTypes.Time"
 Name="SectionStartTimer"
 Guid="2e880274-ffee-4f27-b59e-f1d655b920d1"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="f2c9e396-d6e8-43f5-a7ce-d70256f67dd5"
>
</Parameter><Parameter
 Type="Boolean"
 Name="isInfillMA"
 Guid="37476e9e-cee4-4fd1-8305-eb8bd8328d21"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Store previous information"
 Guid="2c71883e-4454-4fb3-81ba-ab1d2e464a82"
>
<ReqRef
 Id="d8e470e4-30ad-41be-8c8d-9828fc218d73"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3620d62-574f-4d4a-8539-6d7347681453"
>
</ReqRef><ReqRef
 Id="0c39084a-19e8-4784-962f-8dd4ba8a2aee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ae016cd-1801-47e7-a461-58dd80fcf3aa"
>
</ReqRef><Comment>If the on-board was supervising an SvL, its location is stored in order to be compared with the new SvL (if any) to detect the possible shortening.

If the on-board was supervision an LOA and will receive a SvL with the new MA, then it will be considered as shortening, regardless the location.

The information about the type of supervised target (SvL or LOA) is also stored, to determine the kind of shortening (regardless the location or not).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="SvL"
 Guid="1bdb0b15-38b6-4e9f-9a51-94ff2db10a46"
>
<Comment>Store the previous SvL, if any, in ShorteningHandler to check for a MA shortening</Comment>
<PreConditions>
<PreCondition
 Guid="51bdba26-9465-413b-af5e-004242826ec0"
>Available ( Kernel.MA.MA )
  AND  
SvL.SvL() != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0dab86fc-3cea-42d4-a180-592e92f08cc4"
>Kernel.MA.ShorteningHandler &lt;- Kernel.MA.MaShorteningHandlerStruct
{
    Location =&gt; SvL.SvL().Location,
    IsSvL =&gt; True
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="LOA"
 Guid="12c3d848-e54b-474a-b939-e0c4b8b27b38"
>
<Comment>If the on-board was not supervising a SvL and one is received, this will always be considered a MA shortening</Comment>
<PreConditions>
<PreCondition
 Guid="fcd92312-44cd-4e8f-a36f-9d2e11fe0416"
>Available ( Kernel.MA.MA )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2da3de98-5d2c-4ec0-ab71-2dcfd1efb4f5"
>Kernel.MA.ShorteningHandler &lt;- Kernel.MA.MaShorteningHandlerStruct
{
    Location =&gt; BaseTypes.Distance.Unknown,
    IsSvL =&gt; False
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update common fields"
 Guid="82a191c5-efd4-43f7-8044-7c64dd434824"
>
<ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49cad3ca-8139-4ade-b9f9-ee9375c60601"
>
</ReqRef><ReqRef
 Id="9d444c1e-f8ce-44ed-adb0-f81c08abac75"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4225d83-0f99-41e4-971e-979cb879b405"
>
</ReqRef><ReqRef
 Id="03cd0321-724a-4dbf-ae18-99839cda8019"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="52ea3bcf-99fc-48ba-8800-960d38075c35"
>
</ReqRef><ReqRef
 Id="5aa1fa8e-68c3-4f4f-83d8-b6d2b462a508"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7118476f-f5e7-41cd-a83b-2d10693a12d5"
>
</ReqRef><Comment>Update the target speed and the time-out of the target speed</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA was available"
 Guid="79fc59ef-ca56-48ba-92b2-c20ee6db13ed"
>
<Comment>If MA was already available, we can directly modify its fields</Comment>
<PreConditions>
<PreCondition
 Guid="7397c026-591e-4bf0-885d-fffe991c4cc0"
>Kernel.MA.MA != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7120a773-d361-414d-ba1e-3aa621fc8986"
>Kernel.MA.MA.TargetSpeed &lt;- MessageTypes.SpeedResolution ( Packet.V_LOA, 5.0 )</Action><Action
 Guid="46a073cd-a242-427d-995f-7f060c69493f"
>Kernel.MA.MA.TargetSpeedTimeOut &lt;- Kernel.MA.MATimers.T_LOAToTime( Packet.T_LOA )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="No MA was available"
 Guid="f48c3e07-3eaa-41b0-ae8b-9ead586f707f"
>
<Comment>If no MA was available, we have to create a new MA</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="5b63b2df-359c-4b16-a541-ccc42b459fce"
>Kernel.MA.MA &lt;- Kernel.MA.MAStruct
{
    TargetSpeed =&gt; MessageTypes.SpeedResolution ( Packet.V_LOA, 5.0 ),
    TargetSpeedTimeOut =&gt; Kernel.MA.MATimers.T_LOAToTime( Packet.T_LOA )
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle information according to infill status"
 Guid="9dd23dbd-a238-4098-830f-ac2d73d2bea4"
>
<ReqRef
 Id="30be4546-3cd9-4150-b449-11c892121279"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f7a34dc-0611-4b9b-bf99-4caeed27ec6c"
>
</ReqRef><ReqRef
 Id="60f7510b-3edf-4206-bbd3-f54e49074677"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5742b033-19c6-4511-8a0a-aa42542b86a9"
>
</ReqRef><ReqRef
 Id="bd3f7106-e2c1-465f-be7e-f47543c5f94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67ca2ef6-15b7-40d9-aa71-56c95e6d0ebf"
>
</ReqRef><Comment>Fills the collection of Sections in MA regularly or as infill data and updates the reference BG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Infill"
 Guid="716d6964-33c2-46d8-94ca-a6c21c85a8f3"
>
<ReqRef
 Id="4f9e6037-be46-477d-bbca-3122bd9ad940"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="153baedb-1e0b-4563-8b1c-6882b6db13a2"
>
</ReqRef><ReqRef
 Id="9c420bdc-a561-406b-a479-9d6cbde196a6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="02e56436-d17c-41d0-8e77-72598cd5f4d2"
>
</ReqRef><ReqRef
 Id="55512f96-4453-4790-88cb-a4324c3a4a22"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="52485ec4-7a71-4a7f-b120-731b12b2b40e"
>
</ReqRef><ReqRef
 Id="d9235eb8-4b37-4376-98fc-a488932db020"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32feab52-c8f0-4803-bba9-5157404957b2"
>
</ReqRef><ReqRef
 Id="aab59034-edf0-405a-be36-77d7bb4b775a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b0307fef-6c6e-46fa-984f-2a6dce58957f"
>
</ReqRef><Comment>Update sections with infill data</Comment>
<PreConditions>
<PreCondition
 Guid="1e6e687c-5882-4108-bab0-9fc4a8b43011"
>isInfillMA</PreCondition></PreConditions>
<Actions>
<Action
 Guid="72e4e499-b2a3-4def-8b72-ed0903b42191"
>Sections.UpdateSectionsForInfill
(
    InfillDistance =&gt; aDistanceFromRef,
    Packet =&gt; Packet,
    SectionStartTimer =&gt; SectionStartTimer
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No infill"
 Guid="0e953952-6896-42ad-88e7-5dc8d1d43b50"
>
<ReqRef
 Id="5aa1fa8e-68c3-4f4f-83d8-b6d2b462a508"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb4606fa-75a1-4722-8be7-4e6c01c72743"
>
</ReqRef><ReqRef
 Id="cfc4df94-c1ee-4d42-b8ab-44f37ef4a6ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd8b0853-9b17-4072-8224-6a1900b7191d"
>
</ReqRef><ReqRef
 Id="173067d8-3484-4ec9-81e4-7275c3374764"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8dbbf261-4c4f-4a3a-b3a6-e1a04b1bb2dd"
>
</ReqRef><Comment>Update sections with regular MA information</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="12b90b2e-7d29-48ba-9284-89ff10da7e8f"
>Sections.BuildSections(Packet =&gt; Packet , aDistanceFromRef =&gt; aDistanceFromRef, SectionStartTimer =&gt; SectionStartTimer)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update end section"
 Guid="23071766-2e94-42fa-b132-c6626baafd5c"
>
<ReqRef
 Id="6429b85c-2e6f-4225-8997-9701a98eacd4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fbb43c77-8703-4a60-8c64-aa19b573c67e"
>
</ReqRef><ReqRef
 Id="21d0760f-a057-466a-bdf0-41f316e4721c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="108dda28-db26-4392-af36-bd76e842b2a4"
>
</ReqRef><ReqRef
 Id="5aa1fa8e-68c3-4f4f-83d8-b6d2b462a508"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7b6b4c8-a798-4beb-bcad-0dcbf7e1bb91"
>
</ReqRef><ReqRef
 Id="4f9e6037-be46-477d-bbca-3122bd9ad940"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6fb400c6-3db1-4eca-ba93-1e1529da4233"
>
</ReqRef><Comment>Update all the information relative to the End Section</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update end section"
 Guid="6ff5e3f5-a719-4136-814e-5b1c80484e3e"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check end section timer"
 Guid="8dd58980-55ef-4bb2-b236-e4152bf43630"
>
<Comment>When a new MA is received, checks if the start location of the end section of the new MA is in the rear of the train and in that case simulates the expiration of the end section timer.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No old End Section timer and new End Section timer in rear of train"
 Guid="a3d8ec2b-2f88-4a34-b5d1-1939d532a663"
>
<ReqRef
 Id="7e423212-aebc-4610-85f4-e4a25b5e05c4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bde31faa-ad93-4f46-8ee6-12e8fb791df0"
>
</ReqRef><ReqRef
 Id="f628074f-59c1-494b-b268-4ca4bf339038"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62a155f4-a306-4bd2-9d76-63c45935e169"
>
</ReqRef><ReqRef
 Id="c6215fef-5d78-4d0c-bab4-b041b7e0c571"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8092c8a9-b72e-41e1-be9e-1449ed98f4ee"
>
</ReqRef><ReqRef
 Id="1e99ff79-c41c-4625-9938-941b2814fbc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="27e5ad78-79ba-4326-88a9-8b5a2736d0b3"
>
</ReqRef><Comment>If the newly received MA has a End Section timer with the start location in rear of the train, and the train is not currently running an End Section timer, assume that the time-out value has been reached (by updating the value of the timer).
In this case, the EOA should be moved to the train&apos;s current position with no release speed.</Comment>
<PreConditions>
<PreCondition
 Guid="8318e86d-1fe7-4e37-a347-0e2fb6093309"
>(Packet.Q_ENDTIMER == Messages.Q_ENDTIMER.End_section_timer_information_to_follow)
  AND  
( 
  MessageTypes.QScaleDistance(
      distance=&gt;Packet.D_ENDTIMERSTARTLOC,
      scale=&gt;Packet.Q_SCALE
  ) &lt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e5dd653d-5eb0-4e34-b050-c3abad8a6525"
>Kernel.MA.MATimers.EndSectionTimerStart &lt;- Kernel.DateAndTime.CurrentTime - BaseTypes.Time ( Packet.T_ENDTIMER )</Action><Action
 Guid="72934c18-ce47-4fc9-8041-2427d0965cbf"
>Kernel.HandlingOfAcceptedAndStoredInformation.EndSectionTimeOutShortensMA &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check overlap timer"
 Guid="1435801b-bb35-40e4-821c-64e45f56e759"
>
<Comment>When a new MA is received, checks if the start location of the overlap of the new MA is in the rear of the train and in that case simulates the expiration of the overlap timer.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No Overlap timer and new Overlap timer in rear of train"
 Guid="345e8491-a696-4ee4-bf01-c4fa7c944c37"
>
<ReqRef
 Id="0e4b96b4-eebf-407d-839d-227cc544b37a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f623633-ed28-42ac-aaa6-af737d5f9d9f"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="1abe8fa0-b26c-4fc1-914a-75ad390bbe7f"
>Packet.Q_OVERLAP == Messages.Q_OVERLAP.Overlap_information_to_follow
  AND
( 
  MessageTypes.QScaleDistance
  (
      distance =&gt; Packet.D_STARTOL,
      scale =&gt; Packet.Q_SCALE
  ) &lt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3ade456f-2e44-420d-8da8-5e67afcd2911"
>Kernel.MA.MATimers.HandleOverlapTimeout()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EndSectionTimeOutAvailable"
 Guid="5ad1a127-3b7c-4360-bb49-c935aa6fb9a4"
>
<ReqRef
 Id="8d09ca53-1394-4843-b8d6-829a86336ca3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad674fe1-3e8b-46b8-8254-9dd73a002457"
>
</ReqRef><ReqRef
 Id="86b0e1e8-53c9-4a9f-9b60-1863f04939ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9202bcf9-2841-44a5-9779-2ed6be58db83"
>
</ReqRef><Comment>If the End Section has a End Section Time-Out, store it</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EndSectionTimeOutAvailable"
 Guid="a02608d1-1291-4ea7-bee8-173285bc0dfc"
>
<ReqRef
 Id="00bf308a-22d5-43c9-9211-8f761f8ae624"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62abfdfa-8122-449b-9e99-ad60264bea69"
>
</ReqRef><ReqRef
 Id="176a499e-e5d0-492b-bf95-b669d5df8beb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8883122e-c46a-4f71-9b90-ee00a4f395d1"
>
</ReqRef><Comment>Store the End Section Time-Out</Comment>
<PreConditions>
<PreCondition
 Guid="af3b60ce-279f-43a8-a3eb-9e4140738495"
>Packet.Q_ENDTIMER == Messages.Q_ENDTIMER.End_section_timer_information_to_follow</PreCondition></PreConditions>
<Actions>
<Action
 Guid="87500986-c033-4c28-8541-ba9f21d938cd"
>Kernel.MA.MA.EndSection.EndSectionTimeOut &lt;- MATimers.TimeOutStruct
{
    Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_ENDTIMERSTARTLOC, scale =&gt; Packet.Q_SCALE ),
    TimeOut =&gt; BaseTypes.Time( Packet.T_ENDTIMER )
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EndSectionTimeOutNotAvailable"
 Guid="b0b23c79-96f0-4b36-9956-a2da7ff274d0"
>
<Comment>If thre is no End Section Time-Out, remove any old End Section Time-Out information there may be</Comment>
<PreConditions>
<PreCondition
 Guid="b562f7d1-0273-4c11-a8ae-a02b7d08bc7d"
>Packet.Q_ENDTIMER == Messages.Q_ENDTIMER.No_End_section_timer_information</PreCondition></PreConditions>
<Actions>
<Action
 Guid="92e8a761-0538-4e07-b824-35505211de34"
>Kernel.MA.MA.EndSection.EndSectionTimeOut &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TimeOutAvailable"
 Guid="56ddb80c-f550-4304-a0bf-0278dac5457a"
>
<ReqRef
 Id="3ea65cb2-f46e-4d0e-885e-8ae8c75b4a06"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8bc36e1d-e0d9-41d2-9d91-eac35cf5c987"
>
</ReqRef><ReqRef
 Id="b4e8a739-839a-4e55-80ab-4cabb887e47b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ce24ace-dbf7-47ac-a964-cedfd03a9229"
>
</ReqRef><ReqRef
 Id="e5896680-5ea9-4749-b01e-599ab85abe84"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e23977e-d9ed-4a07-a15b-00592873bc0b"
>
</ReqRef><Comment>If the End Section has a regular Section Time-Out, record it</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TimeOutAvailable"
 Guid="47c202d4-2141-47f1-ac2e-c4db8a55e665"
>
<ReqRef
 Id="b796c06e-efd9-4a35-abfc-9983a477fc35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c592fc9c-27b1-40b9-9326-8b77fbde9c2f"
>
</ReqRef><Comment>Store the Section time-Out for the End Section</Comment>
<PreConditions>
<PreCondition
 Guid="25bdcb96-339b-4531-a916-c85ce62be31c"
>Packet.Q_SECTIONTIMER == Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow</PreCondition></PreConditions>
<Actions>
<Action
 Guid="accafb31-0bfe-4626-8086-677db8bffb6e"
>INSERT Sections.SectionStruct{
    Length =&gt; Sections.EndSectionLengthFromPacket(
        aEndSectionLength =&gt; MessageTypes.QScaleLength ( Packet.L_ENDSECTION, Packet.Q_SCALE ),
        aDistanceFromRef =&gt; aDistanceFromRef ,
        aPacketSectionsLength =&gt; MessageTypes.QScaleLength( length =&gt; SUM Packet.Sequence1 USING X IN X.L_SECTION, scale =&gt; Packet.Q_SCALE),
        aMASectionsLength =&gt; SUM MA.Sections USING X IN X.Length
    ),
    TimeOut =&gt; MATimers.TimeOutStruct{
        TimeOut =&gt; BaseTypes.Time ( Packet.T_SECTIONTIMER ),
        Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_SECTIONTIMERSTOPLOC, scale =&gt; Packet.Q_SCALE ),
        TimerStart =&gt; SectionStartTimer
    }
}  IN MA.MA.Sections</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TimeOutNotAvailable"
 Guid="6e5aec02-6784-4813-8c60-c6b6f8962c55"
>
<Comment>If thre is no Section Time-Out for the End Section, remove any old Time-Out information there may be</Comment>
<PreConditions>
<PreCondition
 Guid="9dbec42b-a000-45d1-97c3-843c4d509b70"
>Packet.Q_SECTIONTIMER == Messages.Q_SECTIONTIMER.No_Section_Timer_information</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7fa07d9a-50f7-470e-bcc3-04c84e5ef484"
>INSERT Sections.SectionStruct{
    Length =&gt; Sections.EndSectionLengthFromPacket(
        aEndSectionLength =&gt; MessageTypes.QScaleLength ( Packet.L_ENDSECTION, Packet.Q_SCALE ),
        aDistanceFromRef =&gt; aDistanceFromRef ,
        aPacketSectionsLength =&gt; MessageTypes.QScaleLength( length =&gt; SUM Packet.Sequence1 USING X IN X.L_SECTION, scale =&gt; Packet.Q_SCALE),
        aMASectionsLength =&gt; SUM MA.Sections USING X IN X.Length
    ),
    TimeOut =&gt; EMPTY
}  IN MA.MA.Sections</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DangerPointAvailable"
 Guid="599819c1-a78c-4604-9104-1d2626c953b5"
>
<ReqRef
 Id="53a5391c-db43-4e26-95c4-26b8316d77a8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="893c58a7-32d1-4edc-96d5-c4f75edd5bc5"
>
</ReqRef><ReqRef
 Id="48fba67a-8f19-4715-92e7-aea531d01881"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3075d4f0-28e7-4d84-b682-10578bc63584"
>
</ReqRef><ReqRef
 Id="30dda18a-b11e-4bbe-a761-8fe4113de2e5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="932e17a2-668b-46d5-8ae0-652c49c0221f"
>
</ReqRef><Comment>If the Packet contains a Danger Point, record it</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DangerPointAvailable"
 Guid="c92c6cdc-f845-4864-a328-f99bf34ce4eb"
>
<ReqRef
 Id="530b6e5d-9ed2-460a-bc4f-9e158ad1c0b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec869468-5ec8-425e-9359-841e366ab580"
>
</ReqRef><ReqRef
 Id="1b773b1d-8ba0-43bd-abfb-9c45b0550e35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3a6ae8a-d961-43a5-bd83-004b2d380e09"
>
</ReqRef><ReqRef
 Id="646fea43-0ea3-400a-89a4-02268d193745"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55b7cdc6-44e9-48ab-b042-4ec67cd17b9e"
>
</ReqRef><Comment>If there is a Danger Point, store it</Comment>
<PreConditions>
<PreCondition
 Guid="f07ca779-84c5-4804-add0-0393d8d1866d"
>Packet.Q_DANGERPOINT == Messages.Q_DANGERPOINT.Danger_point_information_to_follow</PreCondition></PreConditions>
<Actions>
<Action
 Guid="97964995-0ab1-4bb4-93bc-94059d238ec4"
>Kernel.MA.MA.EndSection.DangerPoint &lt;- SvL.DangerPointStruct
{
    Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_DP, scale =&gt; Packet.Q_SCALE ),
    ReleaseSpeed =&gt; CreateReleaseSpeed ( Packet.V_RELEASEDP )
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DangerPointNotAvailable"
 Guid="8d37cbcc-cb87-4278-87ce-e59e0642ce06"
>
<Comment>If there is no Danger Point, remove any old Danger Point information there may be</Comment>
<PreConditions>
<PreCondition
 Guid="d0997cc0-b1a5-4e0d-b8ff-e797c75405a8"
>Packet.Q_DANGERPOINT == Messages.Q_DANGERPOINT.No_danger_point_information</PreCondition></PreConditions>
<Actions>
<Action
 Guid="25493712-fd59-4d29-a477-6270148952c9"
>Kernel.MA.MA.EndSection.DangerPoint &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OverlapAvailable"
 Guid="93c1b010-d21d-4c43-837d-71c4cb569a42"
>
<ReqRef
 Id="7fa6af9c-023d-474c-a0f7-8f72181a8fee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44290e43-c076-4fa9-817f-42bb54095a88"
>
</ReqRef><ReqRef
 Id="4777cb40-cb40-4257-8324-c515327a0152"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d10e3be-b893-4181-b40a-89fde667c74c"
>
</ReqRef><ReqRef
 Id="b3845192-4c2b-4425-bdb0-c0a568c940ea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="881c3d56-fad3-4400-a88e-604f8ef2115a"
>
</ReqRef><ReqRef
 Id="646fea43-0ea3-400a-89a4-02268d193745"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d622832e-d82c-43e6-a465-0e396eff6c96"
>
</ReqRef><ReqRef
 Id="6052fa22-4c14-4438-bee8-59b6eae1a666"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5c3cfaa-4e04-492f-a5a4-af2d13171019"
>
</ReqRef><Comment>If the Packet announces an Overlap, record it</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OverlapAvailable"
 Guid="760dd271-e90b-4c57-9711-3c01bc5675fa"
>
<ReqRef
 Id="747d021b-8bdf-43c7-8a0a-a3f568408c72"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="48eb7a9c-bfba-4bd6-a620-04b955dce3e6"
>
</ReqRef><ReqRef
 Id="887d1614-89c2-401e-8b28-d47db2b19981"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a099de0f-4632-4d2c-96cc-7417eecf104c"
>
</ReqRef><ReqRef
 Id="326cbd94-a19c-4b09-941b-6c0795e922f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33e5ade6-f70d-46dc-bf90-1bf280b002e0"
>
</ReqRef><Comment>Store the Overlap Information</Comment>
<PreConditions>
<PreCondition
 Guid="433bed91-4915-40d9-a18a-406f1c0654e7"
>Packet.Q_OVERLAP == Messages.Q_OVERLAP.Overlap_information_to_follow</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1c3b0bf9-cffa-411d-98f9-5d356a986aa2"
>Kernel.MA.MA.EndSection.Overlap &lt;- SvL.OverlapStruct
{
    Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_OL, scale =&gt; Packet.Q_SCALE ),
    ReleaseSpeed =&gt; CreateReleaseSpeed ( Packet.V_RELEASEOL ),
    TimerDistance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_STARTOL, scale =&gt; Packet.Q_SCALE ),
    TimeOut =&gt; BaseTypes.Time ( Packet.T_OL )
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OverlapNotAvailable"
 Guid="9d2398c9-6d75-498f-96dd-65a0e34ddf07"
>
<Comment>If thre is no Overlap, remove any old Overlap information there may be</Comment>
<PreConditions>
<PreCondition
 Guid="55a9dd0a-fb89-4503-83d3-6b4cb2eac2e1"
>Packet.Q_OVERLAP == Messages.Q_OVERLAP.No_overlap_information</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6025c9c1-140a-4a5a-987a-8e0a1d675e04"
>Kernel.MA.MA.EndSection.Overlap &lt;- EMPTY</Action><Action
 Guid="da51d9dd-a44b-4e99-b6c5-262363713fa8"
>Kernel.MA.MATimers.OverlapTimerStart &lt;- BaseTypes.Time.NA</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update release speed"
 Guid="647e47fc-77bb-4324-a035-94fa77e8c514"
>
<Comment>Store the release speed</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update release speed"
 Guid="1c7c9190-8e7a-44af-bd6b-0d937cb8c93a"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e5e2fcba-251a-4e6f-9ae2-515d5363a592"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.NewMAReceived &lt;- Boolean.True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle MA shortening"
 Guid="ccde6b34-d341-4a07-b0cb-c58dbc79d705"
>
<ReqRef
 Id="21484fd2-8698-4d7f-8846-76057374f929"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79653698-8a25-452a-a6cb-31e9c31a293f"
>
</ReqRef><ReqRef
 Id="426e405f-a69a-4fd6-b4cb-f0b3e7808f5e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e9273ee-5008-45a2-b143-e6ca6a0ab0b5"
>
</ReqRef><Comment>Handle a shortening of the MA.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="MA Shortening regardless of SvL"
 Guid="747f5221-9312-4c6b-a8b4-43eedbef37d7"
>
<ReqRef
 Id="0c39084a-19e8-4784-962f-8dd4ba8a2aee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="751193e0-d3dc-496f-b5c1-a4ba25f90ed5"
>
</ReqRef><Comment>Shortened MA when the old EOA was not the SvL</Comment>
<PreConditions>
<PreCondition
 Guid="19bccdbd-f627-4eb6-b555-242fd599ad68"
>Available(Kernel.MA.ShorteningHandler)
  AND
NOT Kernel.MA.ShorteningHandler.IsSvL</PreCondition><PreCondition
 Guid="3bfa1c71-713d-4451-aa50-f311d4f37d5a"
>Available(SvL.SvL())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="56a0218a-5e6a-46da-94f5-1773ffcbf281"
>Kernel.HandlingOfAcceptedAndStoredInformation.ShortenedMaReceivedRegardlessOfSvL &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="MA Shortening"
 Guid="4093f2fd-8373-409b-9371-16b0310daed0"
>
<ReqRef
 Id="d8e470e4-30ad-41be-8c8d-9828fc218d73"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fdd43860-3619-44d2-bc12-1eea6acc5a46"
>
</ReqRef><Comment>Shortened MA when the old EOA was the SvL</Comment>
<PreConditions>
<PreCondition
 Guid="2f33e75d-0cbd-41cd-a3c1-be78ac425e45"
>Available(Kernel.MA.ShorteningHandler)
  AND  
Kernel.MA.ShorteningHandler.IsSvL</PreCondition><PreCondition
 Guid="f1bbf99a-028e-410b-9fa3-ef08aee2ecb4"
>Available( SvL.SvL() )
  AND  
SvL.SvL().Location &lt; Kernel.MA.ShorteningHandler.Location</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c5a9f8e6-962f-4e24-9a60-4e8aa640da0c"
>Kernel.HandlingOfAcceptedAndStoredInformation.ShortenedMaReceived &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="630"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RepositioningInformationReceived"
 Guid="d28c0d00-54dc-4001-998e-ebb221ab6792"
>
<ReqRef
 Id="d68a643a-2faa-429a-a1d6-2724d7c3ccbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41541cf7-89c4-430d-9310-ef860a324b15"
>
</ReqRef><ReqRef
 Id="21484fd2-8698-4d7f-8846-76057374f929"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="81120dae-f5fe-44f7-9435-fe9816c767f5"
>
</ReqRef><Comment>Handles a REPOSITIONING_INFORMATION packet.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION.Message"
 Name="Packet"
 Guid="6f05e36f-29ba-4e05-90ac-0b3e6b65e4a1"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="DistanceToBG"
 Guid="f46ff854-ad58-45ee-a551-3364bafae08d"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update current section"
 Guid="eef0555f-d0cf-4c18-84b4-f03f1b1ee5df"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Several sections available"
 Guid="68bfc695-8f5c-428c-85b1-2a1023991c62"
>
<ReqRef
 Id="734f0ed2-d7d1-4a42-8fe8-058ea4441252"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60c621ea-4f64-46fb-b51a-2bc159ca92e9"
>
</ReqRef><Comment>Updates the length of the first section of the MA.</Comment>
<PreConditions>
<PreCondition
 Guid="8ca2de13-4875-4b41-8ee8-bf5d34b237c6"
>Available ( Kernel.MA.MA ) AND Kernel.MA.MA.Sections != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="84df1a57-c7b4-46a2-867c-5d16978acf69"
>(FIRST X IN Kernel.MA.MA.Sections).Length &lt;- Default.BaseTypes.DistanceToLength (
  MessageTypes.QScaleLength (
    length =&gt; Packet.L_SECTION,
    scale =&gt; Packet.Q_SCALE
  ) 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="390"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DeleteMABeyondLocation"
 Guid="827ff0b9-02d8-4919-a2a8-0031945cd864"
>
<ReqRef
 Id="60f7510b-3edf-4206-bbd3-f54e49074677"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90d77296-ed30-45e1-9d46-f43c58e61685"
>
</ReqRef><ReqRef
 Id="1b0d0ae0-74a6-47fd-973a-bf6558f80573"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="59ec33e6-8f0a-4153-a541-38472cdce253"
>
</ReqRef><ReqRef
 Id="8cd5d7d8-c20a-4927-9990-dacc4a577a3e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3db4f34b-33c2-4173-8a12-9cbc23c1782d"
>
</ReqRef><ReqRef
 Id="69c41e0d-de0a-4c0e-9b6d-32a32fdf13e2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09ae0985-7958-4e8d-99c4-2b209a764b46"
>
</ReqRef><Comment>Deletes the MA beyond the provided location. The procedure is the following:
- first, all the sections are merged (the last section is added to the list of the other sections and is removed)
- then, the sections beyond the provided location are removed
- finally, the last section of the collection is stored to the end section.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="aLocation"
 Guid="981686cd-050e-493f-a6f1-794ced68eac1"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Remove the information beyond the provided location"
 Guid="b54fc61b-5aaa-42f9-8216-24c644f5d062"
>
<Comment>First, the end section is merged with the other sections and the sections beyond the provided location are removed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove the information beyond the provided location"
 Guid="3cda0668-1ddb-465d-adee-5d9c90c777fd"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="17d95ffc-9842-42a9-833f-8fa10e789cca"
>Sections.CutSections( aLocation =&gt; aLocation )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="750"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="UpdateSignallingRelatedSR"
 Guid="49960606-484d-4126-bdf3-a0acdb37eed7"
>
<ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4f5c7668-5602-4a64-9c34-0f2cf0296232"
>
</ReqRef><ReqRef
 Id="5f3132e8-fb36-491a-b7e8-7e237d362383"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0bdf7f3-27a6-4c49-bc4b-3fe8c8a64d6a"
>
</ReqRef><ReqRef
 Id="13aed33d-db2d-43fb-a5bf-be02674ae095"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="00407388-38fe-4258-a9a8-582744853a9d"
>
</ReqRef><ReqRef
 Id="6d40cd91-a858-435e-83bf-8b5fd647e114"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c387a8d8-ae22-4c88-b1f6-3854a75c53ac"
>
</ReqRef><Comment>Sets the signalling related speed restrictions at reception of an 
(infill) MA packet.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message"
 Name="Packet"
 Guid="d987fa47-17f2-4410-9f70-e280af7d7620"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="8c0bab01-76c9-4c38-8a82-dadba8037213"
>
</Parameter><Parameter
 Type="Boolean"
 Name="isInfillMA"
 Guid="5ba71279-6443-41ee-bbe8-24c35ae01bba"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update"
 Guid="356974e4-b713-4385-9f70-4c5bd08d170e"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Non infill"
 Guid="15ef46c6-ebc3-43f7-9dbc-e7e8bacc3149"
>
<Comment>At reception of a non-infill MA packet, previous information is deleted.</Comment>
<PreConditions>
<PreCondition
 Guid="b36f93dc-5348-4d24-85cf-cfceb47a6bec"
>NOT isInfillMA</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7e83f232-447c-4143-bdfb-2934f339f701"
>SignallingRelatedSR &lt;- 
    SignallingRelatedSRFromMAPacket(
        Packet =&gt; Packet,
        aDistanceFromRef =&gt; aDistanceFromRef
    )</Action><Action
 Guid="c36e821b-c8d7-4630-96e7-0bba19a48325"
>InfillSignallingRelatedSR &lt;- SignallingRelatedSRStruct{
        End  =&gt; BaseTypes.Distance.Unknown,
        Start =&gt; BaseTypes.Distance.Unknown,
        Validity =&gt; DataStateEnum.Invalid,
        Value =&gt; BaseTypes.Speed.NA
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Infill"
 Guid="ef937fc8-43b7-40d3-805b-66f523ca6683"
>
<Comment>At reception of an infill MA, end position of the non-infill 
SignallingRelatedSR is updated and infill info is set.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4d0d7661-15f1-4efb-bac4-40684a042cf9"
><Comment>Non infill end position.</Comment>
SignallingRelatedSR.End &lt;- aDistanceFromRef</Action><Action
 Guid="a89cc877-fc34-45fb-8dc4-64a4d6d10caf"
><Comment>Infill info.</Comment>
InfillSignallingRelatedSR &lt;- SignallingRelatedSRFromMAPacket(
        Packet =&gt; Packet,
        aDistanceFromRef =&gt; aDistanceFromRef
    )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="390"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DeleteSignallingRelatedSRBeyondLocation"
 Guid="310cbdc9-d163-4e33-b262-751c191df2e7"
>
<ReqRef
 Id="8cd5d7d8-c20a-4927-9990-dacc4a577a3e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22a827c7-9966-41bc-a93a-c005a4bc1360"
>
</ReqRef><ReqRef
 Id="bd7dbc99-064a-49f3-95c7-877b33ac0533"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="494927a7-5de0-4362-a249-a8d59c4b7a42"
>
</ReqRef><ReqRef
 Id="69c41e0d-de0a-4c0e-9b6d-32a32fdf13e2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="533e87fe-3076-4795-bddf-5db389ad1ab1"
>
</ReqRef><Comment>Delete information beyond a location. Typically used in case of a MA shortening.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="aLocation"
 Guid="4eea4c07-0ef3-4b2c-b19d-9d7410f6a120"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Delete information beyond location"
 Guid="1132f181-fe84-48b0-af1c-5657da148abc"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Location is closer than end of non-infill speed restriction"
 Guid="ad808897-deb9-451f-90b7-eeecf0df446b"
>
<Comment>If location is closer than non-infill information, infill information completely deleted (set as invalid).</Comment>
<PreConditions>
<PreCondition
 Guid="df6abcf9-0922-40fd-a139-bd0bfa9c0f51"
>aLocation &lt; SignallingRelatedSR.End</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2661c9b6-6617-442f-9856-99523952ffc0"
>SignallingRelatedSR.End &lt;- aLocation</Action><Action
 Guid="6794acac-84c4-4736-8e78-b2e7b80bf203"
>InfillSignallingRelatedSR.Validity &lt;- Default.DataStateEnum.Invalid</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise, check for infill speed restriction"
 Guid="4542ead4-75cd-4adf-8ef2-865ee90f3aa3"
>
<Comment>Update infill information if needed.</Comment>
<PreConditions>
<PreCondition
 Guid="7fcb8a5f-ee56-496b-8ab3-40b737d242f7"
>InfillSignallingRelatedSR.Validity == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="f96f4c0a-e657-4def-9f3d-f1b7763bfc76"
>InfillSignallingRelatedSR.End &gt; aLocation</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2cd4d585-2789-4d80-9212-af78d368827e"
>InfillSignallingRelatedSR.End &lt;- aLocation</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="MA.MAStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="380"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MA"
 Guid="3b49e60e-534c-48a7-af15-a4a583b52078"
>
<ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c5ab3cc-f25c-4b97-b525-837d987c11f2"
>
</ReqRef><ReqRef
 Id="ab682687-0117-4289-925f-65a6680a3644"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c89ac4f-6e85-47a4-99da-fd1c5709b7cf"
>
</ReqRef><ReqRef
 Id="200c6541-d8d8-43b9-b5c0-4f586318bbce"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f323f4cd-0663-486c-a275-2067123ceb90"
>
</ReqRef><ReqRef
 Id="08e951b3-e2c5-45bd-a768-68580e2d4307"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="399aa126-55e0-4f32-9d65-fcf9bdfcf027"
>
</ReqRef><ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3928a1c2-7346-4bac-aadc-ebf2329a447f"
>
</ReqRef><ReqRef
 Id="9f918f6f-f470-4613-ab97-374dc595ce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a709331c-4a8b-4e55-942b-6edfe5c77b3b"
>
</ReqRef><ReqRef
 Id="c786d14c-c637-4877-8d02-28ce94f66515"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc136081-1e7c-458c-b508-bd8cb7fce22e"
>
</ReqRef><ReqRef
 Id="456d49d8-e372-4a93-b53b-700d92362a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="57729fed-2dd3-40f4-a34b-4dcd7c055bd9"
>
</ReqRef><ReqRef
 Id="209659eb-aa53-4a6d-a58e-491a42b89b61"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="672147c6-0489-4626-b2fa-b28ddc6600ba"
>
</ReqRef><ReqRef
 Id="3b4bfa4e-f425-4b5d-a82e-aaaf923dad11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e19cb9f3-a435-4425-985b-1ffbde58cca4"
>
</ReqRef><ReqRef
 Id="c57326e0-6fe8-4373-825f-149a86761548"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7430b6a1-73fa-4000-aae8-2a18f47066b9"
>
</ReqRef><ReqRef
 Id="78901f0f-a70f-415d-8d57-e5156f7206d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cfa92cdb-864d-49a6-bb97-5ee0cf9ceee8"
>
</ReqRef><Comment>Represents the Movement Authority.</Comment>
</Variable><Variable
 Type="SignallingRelatedSRStruct"
 DefaultValue=""
 VariableMode="Internal"
 X="540"
 Y="190"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SignallingRelatedSR"
 Guid="59169bbb-dab1-434c-825e-21145fe95855"
>
<ReqRef
 Id="6d40cd91-a858-435e-83bf-8b5fd647e114"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09ebf445-479d-46d8-b2df-2a40ca738b5a"
>
</ReqRef><ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d2dbe36b-2a6a-4bcb-92a2-42a0dd57280e"
>
</ReqRef><ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a9ef89c7-aaaf-41bf-889c-ffea1626e8b7"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2944ad0c-ff6e-415b-bf47-5f03f4297c4b"
>
</ReqRef><ReqRef
 Id="5f3132e8-fb36-491a-b7e8-7e237d362383"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7581368-3011-48f5-91bf-d5508e19ba86"
>
</ReqRef><Comment>Represents the signalling related speed restrictions (non-infill). Value = 0 corresponds to train trip.</Comment>
</Variable><Variable
 Type="MA.MaShorteningHandlerStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="680"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ShorteningHandler"
 Guid="4a84e04c-5296-4803-9519-1233bcea12c0"
>
<ReqRef
 Id="d8e470e4-30ad-41be-8c8d-9828fc218d73"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4985de94-9939-42e2-a772-348ca4911c60"
>
</ReqRef><ReqRef
 Id="0c39084a-19e8-4784-962f-8dd4ba8a2aee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30c810b7-ddf3-4912-b5ca-8e3e4778799d"
>
</ReqRef><Comment>Allows to verify if the MA was shortened (possibly regardless of SvL location).</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="810"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MAIsAccepted"
 Guid="e2e5ee29-3d1d-4597-abaa-7dc7252ecc33"
>
<ReqRef
 Id="63f87a6b-8c3e-4333-b97e-9e417e3623d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ff3b50f9-1e06-4425-947f-9193f2285c92"
>
</ReqRef><Comment>Indicates if the MA was accepted. Used to determine if the corresponding mode profile can be accepted.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue=""
 VariableMode="Internal"
 X="820"
 Y="130"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConsiderFrontEndAsSvL"
 Guid="4f532e74-1578-447a-926d-a16efee86575"
>
<ReqRef
 Id="9c58f727-8611-4480-b6d9-449cb2d8c602"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fc6bf05-3c91-4a93-a067-e93103f0e193"
>
</ReqRef><Comment>Indicates if the current estimated front end and max safe front end positions of the train are considered as the EOA and SvL respectively, with no release speed.</Comment>
</Variable><Variable
 Type="SignallingRelatedSRStruct"
 DefaultValue=""
 VariableMode="Internal"
 X="680"
 Y="190"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InfillSignallingRelatedSR"
 Guid="0c1fcc64-bc0e-4a9f-86dd-d316c9f19b37"
>
<ReqRef
 Id="6d40cd91-a858-435e-83bf-8b5fd647e114"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="36c7da40-8ed0-45d1-9c05-97a587737dc3"
>
</ReqRef><ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a36b8d52-305b-46aa-abee-5ca5cd835736"
>
</ReqRef><ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6c81c74-57d4-4233-9e23-20e9470e128d"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="77f49c5b-af4b-488e-a5cc-df3a02b44ff1"
>
</ReqRef><ReqRef
 Id="5f3132e8-fb36-491a-b7e8-7e237d362383"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="626764fe-19c9-479a-9093-7597c1d578a9"
>
</ReqRef><Comment>Represents the signalling related speed restrictions (infill). Value = 0 does not correspond to train trip.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="20"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CleanUp"
 Guid="7de635e8-9b4c-414d-9952-c3c4e222f48b"
>
<Comment>Clears the temporary variable indicating if the MA was accepted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CleanUp"
 Guid="c72e1234-805d-4b1e-b806-5849f3aac6fd"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0209332a-b329-41fe-be81-67f6ff5c367a"
>Kernel.MA.MAIsAccepted &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
