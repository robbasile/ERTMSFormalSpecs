<NameSpace
 X="240"
 Y="70"
 Width="100"
 Height="50"
 Name="MATimers"
 Guid="4641eed8-09bd-41c2-9c0a-a949bc87c3c2"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Default=""
 X="500"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TimeOutStruct"
 Guid="25b2f9c5-4338-4355-808d-b1136878a66c"
>
<ReqRef
 Id="b4e8a739-839a-4e55-80ab-4cabb887e47b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="813f2be1-9a31-4e85-ac8f-cca3362c2e71"
>
</ReqRef><ReqRef
 Id="9e1096f7-cf79-4ff5-8dcf-ac3a8bc775e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f275a9c-5f80-4019-a34d-f9610ea70b90"
>
</ReqRef><Comment>Represents the section time-out for reguler time-outs ans end section time-outs</Comment>
<StructureElement
 TypeName="BaseTypes.Time"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TimeOut"
 Guid="6b64841f-7eb7-4f9a-9be4-af35e5bab6d5"
>
<ReqRef
 Id="7482e58a-6251-4406-8216-75bed0eec39a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a37ec95-90da-4359-8269-06dfc9f9ea06"
>
</ReqRef><ReqRef
 Id="9e5ace3a-6786-4a54-925a-cf334ff92a80"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fc7e8983-7a54-4bb2-b8d9-b44c0b43213d"
>
</ReqRef><Comment>The section time-out value, if any.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Distance"
 Guid="1376abdf-c076-4416-982b-5da1e6db0ca5"
>
<ReqRef
 Id="b796c06e-efd9-4a35-abfc-9983a477fc35"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7242317c-56d3-49d2-9e02-597c5a9e077d"
>
</ReqRef><ReqRef
 Id="00bf308a-22d5-43c9-9211-8f761f8ae624"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="976a6a5f-ad07-4b1f-b660-56738e4c0409"
>
</ReqRef><Comment>Represents the distance from beginning of section to section timer stop location (if there is a time-out associated to this section).</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Time"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TimerStart"
 Guid="38f3d48d-b31d-48f0-ae9b-b3e054f3f0de"
>
<ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a67aad2b-242b-4c48-af09-02424a0d68c8"
>
</ReqRef></StructureElement></Structure></Structures>
<Functions>
<Function
 Type="Sections.SectionStruct"
 Default=""
 X="130"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TimedOutSection"
 Guid="70aaa7f6-aa1e-4ba7-aa37-bad5f5a8d065"
>
<ReqRef
 Id="8298df3a-f507-437d-a5de-ceceaeedbead"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5ee8126-66aa-4177-b60e-3afbd214b6f5"
>
</ReqRef><ReqRef
 Id="9e701c49-4aa8-4ada-aec8-04f0983558dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b4954af-389f-4fd2-9d90-4b4ee0b8b025"
>
</ReqRef><ReqRef
 Id="6ac522ac-79fd-4987-859f-3144edd1f09d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa4ccdad-d5b5-4ba2-bc08-e61cedff936d"
>
</ReqRef><Comment>Returns the first section in MA.Sections that has timed out, if the level is different from 3 (in level 3 no time-outs are used).</Comment>
<Cases>
<Case
 Name="Check sections in the MA"
 Guid="11aadf63-ada8-4418-8832-32375f1c1a42"
>
<Comment>Check the sections in the MA for a time-out, if there are any.
X.TimeOut.Distance &gt; TrainPosition.FrontEndPosition(DistanceInterval.Min)  is the implementation of 3.8.4.2.3, since we do not concern ourselves with section timers that the train has passed.</Comment>
<PreConditions>
<PreCondition
 Guid="ab306c11-e8f0-4f44-a40d-b013cabf9458"
>Available(Kernel.MA.MA)
  AND  
Kernel.MA.MA.Sections != []
  AND  
THERE_IS X IN Kernel.MA.MA.Sections | (Available(X.TimeOut)
  AND
Sections.SectionStartLocation(X) + X.TimeOut.Distance &gt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min)  
  AND 
X.TimeOut.TimerStart + X.TimeOut.TimeOut &lt; Kernel.DateAndTime.CurrentTime)</PreCondition><PreCondition
 Guid="87a7ac1d-9861-4a39-a1bd-90d0182d96e6"
>Kernel.Level.Value.Value != LevelEnum.L3</PreCondition></PreConditions>
<Expression>FIRST X IN Kernel.MA.MA.Sections | 
(   Available(X.TimeOut)
  AND
    Sections.SectionStartLocation(X) + X.TimeOut.Distance &gt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min)
  AND  
    X.TimeOut.TimerStart + X.TimeOut.TimeOut &lt; Kernel.DateAndTime.CurrentTime )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="0d717df1-5d45-4c7d-8589-9fee946d5cfa"
>
<Comment>If there are no timed out sections, return EMPTY</Comment>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="20"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TimeOutSectionStart"
 Guid="c7fbc559-012d-40ae-8cb8-38a8bc564e2b"
>
<ReqRef
 Id="8298df3a-f507-437d-a5de-ceceaeedbead"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="711ee341-d180-4de7-aafa-a5c89f6de03a"
>
</ReqRef><Comment>Returns the start location of the first timed-out section in MA</Comment>
<Cases>
<Case
 Name="Value"
 Guid="4f7b33ad-902b-457a-89ac-0bb702f70a92"
>
<Expression>Sections.SectionStartLocation(Kernel.MA.MATimers.TimedOutSection())</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Time"
 Default=""
 X="240"
 Y="200"
 Width="100"
 Height="50"
 Name="T_LOAToTime"
 Guid="5648db38-2fc9-41c5-84cd-cf5c48cbc5cf"
>
<Parameters>
<Parameter
 Type="MessageTypes.Time"
 Name="aT_LOA"
 Guid="fd067fe6-03f1-4e76-8cdc-c67d4f0e6c2b"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No timer"
 Guid="16d007e6-0d98-4c50-b45f-3b468a7bfb9d"
>
<PreConditions>
<PreCondition
 Guid="3a070bbd-e48e-4ed9-9b33-6d8570c94949"
>aT_LOA == 1023</PreCondition></PreConditions>
<Expression>BaseTypes.Time.NA</Expression>
</Case><Case
 Name="Value"
 Guid="e53dca6f-ee42-46a7-a711-808ac3c8243c"
>
<Expression>BaseTypes.Time(aT_LOA)</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="20"
 Y="310"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleOverlapTimeout"
 Guid="f32e57d7-7a01-4127-8730-4655bd6637a0"
>
<ReqRef
 Id="750dafb4-b830-46b9-8b8e-2e806677f57c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6780da7e-dd85-49c7-bb79-b0738d23a55d"
>
</ReqRef><ReqRef
 Id="2ef82e94-5a1f-42b0-b633-74070aff0b33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="364ce915-091f-4d56-89a7-d7731ff1e621"
>
</ReqRef><ReqRef
 Id="64856907-c6b2-46b6-9ed0-07e61ce48cee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="48685342-a69c-46ea-88c8-f8ca6f6a344e"
>
</ReqRef><ReqRef
 Id="7e708f27-9f31-40a5-bbcf-ef90c1570bfc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bb010ed8-4e14-4690-a297-b37abf75f515"
>
</ReqRef><ReqRef
 Id="95c54f1e-3d4f-4f96-afdb-8cefc9edf6ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d252de04-0c99-4d67-b0d4-4c12cea05dda"
>
</ReqRef><ReqRef
 Id="0e4b96b4-eebf-407d-839d-227cc544b37a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3a66388c-91e9-460c-8856-c1c07a93d1e7"
>
</ReqRef><Comment>Applies the actions that have to be executed if the overlap timer expires.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle overlap timeout"
 Guid="cc29dd32-dd09-4257-9600-b6fbde4293e4"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle overlap timeout"
 Guid="ab320ee7-8f6c-4d27-aa4f-7ba486cbf555"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="60ac98eb-f87f-4a83-b636-ea89d0c00d73"
>Kernel.HandlingOfAcceptedAndStoredInformation.SvLShiftedDueToOverlapTimeout &lt;- True</Action><Action
 Guid="a201db5e-1464-408f-b6e0-527ae199b982"
>Kernel.MA.MA.EndSection.Overlap &lt;- EMPTY</Action><Action
 Guid="7fc9aece-b4b1-44d9-8ec3-044e13911666"
>Kernel.MA.MA.TargetSpeed &lt;- 0.0</Action><Action
 Guid="0833bca7-b3f6-4aa8-a810-9134c26fe7d7"
>Kernel.MA.MATimers.OverlapTimerStart &lt;- BaseTypes.Time.NA</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="130"
 Y="310"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleTimers"
 Guid="37b72ba2-e3b2-4e3b-b390-b93ce893ace1"
>
<Comment>Checks whether the timers related to the movement authority expired and if so applies the corresponding actions.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="20"
 Y="410"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Handle EOA/LOA timeout"
 Guid="591e94e5-c3a7-4e81-90e3-88568265a519"
>
<ReqRef
 Id="9d6569e4-3f30-4589-b167-e8da599da410"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b21b085-f837-4ebe-9e27-06a08ee3bec8"
>
</ReqRef><Comment>When the timeout associated to the target speed expires, the speed is set to 0.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle EOA/LOA timeout"
 Guid="efc26cd3-d8bd-413b-8276-69274b1470de"
>
<PreConditions>
<PreCondition
 Guid="e2bcedd1-3423-45d1-99d3-ad82884d61fb"
>Available(MA.MA)
  AND
Kernel.MA.MA.TargetSpeed != 0.0
  AND
Kernel.MA.MATimers.LOATimerStart + Kernel.MA.MA.TargetSpeedTimeOut &lt;= Kernel.DateAndTime.CurrentTime</PreCondition></PreConditions>
<Actions>
<Action
 Guid="81fb344e-2eac-4dbf-a87a-6b07cd092523"
>Kernel.MA.MA.TargetSpeed &lt;- 0.0</Action><Action
 Guid="4dbeb024-474e-458d-9ad3-72599528c636"
>Kernel.HandlingOfAcceptedAndStoredInformation.LOABecameEOA &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="240"
 Y="410"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle overlap timer"
 Guid="5dc5d497-4b0e-4f74-bec6-6c57c87fa5b4"
>
<Comment>Handles the actions related to the overlap timer (start, stop and handling of timeout).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Start overlap timer"
 Guid="b5ba1c3a-9d61-477b-84da-163a081813c3"
>
<ReqRef
 Id="1b6f1d36-9373-453c-9e59-13fd613cd03d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fbec9b86-6e10-401d-9f1e-c53718bbefcb"
>
</ReqRef><Comment>As soon as the train&apos;s location passes the Overlap Start Location, start the timer.</Comment>
<PreConditions>
<PreCondition
 Guid="4622259b-4b1e-41e7-8a6f-d5719cd20cd5"
>Kernel.MA.MA.EndSection.Overlap != EMPTY
  AND  
(Kernel.TrainPosition.FrontEndPosition(PointOfInterest=&gt;DistanceIntervalEnum.Nom) &gt; EOA.EndOfMA() - Kernel.MA.MA.EndSection.Overlap.TimerDistance )</PreCondition><PreCondition
 Guid="b4790add-4047-43c2-b414-3748923bc727"
><Comment>Doesn&apos;t reassign the Overlap timer start once it has already been started.</Comment>
Kernel.MA.MATimers.OverlapTimerStart == BaseTypes.Time.NA</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d4efcec8-86d8-4a2f-b686-4f86b2dc0755"
>Kernel.MA.MATimers.OverlapTimerStart &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Overlap timer expired"
 Guid="8947c324-1b7f-45a4-9df8-3009b7bd255e"
>
<ReqRef
 Id="750dafb4-b830-46b9-8b8e-2e806677f57c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22458151-67d6-416c-8c70-c90cd5538dc6"
>
</ReqRef><ReqRef
 Id="bd7b8708-c9ad-4c70-9635-d903b7a30074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11880b75-fd88-4234-8006-b68988d88d05"
>
</ReqRef><Comment>If the timer expires, the appropriate actions are executed.</Comment>
<PreConditions>
<PreCondition
 Guid="4550ef6f-589d-4c2d-b6b8-bb16a4a704a4"
>Kernel.MA.MA.EndSection.Overlap != EMPTY
  AND
Kernel.MA.MATimers.OverlapTimerStart != BaseTypes.Time.NA
  AND  
(Kernel.DateAndTime.CurrentTime &gt; Kernel.MA.MATimers.OverlapTimerStart + Kernel.MA.MA.EndSection.Overlap.TimeOut)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9cf7b65e-05f0-43cf-8a21-9e0fdac2bd4b"
>Kernel.MA.MATimers.HandleOverlapTimeout()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Train comes at standstill with overlap timer started"
 Guid="5cf5f22f-1cc4-4ba9-a737-48fbef3ed482"
>
<ReqRef
 Id="95c54f1e-3d4f-4f96-afdb-8cefc9edf6ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="06f1038d-fe3c-4aa1-a0d6-c040d745a6b6"
>
</ReqRef><Comment>If the train comes at standstill after the overlap timer has been started, the overlap timer is considered as expired.</Comment>
<PreConditions>
<PreCondition
 Guid="e920c97c-9102-47d7-a043-0c6c4808eabf"
>Kernel.MA.MATimers.OverlapTimerStart != BaseTypes.Time.NA</PreCondition><PreCondition
 Guid="2938a143-8f9c-4ad2-a055-fa0c7a29cd19"
>Odometry.TrainIsAtStandstill()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="97ae4750-9d3a-491c-a9b9-a17c639d1089"
>Kernel.MA.MATimers.HandleOverlapTimeout()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle section timer"
 Guid="6e8f7e42-e75a-4023-92b7-ed4e0aa6e6a6"
>
<ReqRef
 Id="8298df3a-f507-437d-a5de-ceceaeedbead"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc5d4753-0e7d-4c98-9fc8-57cb8f379424"
>
</ReqRef><ReqRef
 Id="99f97973-e6ed-4507-b864-54ea6e9c0fdf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94a6ac67-5b38-4d07-b124-b811abadded3"
>
</ReqRef><ReqRef
 Id="6e298525-0025-4c39-8c09-9a58a38729be"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9630227a-d4e1-4a8b-9bd2-9d6a3fe75b0f"
>
</ReqRef><ReqRef
 Id="2c2aa4b4-7362-44d9-b7ec-bd064ad99f4f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="99e956a0-a129-4714-ab70-fe7701752256"
>
</ReqRef><ReqRef
 Id="430d4f07-d2b9-4364-a2e5-17353db2175e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6ac33f47-2d3a-48c8-a6bc-082593d95a83"
>
</ReqRef><Comment>Handles actions related to the expiration of a section timer.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Section Time-Out"
 Guid="6f0f4bd6-c430-4cdc-b3c0-66ff2bc97b5c"
>
<PreConditions>
<PreCondition
 Guid="24d938c7-fe0b-4f4d-b9a9-b308a3518179"
>Available(Kernel.MA.MATimers.TimedOutSection())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4a877f2e-ffe8-4dd8-b245-926bded39f26"
>Kernel.HandlingOfAcceptedAndStoredInformation.SectionTimeOutShortensMA &lt;- True</Action><Action
 Guid="4c4fc0db-b651-45f3-9bcc-b947f3342dc6"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.UpdateReleaseSpeed()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle end section timer"
 Guid="c371a6df-49f8-4b69-a8db-15b819c054b4"
>
<ReqRef
 Id="7e423212-aebc-4610-85f4-e4a25b5e05c4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="429d3e69-089e-4691-ab34-4d3575f305f4"
>
</ReqRef><ReqRef
 Id="f628074f-59c1-494b-b268-4ca4bf339038"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0cffa947-e484-40ab-ad11-9b59cca7f2ae"
>
</ReqRef><ReqRef
 Id="c6215fef-5d78-4d0c-bab4-b041b7e0c571"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed994df8-9ca9-4d2f-833c-e44b876a902a"
>
</ReqRef><ReqRef
 Id="1e99ff79-c41c-4625-9938-941b2814fbc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="61ee827e-1469-4e14-9674-6131a9dda213"
>
</ReqRef><ReqRef
 Id="e199cc01-44ca-4dc8-bc13-df147bf2bf53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03ebd4d8-1712-4c2e-b958-34bec41c1032"
>
</ReqRef><Comment>Handles actions related to the expiration of the end section timer.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="End section Time-Out"
 Guid="3e46954a-1903-4156-8318-b10f70834a11"
>
<PreConditions>
<PreCondition
 Guid="7c58a301-5e31-4d0c-91de-e2e64df6d1f7"
>Available(MA.MA)
  AND  
Available(MA.MA.EndSection.EndSectionTimeOut)
  AND  
Kernel.MA.MATimers.EndSectionTimerStart != BaseTypes.Time.NA
  AND  
(Kernel.DateAndTime.CurrentTime &gt; Kernel.MA.MATimers.EndSectionTimerStart + Kernel.MA.MA.EndSection.EndSectionTimeOut.TimeOut)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a54a01c8-60c3-4dff-9b28-5075998c6a6b"
>Kernel.HandlingOfAcceptedAndStoredInformation.EndSectionTimeOutShortensMA &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="350"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CurrentBGTimeOfPassage"
 Guid="394ee49b-da65-4088-9728-14bd7678bec1"
>
<ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3390d83-cac9-4ef3-90c6-64c836bab08a"
>
</ReqRef><ReqRef
 Id="0d501890-d967-43e6-b663-c526a3371860"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04bca44f-b79e-48e8-8afe-6a9a0bee0869"
>
</ReqRef><ReqRef
 Id="f9ca42e2-644d-47a2-b6e3-80059c79e361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8a1b7a15-ef0d-4ad5-940d-3a33ad94c7e2"
>
</ReqRef><ReqRef
 Id="0e6a08d0-98b2-451c-bd8b-74b39807dde8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7fe8dca-53d2-4615-ab76-ea875b67d31b"
>
</ReqRef><Comment>Stores the time of passage over the first balise encountered of any BG. If the BG contains an MA, this time is the section timer start for all section time-outs in that MA.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="BaseTypes.Time.NA"
 VariableMode="Internal"
 X="130"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="EndSectionTimerStart"
 Guid="bd5eb6a3-7ab7-4a25-9014-f553a218a7b8"
>
<ReqRef
 Id="d15e3a89-8446-4ff9-823e-41677c3863b5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aafa1095-4136-4540-90c9-fd43bcbe6ca0"
>
</ReqRef><ReqRef
 Id="e199cc01-44ca-4dc8-bc13-df147bf2bf53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49fd2f91-f568-4a2c-849e-0b9a754f46fb"
>
</ReqRef><Comment>Time when the end section timer is started.
Note that the &quot;TimeOut&quot; here is not the End Section time-out value, but the time at which the End Section timer start location was passed.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="20"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="LOATimerStart"
 Guid="eadabd71-0e7f-4597-8d44-9574de6f8a1d"
>
<ReqRef
 Id="8298df3a-f507-437d-a5de-ceceaeedbead"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ccdb4da4-d3cb-4c19-849f-977a5ecaa05f"
>
</ReqRef><ReqRef
 Id="430d4f07-d2b9-4364-a2e5-17353db2175e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e9d37c8-ed98-409e-852e-bc09f61b31d7"
>
</ReqRef><ReqRef
 Id="f9ca42e2-644d-47a2-b6e3-80059c79e361"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="56d5590e-2102-4277-87e1-a8a87054c7b0"
>
</ReqRef><ReqRef
 Id="00601485-94ca-4c66-a312-5037844661af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6783c529-aeda-4d6c-9f72-95271d293c02"
>
</ReqRef><ReqRef
 Id="0e6a08d0-98b2-451c-bd8b-74b39807dde8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ef2dff5d-26a1-4249-b036-b7007afbf999"
>
</ReqRef><ReqRef
 Id="9d6569e4-3f30-4589-b167-e8da599da410"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="110ecff1-086f-4339-bdff-58be2da326f0"
>
</ReqRef><Comment>Time of reception of the MA, starting point of the section timers and EOA/LOA timer.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="BaseTypes.Time.NA"
 VariableMode="Internal"
 X="240"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="OverlapTimerStart"
 Guid="b32134a2-4fd1-42c3-9fdc-1e7961141b17"
>
<ReqRef
 Id="1b6f1d36-9373-453c-9e59-13fd613cd03d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="16472a19-e9a1-43ba-adfa-12fe5a9ae415"
>
</ReqRef><Comment>Time when the overlap timer is started.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 X="130"
 Y="410"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Start End Section Timer"
 Guid="96dde597-2950-4ce8-87b6-5472d73371df"
>
<ReqRef
 Id="d15e3a89-8446-4ff9-823e-41677c3863b5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ef9fc76-436c-460e-b0ba-a6ebb2bf46a7"
>
</ReqRef><Comment>As soon as the train&apos;s location passes the End Section Timer Start Location, start the timer.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Train passed the End Section timer start location"
 Guid="6440297e-e737-4a5a-af1b-6e779572d01e"
>
<PreConditions>
<PreCondition
 Guid="6ca30b00-39b9-4c23-b458-4088373dd895"
>Kernel.MA.MA.EndSection != EMPTY
  AND  
(Kernel.TrainPosition.FrontEndPosition(PointOfInterest=&gt;DistanceIntervalEnum.Max) &gt; EOA.EndOfMA() - Kernel.MA.MA.EndSection.EndSectionTimeOut.Distance)</PreCondition><PreCondition
 Guid="22692d30-56a8-4f47-a757-885cf72f478f"
><Comment>Doesn&apos;t reassign the End Section timer start once it has already been started.</Comment>
Kernel.MA.MATimers.EndSectionTimerStart != BaseTypes.Time.NA</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b9c8841c-a50c-46ad-97ae-1da9976bb22e"
>Kernel.MA.MATimers.EndSectionTimerStart &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
