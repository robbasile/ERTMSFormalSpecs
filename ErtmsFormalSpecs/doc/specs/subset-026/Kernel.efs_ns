<NameSpace
 X="10"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Image="4"
 Name="Kernel"
 Guid="838d10c3-e56e-4b01-83ac-4480aa6fb8b8"
>
<NameSpaces>
<NameSpaceRef
 Name="MA"
 Guid="dc87bfc8-61e2-4baa-8e0f-012871d0a6ed"
>
</NameSpaceRef><NameSpaceRef
 Name="NationalValues"
 Guid="85305c9f-2d80-47b8-a163-13a67a5b6247"
>
</NameSpaceRef><NameSpaceRef
 Name="TrainData"
 Guid="7e906969-bb0d-406d-8fe4-37123a4c94dc"
>
</NameSpaceRef><NameSpaceRef
 Name="LX"
 Guid="640c4148-47ae-4fb7-b6d1-81c4390c772e"
>
</NameSpaceRef><NameSpaceRef
 Name="SpeedAndDistanceMonitoring"
 Guid="b2ca29b4-c69a-4c63-a1a5-cd9c62a7a340"
>
</NameSpaceRef><NameSpaceRef
 Name="TSR"
 Guid="86bbe6fc-6dd9-4178-ba63-b78b5668db13"
>
</NameSpaceRef><NameSpaceRef
 Name="MRSP"
 Guid="fb7f9343-9f60-4278-b463-1c9d846f087c"
>
</NameSpaceRef><NameSpaceRef
 Name="TrainPosition"
 Guid="51bf1d67-bba5-4d98-a1d9-7ca46f4681a6"
>
</NameSpaceRef><NameSpaceRef
 Name="Infill"
 Guid="a3487269-6e69-459c-8dbb-c272fb799f62"
>
</NameSpaceRef><NameSpaceRef
 Name="HandlingOfAcceptedAndStoredInformation"
 Guid="880bcc6e-c41a-425c-a226-f75fb17190ec"
>
</NameSpaceRef><NameSpaceRef
 Name="TrackDescription"
 Guid="b7205dfd-832a-43dc-8ec6-76cfc1e1a258"
>
</NameSpaceRef><NameSpaceRef
 Name="AcceptInformation"
 Guid="7ded37bc-cf90-42a8-b4e2-b852290abcdf"
>
</NameSpaceRef><NameSpaceRef
 Name="LevelTransition"
 Guid="cd88590f-11ba-4781-ab98-5b4d39eefc2a"
>
</NameSpaceRef><NameSpaceRef
 Name="DateAndTime"
 Guid="c1b28d79-0e4d-4433-9547-75081436e1af"
>
</NameSpaceRef><NameSpaceRef
 Name="ActiveFunctions"
 Guid="aea4145e-5902-454b-8495-8ebb5f5c9fca"
>
</NameSpaceRef><NameSpaceRef
 Name="GeographicalPosition"
 Guid="305a6139-3fcf-46c3-8d4f-e1de87059223"
>
</NameSpaceRef><NameSpaceRef
 Name="VirtualBaliseCover"
 Guid="37790951-bbd2-47f8-b26d-3b6becb8f3a1"
>
</NameSpaceRef><NameSpaceRef
 Name="TrackAheadFree"
 Guid="ce8ea0b2-9a21-45f2-b90f-db2be131ec8b"
>
</NameSpaceRef><NameSpaceRef
 Name="BrakeCommands"
 Guid="10080934-fab8-47ef-bd9b-dc8667dba958"
>
</NameSpaceRef><NameSpaceRef
 Name="Modes"
 Guid="1455d7e8-31bc-4252-8900-bfb8b7c89dc1"
>
</NameSpaceRef><NameSpaceRef
 Name="UndesirableMovement"
 Guid="16415796-5cc9-4b5d-8999-1e737456cd28"
>
</NameSpaceRef><NameSpaceRef
 Name="TextMessages"
 Guid="a0ccd988-7789-4eda-b926-2cbeeb0eca94"
>
</NameSpaceRef><NameSpaceRef
 Name="Override"
 Guid="010b994c-b5e8-4fbc-aa6a-7d8c02276326"
>
</NameSpaceRef><NameSpaceRef
 Name="TrainIntegrity"
 Guid="494a443c-f2e0-4f5b-9273-74b2ee980f72"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="480"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="DriverIdStruct"
 Guid="5d5998ab-e9d2-4bd5-b5be-364586273200"
>
<ReqRef
 Id="20057b5b-4d7d-471b-8b22-6034d8be03a7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="61042f83-ef00-4d83-a1d7-6e7bd80bad74"
>
</ReqRef><ReqRef
 Id="313db158-8af2-41a8-be01-840abeafc4cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aaf8b972-2a1d-4703-bfd7-0e690d10a639"
>
</ReqRef><ReqRef
 Id="f1a72111-334b-4c63-9709-ceaeefe93df9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc9e343d-df3b-405d-be2f-6b52f3b362d1"
>
</ReqRef><Comment>The Driver ID with its datastate.</Comment>
<StructureElement
 TypeName="String"
 Default="&apos;12345&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
 Guid="90be93b8-05c2-41ad-a0dd-b4160dfc7e67"
>
<ReqRef
 Id="9c578eef-4c8d-4689-8bcd-50c0c356864e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b449d4c-1673-45a5-84b1-a163d9735ec1"
>
</ReqRef><Comment>The value of the driver id.</Comment>
</StructureElement><StructureElement
 TypeName="DataStateEnum"
 Default="DataStateEnum.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="DataState"
 Guid="b70be260-dbd2-4574-a901-24d9d68e9abc"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d6c52b91-4bab-48f7-a471-95a72b5682c0"
>
</ReqRef><Comment>The data state of the driver id.</Comment>
</StructureElement><Interfaces>
<StructureRef
 Name="DataStateInterface"
 Guid="fa7ceed7-4b2d-4f6c-ab1b-951184e66a97"
>
</StructureRef></Interfaces>
</Structure><Structure
 Default=""
 X="480"
 Y="580"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LevelData"
 Guid="93dfea80-bbe6-4ac1-9718-6b369bd16254"
>
<ReqRef
 Id="c64d2c76-dc3a-4e50-b17f-68b3482d0a85"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4bf8e2b-051d-4e04-9852-f4590e9e140e"
>
</ReqRef><ReqRef
 Id="2bd0d6a5-d918-4308-994a-c1689c4a4e30"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5bc10352-e6c1-475c-a257-dce6c744e585"
>
</ReqRef><Comment>Represents the ERTMS/ETCS level of the train.</Comment>
<StructureElement
 TypeName="LevelDataStruct"
 Default="LevelDataStruct
{
    NTC =&gt; NID_NTC.NOT_APPLICABLE,
    Value =&gt; LevelEnum.L0
}"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
 Guid="5f23605f-e46a-47cb-abf5-072f454ca4c4"
>
<Comment>The value of the current ERTMS/ETCS level.</Comment>
</StructureElement><StructureElement
 TypeName="DataStateEnum"
 Default="DataStateEnum.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="DataState"
 Guid="9d0ede96-e6dc-4645-be67-2eb8e5cc99fd"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a3698f3e-66a5-400f-8bad-4714d62e16e2"
>
</ReqRef><Comment>The data state of the current ERTMS/ETCS level.</Comment>
</StructureElement><Interfaces>
<StructureRef
 Name="DataStateInterface"
 Guid="6945edf3-1980-42d2-b4ae-6841a7cad902"
>
</StructureRef></Interfaces>
</Structure><Structure
 Default=""
 X="480"
 Y="260"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TrainRunningNumberStruct"
 Guid="6d1d2f39-3d8d-4dd7-8ba6-046f8d0ccb89"
>
<ReqRef
 Id="07bfd145-efdd-4512-b930-b761213e0377"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="16b6b8d5-1a6b-4f48-bb5b-e760e9d53c6d"
>
</ReqRef><ReqRef
 Id="dac86bcd-dbc3-4022-866e-6ede3aa58dbd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="50a36d63-0562-4fea-94d4-fe115ef8b6bf"
>
</ReqRef><Comment>Represents the train running number.

The bcd notation as required by 7.5.92 is not possible in the model. Hence we stick with a simple string here. As there are no operations performed based on this value, this is uncritical. #morido, 13/10/11</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle display"
 Guid="5b0348c0-0f61-494a-b5e8-a2e9632110f9"
>
<ReqRef
 Id="9849648b-f248-48f2-9e9e-d88c4fa0be91"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8abd8011-8c07-4db9-a6e0-1c615489e8ef"
>
</ReqRef><Comment>Handles the display of modification of the train running number by the driver while the train is running, according to the National / Default values.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Display if allowed"
 Guid="6fc3ffd3-cb01-4177-a26e-84d91ebe5770"
>
<Comment>If the National or Default values allow the modification of the train running number by the driver while the train is running, then request the display of the corresponding information on the DMI, if it is not done yet.</Comment>
<PreConditions>
<PreCondition
 Guid="af51a95c-d621-44fb-b04d-89524e3771fe"
>Kernel.NationalValues.CurrentNV().ChangeOfDriverIDPermittedWhileRunning == Messages.M_NVDERUN.Yes</PreCondition><PreCondition
 Guid="49ffc2a9-8795-4f9e-8976-ce2954284187"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.RequestStatus != RequestEnum.Request</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e729b375-d857-47a8-bfcb-ca3ea6f890dc"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Do not display if not allowed"
 Guid="16a09413-34f5-4c25-8b27-373fdb01d6c5"
>
<Comment>If the National or Default values do not allow the modification of the train running number by the driver while the train is running, then the display of the corresponding information on the DMI is hidden, if it is not done yet.</Comment>
<PreConditions>
<PreCondition
 Guid="15f9e84b-2fab-463a-94a2-b9d3668a0f24"
>Kernel.NationalValues.CurrentNV().ChangeOfDriverIDPermittedWhileRunning == Messages.M_NVDERUN.No</PreCondition><PreCondition
 Guid="36698d21-37a0-40e2-87ba-839eecf4cbd2"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.RequestStatus == RequestEnum.Request</PreCondition><PreCondition
 Guid="16cbed87-8013-4a1e-8262-9f0bdec6777f"
>NOT Odometry.TrainIsAtStandstill()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="64b1ba3d-47d4-4f64-9b76-8971fe6df24d"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.Disable()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
<StructureElement
 TypeName="String"
 Default="&apos;&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
 Guid="99a886f0-dcfe-4eaa-932f-918bedf6e41a"
>
<ReqRef
 Id="a14fe95a-8673-4454-b89a-54c4ae081318"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dc79a63-1568-4c58-9329-e1321a4663d1"
>
</ReqRef><ReqRef
 Id="56763dd5-b967-4ff8-818c-9f783b54332e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c103f4df-a606-47ed-b23d-a5ffc5715aed"
>
</ReqRef><Comment>Value of the train running number.</Comment>
</StructureElement><StructureElement
 TypeName="DataStateEnum"
 Default="DataStateEnum.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="DataState"
 Guid="c3eac20d-eab0-43e6-a4d1-e4e5bca2caa2"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05113c78-77d6-46b4-945c-774d691df742"
>
</ReqRef><Comment>Data state of the train running number.</Comment>
</StructureElement><Interfaces>
<StructureRef
 Name="DataStateInterface"
 Guid="032e487a-0e17-4bdf-baf9-b16e24cb30bd"
>
</StructureRef></Interfaces>
</Structure><Structure
 Default=""
 X="350"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroup"
 Guid="ff655bbd-fc18-4fd1-ba0a-bc9d6d701c0f"
>
<ReqRef
 Id="61faae76-f226-4744-a4a6-06512a75b891"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30ca3f74-cfc2-4e19-9e58-f3daaa115444"
>
</ReqRef><Comment>A set of country and Balise group identifiers that uniquely designate one BG.</Comment>
<StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NewCountry"
 Guid="5ab74922-f03f-4da9-ae00-8183f6dbfbc5"
>
<Comment>The Balise group is in a different country from the train.</Comment>
</StructureElement><StructureElement
 TypeName="Messages.NID_C"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NID_C"
 Guid="149cfd55-6326-4b9d-b554-eadd80adbf2c"
>
</StructureElement><StructureElement
 TypeName="Messages.NID_BG"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NID_BG"
 Guid="5530cde9-537d-47ca-9e10-941a65b93533"
>
</StructureElement></Structure><Structure
 Default=""
 X="320"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafetyCriticalFaultStruct"
 Guid="37db6947-8167-4bc5-9f0e-f8ab87de1ffb"
>
<ReqRef
 Id="0dbbf234-3119-40cf-839a-64ae2c895770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="39bef347-fed2-4722-a4cd-ca0eb6be295d"
>
</ReqRef><ReqRef
 Id="e13575b2-3dc6-4c1e-995f-7d24e34c61b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8bf81206-09dc-4c4d-85ec-c4eee5e07eb4"
>
</ReqRef><ReqRef
 Id="fed0816f-33b0-4ae0-82ce-ac9e35a4efc2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c7b273ce-73c4-4e61-a48e-43c54dd1b88f"
>
</ReqRef><Comment>Structure containing a record of a safety critical fault.</Comment>
<StructureElement
 TypeName="DateAndTimeStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Timestamp"
 Guid="fcf2f632-0528-40d9-981c-2aaf3c463121"
>
</StructureElement><StructureElement
 TypeName="Messages.M_ERROR"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fault"
 Guid="e169a2e4-2862-45e5-b5df-a64026585e87"
>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="BaliseGroup"
 MaxSize="20"
 Default="[]"
 X="350"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroups"
 Guid="cce51957-40e7-474b-8e1e-7611c46f1c12"
>
<ReqRef
 Id="61faae76-f226-4744-a4a6-06512a75b891"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d4a2ec1-4f05-498c-b32f-0fdb39c34093"
>
</ReqRef></Collection><Collection
 TypeName="SafetyCriticalFaultStruct"
 Default="[]"
 X="480"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafetyCriticalFaultsCol"
 Guid="c8795852-53dd-4d92-9065-a2489c7bdefb"
>
<ReqRef
 Id="0dbbf234-3119-40cf-839a-64ae2c895770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="71e0b315-5d5a-42ff-88df-8c3ae4f32ce8"
>
</ReqRef><ReqRef
 Id="e13575b2-3dc6-4c1e-995f-7d24e34c61b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b8e157e-cc08-4e80-b8fb-5d051468dfa1"
>
</ReqRef><Comment>Collection of safety critical faults.</Comment>
</Collection><Collection
 TypeName="BaseTypes.LocationInterface"
 Default="[]"
 X="630"
 Y="640"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LocationElementsCol"
 Guid="490540ef-06f8-4e5c-bbe0-83ad09f3c8eb"
>
<Comment>Represents a collection of elements that contain a &quot;Location&quot; field.</Comment>
</Collection><Collection
 TypeName="BaseTypes.LocationLengthInterface"
 Default="[]"
 X="480"
 Y="640"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LocationLengthElementsCol"
 Guid="e7b95d93-561d-4c78-84ed-a0d4b63a92e4"
>
<Comment>Represents a collection of elements that contain &quot;Location&quot; and &quot;Length&quot; fields.</Comment>
</Collection></Collections>
<StateMachines>
<StateMachine
 Default="Kernel.HandleModeChangeSM.NoProcedure"
 X="480"
 Y="380"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleModeChangeSM"
 Guid="470b0371-f7ee-48fa-88a7-680ddaa71b72"
>
<States>
<State
 X="30"
 Y="600"
 Width="1020"
 Height="50"
 Name="NoProcedure"
 Guid="5c0c1c55-4f3d-4d3e-8b2c-22d0ee052f42"
>
<StateMachine
 NeedsRequirement="FALSE"
 Guid="e91c0c92-3a95-4ab7-ad4f-60b10746f2b1"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="StartOfMission Initiation"
 Guid="31355ff4-ba59-4d6a-a9c8-f6f070b10d4a"
>
<ReqRef
 Id="abbd517e-8b49-43b4-8dfa-117c8988fa86"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="87fef547-1853-43c2-8cfb-32424eee6ac8"
>
</ReqRef><ReqRef
 Id="e989d863-8cfc-455e-a8bb-4bec3452097c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e49917b9-4a94-4eb3-ae55-7eb32165e6cb"
>
</ReqRef><ReqRef
 Id="aab5fe51-ccd2-4951-92ec-b9a6a5d04dd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="131ccec2-27c3-43de-8c6f-d1677e171ee9"
>
</ReqRef><ReqRef
 Id="66a2d6e9-5d31-4089-8066-9551541a07a5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="101ae2f7-001e-4738-bdc1-20857ea59a15"
>
</ReqRef><Comment>If there is no current procedure and the mode is SB, then the Start of Mission procedure is initiated when a desk is opened.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StartOfMission Initiation"
 Guid="db607fdc-2bee-4bbf-aa53-6ba171f0ea06"
>
<ReqRef
 Id="e989d863-8cfc-455e-a8bb-4bec3452097c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b94f893-af71-48b2-95b4-27865e05b62f"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="be297a45-8f00-4515-85de-3b074fc79eb4"
>Kernel.Mode in [ModeEnum.SB]</PreCondition><PreCondition
 Guid="b69c599e-b059-495e-89e8-a2e5e3c6aa3d"
>DMI.DeskIsOpen ( DMI.MasterDMI() )</PreCondition><PreCondition
 Guid="cf68f025-8f89-456d-a84b-72f7305ebd05"
>EURORADIO.RBCConnection.AllSessionsClosed()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="aee9aa7f-4169-4102-b351-66eba99c9579"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ShuntingInitiatedByDriver Initiation"
 Guid="5808c8df-4c5f-4a0c-9519-f1ff0b669083"
>
<ReqRef
 Id="3d01d017-72ad-4ae6-888e-a4e7f0241a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bacca598-8c09-4815-9cc1-85e70a037e38"
>
</ReqRef><ReqRef
 Id="a7dfd21b-40f7-4ea2-8604-1cb1cf5a2a65"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="388f5de8-d6ba-42f4-9501-d18e34cf9c50"
>
</ReqRef><Comment>Procedure Shunting Initiated by Driver initiated if the conditionas are met:
  - Train is at standstill
  - Drive rselected Shunting in the DMI
  - Current mode is FS, LS, OS, SR, SN, or UN.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Launch ShuntingInitiatedByDriver"
 Guid="f123bc7e-97d6-4755-9587-8facacfe1854"
>
<PreConditions>
<PreCondition
 Guid="f097029e-3632-4604-b040-f143b4e70439"
>Kernel.Mode in [ModeEnum.FS, ModeEnum.LS, ModeEnum.OS, ModeEnum.SR, ModeEnum.SN, ModeEnum.UN]</PreCondition><PreCondition
 Guid="0e6c7970-716e-45ef-885d-d5d5bab3e44b"
>Odometry.TrainIsAtStandstill()</PreCondition><PreCondition
 Guid="843273e5-f17b-4806-a9fa-6d0c8af67f3a"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5843b3b7-c47f-4c07-ab25-96802f229d91"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Display Shunting Request"
 Guid="a6278a3a-eb11-498d-8ec2-d5df618e9dad"
>
<ReqRef
 Id="3d01d017-72ad-4ae6-888e-a4e7f0241a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4732f948-1017-4cff-b330-2d04cabd30a0"
>
</ReqRef><ReqRef
 Id="c96434eb-d965-42c8-a680-75ecf91c3047"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d922ad2-ff2e-402e-80c3-77f82f1cb794"
>
</ReqRef><Comment>Display the Shunting Request if all the necessary conditions are satisfied (see the State S10 of Start of Mission): the driver id is valid, the level is validn the train position is valid and the train is at standstill (since it is in SB mode).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Display Shunting Request"
 Guid="afacd343-2188-4571-a4f0-8a0b9f15a051"
>
<PreConditions>
<PreCondition
 Guid="487837a4-4fec-433e-96ef-be1f39c069a1"
>Odometry.TrainIsAtStandstill()</PreCondition><PreCondition
 Guid="b392428c-2e67-4b0d-8638-557b1554b2d4"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="4147a8a3-fef5-4d1f-a85a-f00a875464a8"
>NOT DMI.MasterDMI().In_ShuntingRequest.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="f87bb6ae-17c7-4285-8e28-fcbeaeb36771"
>Kernel.Level.DataState == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="662c3df4-c42d-42b4-969f-26374908d16a"
>DriverId.DataState == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="1a50685a-e6cf-47fb-ade5-c83eda9ddb1e"
>Kernel.Mode in [ModeEnum.FS, ModeEnum.LS, ModeEnum.OS, ModeEnum.SR, ModeEnum.SN, ModeEnum.UN]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="794adc96-4807-4177-9a23-4eda1869e819"
>DMI.MasterDMI().In_ShuntingRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="730"
 Y="160"
 Width="310"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StartOfMission"
 Guid="af302632-5386-4684-8466-b813545aa8b6"
>
<ReqRef
 Id="8208d384-8400-46e8-98be-8183f5b72238"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f6560f9-adcf-4938-b4d9-fc4a2b5a1aea"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="a7b24541-bdc6-49c0-8401-c952b03f0b92"
>
<States>
<State
 X="1310"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A31"
 Guid="620b45cd-72b3-44f5-b69a-b50ed34a6c21"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="d60343af-d4a4-4887-904a-ab8aab094558"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A31"
 Guid="ce67eff7-7ea0-4c2a-a75a-569172627db6"
>
<ReqRef
 Id="0d5816be-e0d4-4b39-8132-11cda5f264fc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1a073fa4-a326-49d4-bd36-e6041bbaf63a"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Open session with RBC"
 Guid="f9ad9c53-4648-4699-ab21-571ea0da2c08"
>
<ReqRef
 Id="c5b2c3fe-0dae-4997-bf3e-be2b4e554072"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3b2f974-4b7a-4011-a74e-c8a34cc0d644"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="75365369-1441-4774-95dc-1c6e9c7be9c6"
>EURORADIO.RBCConnection.Contact.OpenRBCSession()</Action><Action
 Guid="9a145e17-6bb5-4a5f-91fd-6cd4c5450fa0"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D31</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1310"
 Y="550"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A39"
 Guid="37900d79-8495-495c-9609-a61c4c6333af"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ea6cd2c0-c71f-4044-9b10-fa9cb6a3f9d9"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A39"
 Guid="27a05d11-cc7a-470b-8187-6fadec739373"
>
<ReqRef
 Id="78724a43-92f8-4ff3-9e8d-7ebf03afa832"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4060b538-af1e-48d6-88a9-5ce4a1bf619f"
>
</ReqRef><ReqRef
 Id="aba36681-0247-4508-92d9-1560c959b360"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c45f7560-3262-4295-b4ac-92a257d0edb8"
>
</ReqRef><ReqRef
 Id="ae649b47-cdfc-4223-b13d-4b1efaef612d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c55ee9c5-7a13-473c-9bb8-b979bdf99d99"
>
</ReqRef><ReqRef
 Id="058ba686-ff06-4bed-b616-68b4fb4ea7fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da3c055f-f29b-4c93-92f7-a45bbe478b3c"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Delete train position data and close the session with the RBC"
 Guid="b5865a09-73cb-4f5f-a0a7-978b1559c147"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="50c7579a-477c-4412-bbdc-fdafe80d502a"
>EURORADIO.RBCConnection.TerminateOpenSessions( contactInformationIsKept =&gt; False )</Action><Action
 Guid="31bb2c38-0d15-4eed-b0fc-428aa17307f9"
>DeleteInformation(Kernel.TrainPosition.Position)</Action><Action
 Guid="f18726fd-abef-4f8b-8e6b-ba1aa6d4f4cb"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A40</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1310"
 Y="150"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D31"
 Guid="1048a3f6-ea19-48fe-a257-f0049180a510"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="c0888e7b-57b0-4155-80cd-fce6c03ea036"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D31"
 Guid="f3dea1cd-1644-4e6d-85a5-fdea8fe4ee3a"
>
<ReqRef
 Id="5f727ae2-223d-4876-bd7a-f73476ce38ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="528d294e-959a-44a7-8385-720577893faa"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session established"
 Guid="1b670dda-95cf-4308-9596-62ef18852e2a"
>
<ReqRef
 Id="c961b910-b446-49da-a71a-a1e8b2a4719d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b7d6339-7f59-4eda-90e3-795dad8b0082"
>
</ReqRef><ReqRef
 Id="bd791945-c05a-4d4d-932c-75ef1341b032"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="409ffbcf-ff8d-4075-87e9-b05ca594b725"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="92ac4e11-b853-4cfd-9511-127154fb4c3f"
>EURORADIO.RBCConnection.CurrentRBCConnection().ConnectionState in [EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connected]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8d3533ec-8462-4002-ba2c-f7215b0c9ae8"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D32</Action><Action
 Guid="b3330d8d-0ece-4172-b3e7-3d72f1c47c16"
>ValidateInformation(EURORADIO.RBCConnection.CurrentRBCConnection().ContactData)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session establishment failure"
 Guid="2cb0ddc5-9906-4c54-a9fa-aa564ca04fa9"
>
<PreConditions>
<PreCondition
 Guid="0edebf9e-1298-4646-8fc8-e79c2352d7ed"
>EURORADIO.RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.DataState == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="78f67476-d0ee-4002-a9a0-6d276b4f20ad"
>EURORADIO.RBCConnection.CurrentRBCConnection().ConnectionState in [EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.Connecting.WaitForSystemVersion]</PreCondition><PreCondition
 Guid="b522240e-2f5d-42d6-af08-4cc75543d180"
>NOT VersionManagement.SystemVersionIsCompatible ( EURORADIO.RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.Value )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="88402501-8090-4591-b9bd-d010232a505f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A32</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1310"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D32"
 Guid="e35d4d07-e6cc-4dfb-9bc5-5598285cb2dd"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="3d6fee25-7b43-427e-95a7-19cb75097aed"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D32"
 Guid="de1bb2fb-cf4e-4692-81f0-8cd9606183e3"
>
<ReqRef
 Id="c1fbe808-07a9-45cc-aca9-3ad7ce44ca51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5db4fe7c-2922-4923-ab24-44aabb2b5339"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D32"
 Guid="a9c71fc9-70b0-475b-a177-1a9ff33933b0"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train position data valid"
 Guid="9b1dac76-0ad0-4bc4-8480-1ab10debf2df"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train position data valid"
 Guid="c9e15c3e-d142-4cec-b104-989452ef732d"
>
<PreConditions>
<PreCondition
 Guid="52ef8468-e61a-4089-8cc5-6976d3466efd"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f2bc14a7-b262-4c2a-8664-c6996b80d76e"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A33</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train position data invalid"
 Guid="9ac666c5-b55a-44ad-9677-2bcbd2615b32"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train position data invalid"
 Guid="4c59183e-8e82-464f-9e33-0f2d18918a3d"
>
<PreConditions>
<PreCondition
 Guid="d3212dc0-23c8-4d70-9ab3-2a6fc8eb032c"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Invalid
  OR  
Kernel.TrainPosition.Position.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f1892ef5-6bc1-44ef-857f-821f678ed69b"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A34</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="20"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S0"
 Guid="dc1f4881-7fe1-4ee3-a090-49233d4474ff"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e6f9bf44-a4bf-477f-a4a2-2d6e82847d14"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="S0"
 Guid="1a0c7fc8-876b-48ca-8b1f-508e0fbc66e1"
>
<ReqRef
 Id="abbd517e-8b49-43b4-8dfa-117c8988fa86"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c510a14-3735-43d1-b051-dfaff3d2f370"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S0"
 Guid="1ea2bcfb-82b9-4031-9e72-4d94844467d4"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9e333543-a7bd-4670-b956-edcb9c62593e"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="180"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S1"
 Guid="d90f824e-90ea-4a50-ac92-243bf7bf4a27"
>
<ReqRef
 Id="b6e9adeb-37b8-4110-a14b-ede647eeec14"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7864be44-e306-4339-ae11-156c4df4b802"
>
</ReqRef><Comment>State S1: the driver is asked to enter the driver id and possibly the train running number and the virtual balise cover information.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S1.AskToEnterValues"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="144c98f8-60dd-4ab0-a08a-a47c041668da"
>
<States>
<State
 X="490"
 Y="60"
 Width="250"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AskToEnterValues"
 Guid="cf4d1627-2daa-424a-b43b-8630b97cb748"
>
<ReqRef
 Id="3dec40a2-4a61-4a9c-9c92-1d115e8e1756"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3710167-8560-40bd-8228-41b549284c6d"
>
</ReqRef><ReqRef
 Id="b5adeff5-835f-415a-a6c0-4bdaee8b3cb8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="563e78bb-a5c6-4e49-97db-2905d5530019"
>
</ReqRef><ReqRef
 Id="079c6696-ff46-4b49-b30c-23ad82da6fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11003385-4f2e-4b8f-b788-fbdec1b24999"
>
</ReqRef><Comment>Initial state: the on-board equipment allows driver to enter the following data:...</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="53320457-e102-4629-8970-6d0916838e90"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Ask Driver Id and possibly train running number and virtual balise cover"
 Guid="d6057c5b-02a1-4717-88fd-de715a34c1f3"
>
<Comment>The on-board equipment allows driver to enter the following data:...</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Ask Driver Id and possibly train running number and virtual balise cover"
 Guid="aae8cd65-9e16-4cfe-9778-ab2d62e24d75"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Invalid or unknown train running number"
 Guid="c5c372ae-2ed7-44b5-931a-4f785faea67f"
>
<ReqRef
 Id="b5adeff5-835f-415a-a6c0-4bdaee8b3cb8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e3227d2-b157-4b23-a9f8-ee0a63043bf5"
>
</ReqRef><Comment>If the train running number is unknown or invalid, the on-board equipment allows the driver to enter it.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid or unknown train running number"
 Guid="e06d50d4-b90b-44cb-a2e0-2ccc795c5a0d"
>
<PreConditions>
<PreCondition
 Guid="7277f9d6-4a63-4780-98c9-f7c970c0d2f8"
>Kernel.TrainRunningNumber.DataState in [DataStateEnum.Invalid, DataStateEnum.Unknown]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ec9eeb61-a698-48d9-aceb-4e524615bd9a"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Driver id"
 Guid="7ceb0570-8756-4415-9364-fc87e930a941"
>
<ReqRef
 Id="3dec40a2-4a61-4a9c-9c92-1d115e8e1756"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eefe1b71-ddaa-4b3d-83c1-65ecc38c078c"
>
</ReqRef><Comment>If the driver id is unknown or invalid, the on-board equipment asks the driver to enter it.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown driver id"
 Guid="8242f10f-c036-40ec-a9e4-d1311742911e"
>
<Comment>The driver ID screen is automatically displayed to the driver</Comment>
<PreConditions>
<PreCondition
 Guid="d2c70318-7076-45e4-81d9-8e829bbb39c1"
>Kernel.DriverId.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="56cf47d4-59af-4b0b-9c02-abe5caf4f6cf"
>DMI.MasterDMI().In_DriverId.InitiateRequest(
    aId =&gt; &apos;&apos;,
    aEnter =&gt; True,
    aReValidate =&gt; False
)</Action><Action
 Guid="60f544b5-9b46-467c-8deb-a45a31cae22e"
>THIS &lt;- WaitForDriverId</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid driver id"
 Guid="4768fc0c-b2c4-4285-8498-b8dae1ac5917"
>
<Comment>The driver ID screen is automatically displayed to the driver</Comment>
<PreConditions>
<PreCondition
 Guid="4c1bcc5b-91cb-42ce-b8a5-df6929aefa41"
>DriverId.DataState == DataStateEnum.Invalid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="486875f2-6e3d-4cbc-b4ee-21f50184093d"
><Comment>The driver ID screen is automatically displayed to the driver</Comment>
DMI.MasterDMI().In_DriverId.InitiateRequest(
    aId =&gt; Kernel.DriverId.Value ,
    aEnter =&gt; True,
    aReValidate =&gt; True
)</Action><Action
 Guid="376053c1-666c-4932-b579-8dd325021619"
>THIS &lt;- WaitForDriverId</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="de479130-24b6-46c5-88b1-c5c7d21e8b48"
>
<Comment>The driver ID can be entered by the driver</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="44dcea74-b451-424d-8949-35d665e61ad0"
>DMI.MasterDMI().In_DriverIdEntryRequest.InitiateRequest()</Action><Action
 Guid="6bc7426d-b02b-434f-b579-9703a36b9897"
>THIS &lt;- WaitForDriverSelection</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Set/remove virtual balise cover"
 Guid="b85dd727-24cc-4b21-835a-b3d2f1fa9126"
>
<ReqRef
 Id="079c6696-ff46-4b49-b30c-23ad82da6fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22b7ad1b-0a7d-4b72-bebb-1dded2b021ac"
>
</ReqRef><Comment>The on-board equipment allows the driver to set or remove the virtual balise cover.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Set/remove virtual balise cover"
 Guid="a87718ca-e86d-444b-9ee7-06b474e2db3c"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="902ff0c6-3fef-4526-86ad-2a619d2be853"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="430"
 Y="230"
 Width="150"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="WaitForDriverSelection"
 Guid="353121e9-571d-4bb4-981b-566dd55dcaa7"
>
<ReqRef
 Id="3dec40a2-4a61-4a9c-9c92-1d115e8e1756"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="52615ce4-04dd-4d09-a414-2507d884c078"
>
</ReqRef><ReqRef
 Id="b5adeff5-835f-415a-a6c0-4bdaee8b3cb8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b25b5c6c-6013-4af1-a918-7bfc85c715fc"
>
</ReqRef><ReqRef
 Id="079c6696-ff46-4b49-b30c-23ad82da6fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c62b0662-f43b-4434-b204-45138e22f63a"
>
</ReqRef><Comment>The on-board equipments waits for the driver&apos;s selection.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="600ee073-5784-40c1-9323-eed23b1957c7"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Driver selected the train running number"
 Guid="8b637282-3598-44ec-b153-a72b761c0b6a"
>
<ReqRef
 Id="b5adeff5-835f-415a-a6c0-4bdaee8b3cb8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="387c504b-603f-43ed-98aa-c8dbca1b90db"
>
</ReqRef><Comment>If the driver selected to enter the train running number, the on-board equipment initiates the train running number entry by displaying the Train Running Number screen (automatically done in namespace DMI).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Driver selected the train running number"
 Guid="62368c6f-fd92-4305-b8cb-602a2cf0176d"
>
<PreConditions>
<PreCondition
 Guid="c828acc2-6bae-4ddc-87dd-c3002237d294"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cde86b6e-b58b-448f-a34b-d9c11c00acc6"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.WaitForTrainRunningNumber</Action><Action
 Guid="3a94c57e-2492-4237-adad-51a74dc19139"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action><Action
 Guid="b385b77f-8f9f-4732-85b3-edf4c77497da"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Driver selected the virtual balise cover"
 Guid="32450414-5819-404e-aa89-f91d3a727dad"
>
<ReqRef
 Id="079c6696-ff46-4b49-b30c-23ad82da6fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="814cfaac-655f-4782-b153-9c3d2166fa3a"
>
</ReqRef><Comment>If the driver selected to enter the virtual balise cover, the on-board equipment initiates the virtual balise cover entry.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Driver selected the virtual balise cover"
 Guid="1ee03609-22e3-466a-bb30-fd579e0b1cbf"
>
<PreConditions>
<PreCondition
 Guid="351a2559-5427-4e20-9dfd-616111571419"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="37b80da0-25d5-44cb-97e7-427a7c7f3433"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action><Action
 Guid="2632f67b-bbce-4610-9a8e-03feac03ce3a"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.WaitForVirtualBaliseCover</Action><Action
 Guid="70ba3904-e666-4bc8-88e1-73690ec6bd79"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action><Action
 Guid="58ef1fcc-3144-4aec-9907-a366b5955762"
>DMI.MasterDMI().In_VirtualBaliseCover.InputInformation.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Driver selected the driver id"
 Guid="e9b738ff-0e9f-4c0b-8c5d-9834acf2fbb8"
>
<ReqRef
 Id="3dec40a2-4a61-4a9c-9c92-1d115e8e1756"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ef71ad8-8a1e-4b65-b9dd-ba8525de4459"
>
</ReqRef><Comment>If the driver selected to enter the driver id, the on-board equipment displays the driver ID screen (automatically done in DMI namespace)</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Driver selected the driver id"
 Guid="767ca013-8881-4aa7-8685-ee5d2e16038d"
>
<PreConditions>
<PreCondition
 Guid="1542078c-cb47-4d33-b3d0-7b7ed6c33968"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5b5b6e13-9d2a-4ddb-9306-3f19db286cb0"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.WaitForDriverId</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="880"
 Y="220"
 Width="150"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="WaitForTrainRunningNumber"
 Guid="389ca563-b643-43bc-9bbf-43d13118c6f2"
>
<Comment>The driver asked to enter the train running number and the on-board equipments waits for the train running number data. Once it is entered, the procedure goes back to the initial state S1.AskToEnterValues.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="8321093b-a65f-4dde-96fe-3bbf82755d38"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Received a response"
 Guid="9a523d7b-fc5a-4b37-86f5-5eff0946a0a7"
>
<ReqRef
 Id="ab1d5732-e882-44e5-82c4-b3366adc105e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b222a22-3194-49c0-9429-5eacef295c7a"
>
</ReqRef><ReqRef
 Id="b603ef8b-509e-4363-8527-cab39ee0f193"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72bf7616-3df5-46f8-8876-d2f02a40a2ad"
>
</ReqRef><ReqRef
 Id="b5adeff5-835f-415a-a6c0-4bdaee8b3cb8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="db1ba0f8-21b8-4309-b9a2-b225bb916fca"
>
</ReqRef><Comment>When the driver enters the train running number information, it is stored on-board and the procedure goes back to S1.AskToEnterValues.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="The Train Running Number window was closed on the DMI"
 Guid="a6032afa-5d9b-4f8c-85a3-61a55a84d570"
>
<PreConditions>
<PreCondition
 Guid="305e6fb3-3687-4004-8b83-33bdeb7665fd"
>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9ccf74a9-66b4-4c3e-9735-a12acd9f8d3e"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.AskToEnterValues</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="600"
 Y="380"
 Width="150"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="WaitForDriverId"
 Guid="25891b7a-ba18-46cf-8095-164e68def0dc"
>
<Comment>The driver asked to enter the driver id and the on-board equipments waits for the driver id data. Once it is entered, the driver id status becomes valid and the procedure goes to D2 (transition E1).</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="354d157c-7bec-454e-9c00-23df5dce375e"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Received a response"
 Guid="0893f37a-cce8-42d9-87cb-56f5f5a41f30"
>
<ReqRef
 Id="7ef55f6e-2855-44c2-9bf0-ba1f05c5574c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e26b707b-002e-4533-9c41-3edbfce56f11"
>
</ReqRef><Comment>Once the driver id is validated, go to D2.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E1 : Valid ID"
 Guid="4df6d5a8-0802-48f3-813b-1e10805fb099"
>
<Comment>Once the driver has provided a valid ID, the procedure may continue</Comment>
<PreConditions>
<PreCondition
 Guid="60f30bae-564a-4fdd-aafb-e3573d0cbdf8"
>DriverId.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5e31eb20-f81b-480a-b45d-8ffcdb87aa64"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D2</Action><Action
 Guid="a3bab10c-9ff5-4f28-b348-9e7157d0acae"
>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus&lt;- RequestEnum.Disabled</Action><Action
 Guid="6042798b-1723-45ee-b3c5-d3c31a38a1cf"
>DMI.MasterDMI().In_VirtualBaliseCover.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver canceled input"
 Guid="6e1ee4cb-c008-4535-bcb7-adc6036fab0f"
>
<Comment>If the driver closes the Driver ID entry window, return to the initial state</Comment>
<PreConditions>
<PreCondition
 Guid="d120bb97-bab9-4490-82d7-ce6e602329b8"
>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="27a87601-18ea-4fbb-9140-921d90d79429"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.AskToEnterValues</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Driver selected the train running number"
 Guid="71733642-280c-4ba2-83e8-a492aadfad12"
>
<ReqRef
 Id="b5adeff5-835f-415a-a6c0-4bdaee8b3cb8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="199352ba-dc34-45a6-89cf-ae74a5ad3716"
>
</ReqRef><Comment>If the driver selected to enter the train running number, the on-board equipment initiates the train running number entry by displaying the Train Running Number screen (automatically done in namespace DMI).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Driver selected the train running number"
 Guid="eea223d0-49c2-4e1b-a627-ff81a561fc38"
>
<PreConditions>
<PreCondition
 Guid="f29750eb-2969-49ea-b131-bfbf7ea5be84"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="026eea42-1f60-4ffc-bfb2-a4600948e1fc"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.WaitForTrainRunningNumber</Action><Action
 Guid="3ce77824-954d-4831-8aab-af5d1dd4b54e"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action><Action
 Guid="25804e02-fcf6-430e-876a-5923443c85f6"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Driver selected the virtual balise cover"
 Guid="8eebc22d-7e00-47fb-a36a-cbe5cc00a920"
>
<ReqRef
 Id="079c6696-ff46-4b49-b30c-23ad82da6fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8998a160-0b49-4191-94de-0e5fc1332e13"
>
</ReqRef><Comment>If the driver selected to enter the virtual balise cover, the on-board equipment initiates the virtual balise cover entry.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Driver selected the virtual balise cover"
 Guid="341845d5-159c-43d9-b908-7f3406474254"
>
<PreConditions>
<PreCondition
 Guid="63df04c2-ea5b-4c06-8094-4630f1804a0a"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e7711ff1-b500-429d-9ef6-762f7dca2893"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action><Action
 Guid="f1a5b2db-dc7c-4a4c-b826-ae1ce5c02a9f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.WaitForVirtualBaliseCover</Action><Action
 Guid="ce973943-159d-4446-8985-f0f9b970ab50"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action><Action
 Guid="4cb932d4-7df1-40cc-a0a9-3de28b8f4033"
>DMI.MasterDMI().In_VirtualBaliseCover.InputInformation.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="40"
 Y="230"
 Width="150"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="WaitForVirtualBaliseCover"
 Guid="6161d0cc-5d00-44cd-b8f8-a2eacddd2adc"
>
<ReqRef
 Id="ea9e58d0-129c-4996-b7ee-105d84bad554"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="545921f7-225b-4a2c-a5be-48a88c7e879f"
>
</ReqRef><Comment>The driver asked to enter the virtual balise cover and the on-board equipments waits for the virtual balise cover data. Once it is entered, the procedure goes back to the initial state S1.AskToEnterValues.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="5e0c4851-cabe-4cae-a1a2-7d555f9529a5"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Driver entered the virtual balise cover"
 Guid="ab836b3a-5e72-4356-8678-a2cb1c672d7b"
>
<ReqRef
 Id="079c6696-ff46-4b49-b30c-23ad82da6fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3cf903a-3ff8-49f7-b974-38c8126a79e9"
>
</ReqRef><Comment>When the driver enters the virtual balise cover information, it is stored on-board and the procedure goes back to S1.AskToEnterValues.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver entered the virtual balise cover"
 Guid="97f1b693-d191-4df1-9b2b-846c988160fb"
>
<PreConditions>
<PreCondition
 Guid="0ae3d39c-cb15-4370-b34a-a946e686feaa"
>DMI.MasterDMI().In_VirtualBaliseCover.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f45b4dae-5da3-4a8b-b61a-48fd5fd98b9d"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S1.AskToEnterValues</Action><Action
 Guid="ac396897-a6cf-4c2e-8977-1a131cf77054"
>DMI.MasterDMI().In_VirtualBaliseCover.AcceptDriverResponse()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="20"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S2"
 Guid="ab434a1b-69da-4856-9975-1f3248f699c6"
>
<ReqRef
 Id="570f9d96-ff82-4196-84c4-f4622f65c734"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e0334c2e-1372-452d-9df0-162e035bd4d9"
>
</ReqRef><Comment>State S2: the driver is asked to enter/validate the level.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S2.OfferLevelSelection"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4391b380-b054-41c9-b418-9765c1af3ca3"
>
<States>
<State
 X="480"
 Y="320"
 Width="140"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LevelSelectionOffered"
 Guid="e0a57b25-5fcf-4e07-b21c-6104193745b4"
>
<ReqRef
 Id="44711e45-24b9-4434-8eef-30cd89f623a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cd9ddfcb-552e-4fe5-98d6-e923803cc161"
>
</ReqRef><ReqRef
 Id="7c664288-2b36-410e-9dce-05703e002b8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eaef04bc-7feb-4bee-8d6e-fd4a2b38af86"
>
</ReqRef><Comment>When the driver asks to enter the level, the level entry screen is displayed.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="32dd5a32-966a-4051-9e20-9d7566e1133e"
>
<ReqRef
 Id="523a3c43-b684-4928-848b-d441b5baa961"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8b119a4a-54ef-4ceb-9b4e-93df4d78eb65"
>
</ReqRef><ReqRef
 Id="5e931954-f188-4190-90e1-fde9d2d2ee5b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5492077-fccb-4d1a-9170-365248b72249"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Driver has selected a level"
 Guid="ed781275-a141-4b80-a95e-b356ffcf3bb1"
>
<ReqRef
 Id="44711e45-24b9-4434-8eef-30cd89f623a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eef26ca0-16d6-4078-a82a-df3a82cce8cc"
>
</ReqRef><ReqRef
 Id="7c664288-2b36-410e-9dce-05703e002b8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="809d1581-840f-4a60-a87c-4813b9137a44"
>
</ReqRef><ReqRef
 Id="35f74cc7-ac90-49d9-bf55-8c7c4445ca05"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="321c5835-d058-4d46-9cdb-2b50a63a0021"
>
</ReqRef><ReqRef
 Id="523a3c43-b684-4928-848b-d441b5baa961"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c0230ef7-b190-4f95-bb55-4ef5c0bc33a8"
>
</ReqRef><Comment>When the driver enters/revalidates the level, its value is stored.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver has selected a level"
 Guid="13a3d3c0-989d-47f6-b88c-39f05b8a5c10"
>
<Comment>Once the driver has selected a level, the procedure will continue</Comment>
<PreConditions>
<PreCondition
 Guid="dcabb4e8-a0e4-463f-9a76-5052d6b10372"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="6c43bac6-cc00-4267-9209-fa6ce1306ef0"
>Kernel.Level.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="599fb195-5633-44a5-8c59-8f7a5d7cc211"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2.ExitState</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver returned to Main Window"
 Guid="b3f83648-247a-4438-8a3c-421d6918db8f"
>
<Comment>If the driver closes the Level entry window without entering any data, return to the initial state</Comment>
<PreConditions>
<PreCondition
 Guid="db4027ff-8ba1-45c3-a3c1-dc402c55366e"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f42dc015-2fa0-49f9-8a14-5ec22f23b8e3"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2.OfferLevelSelection</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="90"
 Y="320"
 Width="140"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ExitState"
 Guid="e0e90648-167d-4e55-a0ab-446cd624334b"
>
<ReqRef
 Id="1cc13002-553c-49af-a2a8-f528a7778ad8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03f549b3-698e-4c4d-97f2-2e8b325ae39f"
>
</ReqRef><ReqRef
 Id="a4dec848-a075-4e4a-bd28-b22b5228bb83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d27b2d5c-65a4-4c96-a374-c4c75201a8a9"
>
</ReqRef><Comment>Once the driver has entered/validated the level, the process goes to the next state.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="571b634b-6f42-40df-a232-90dc666082e8"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Exit state"
 Guid="e010fe5d-0559-49b0-8799-0714a4dcb378"
>
<Comment>If new level value is 0, 1 or NTC, the procedure goes to the state 10. Otherwise it goes to the state S3.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Exit state"
 Guid="6485d4fe-cec0-4d1b-81aa-1cfa644388a4"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level 2 or 3"
 Guid="1a438c2b-4171-484d-adae-881ae248316d"
>
<ReqRef
 Id="1cc13002-553c-49af-a2a8-f528a7778ad8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="56a28257-0aa3-423f-ac92-cc6a15f93fbe"
>
</ReqRef><Comment>If the new level value is 2 or 3, the procedure goes to the state S3.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 2 or 3"
 Guid="6043302e-07b9-47ae-8bb2-4d9571b384ef"
>
<PreConditions>
<PreCondition
 Guid="0f957329-38e7-44b9-98b2-ca2eee1cafdd"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5a6f963a-16cd-4609-bed1-858ca9cfd148"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S3</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level 0, 1 or LNTC"
 Guid="546f6d8f-4ffa-4536-98d2-79da56399106"
>
<ReqRef
 Id="a4dec848-a075-4e4a-bd28-b22b5228bb83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd019a05-de34-4fbd-ab5e-99f3ac23189e"
>
</ReqRef><Comment>If new level value is 0, 1 or NTC, the procedure goes to the state 10.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0, 1 or LNTC"
 Guid="042168e8-5319-4684-9deb-5005827d5639"
>
<PreConditions>
<PreCondition
 Guid="977f4119-da69-4ac1-b7db-8f5760be498c"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.LNTC]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9918c991-5fc3-42c5-829a-128ec7aa4531"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="80"
 Y="60"
 Width="140"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OfferLevelSelection"
 Guid="3f3b2e02-66c1-4072-a86e-254a8ce8dad6"
>
<ReqRef
 Id="44711e45-24b9-4434-8eef-30cd89f623a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2778dea3-f6ec-42d1-84a5-a537a139e085"
>
</ReqRef><ReqRef
 Id="7c664288-2b36-410e-9dce-05703e002b8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cea57749-93e5-4c04-928a-5b93288cf59b"
>
</ReqRef><ReqRef
 Id="3a49cd7f-bbab-4e5f-a202-49a48db3b367"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="666f5776-b8f8-45ce-8e1e-836917b31108"
>
</ReqRef><Comment>Initial state: the on-board equipment proposes to the driver to enter/revalidate the level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="62fac64e-8bec-44c9-99bb-1130aa988d11"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Select level"
 Guid="036667bb-40cc-4017-a38f-1528d58a0bb3"
>
<Comment>If the level is unknown or invali, the driver is asked to enter/revalidate it. Otherwise, the procedure goes further.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown or invalid level"
 Guid="bc8ad033-d4bd-471c-bcb5-239576468166"
>
<ReqRef
 Id="44711e45-24b9-4434-8eef-30cd89f623a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c718f4ab-9f67-4f45-94ef-58dcdd55ba86"
>
</ReqRef><ReqRef
 Id="7c664288-2b36-410e-9dce-05703e002b8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e5aacbf-b209-4ce9-8a60-eca1788eeb5a"
>
</ReqRef><Comment>If the level is unknown or invalid, the driver is asked to enter/revalidate it.</Comment>
<PreConditions>
<PreCondition
 Guid="8f083773-5b95-4f4c-9ae7-4b797ae0481c"
>Kernel.Level.DataState in [DataStateEnum.Invalid, DataStateEnum.Unknown]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2d42d2f5-4319-4560-8681-755772d37629"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InitiateRequest()</Action><Action
 Guid="9030cc13-551e-4fc6-b9f6-61ebe760b06a"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2.WaitForDriverRequest</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Valid level"
 Guid="10069c33-4a62-4354-8a13-f2d7ae1e306d"
>
<ReqRef
 Id="1cc13002-553c-49af-a2a8-f528a7778ad8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="caf0c06d-cdd7-421e-858a-cc072a026e18"
>
</ReqRef><ReqRef
 Id="a4dec848-a075-4e4a-bd28-b22b5228bb83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d77fa4e-212f-4bb9-af16-4cb86a7aa6ff"
>
</ReqRef><Comment>If the level is valid, the procedure goes further.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9a6416c5-bf25-499e-820e-ec747eebc0e6"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="470"
 Y="60"
 Width="140"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="WaitForDriverRequest"
 Guid="397db79c-ac99-4a86-89f9-17482fb7e2e8"
>
<Comment>The on-board equipment waits until the driver asks to enter/revalidate the level.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="56fd41bb-5456-4a7f-9bf0-2a4636fc0783"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Wait until the driver asks to enter/validate the level"
 Guid="200031a5-640e-45c5-8b81-11465eed2cbc"
>
<Comment>The on-board equipment waits until the driver asks to enter/revalidate the level.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Wait until the driver asks to enter/validate the level"
 Guid="e08c4c45-476d-4ff1-9955-01dd2503344f"
>
<Comment>Display of the Level screen is automatically done in DMI namespace</Comment>
<PreConditions>
<PreCondition
 Guid="36792e40-27c4-47f9-9629-1ed2140dd176"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="957c7945-9062-4681-95bd-c5d6c52967a7"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2.LevelSelectionOffered</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="20"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S3"
 Guid="3f40363c-4a45-43a7-b6a8-3e02c3b1d6b8"
>
<ReqRef
 Id="4368a447-3e61-4232-9663-7c24cb36d68c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0be3770f-e94d-4a8e-95e3-00ccc67e368f"
>
</ReqRef><ReqRef
 Id="9a9fc849-9926-48eb-a4f8-11506d529a53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="add81455-84c7-44bc-b67d-936cbe3946e6"
>
</ReqRef><Comment>State S3: Connection to the Radio Network</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S3.ProposeDriverActions"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="071f7069-c2df-45c2-aef4-77e2ac5e91a7"
>
<States>
<State
 X="630"
 Y="300"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="ReceiveNetworkIDs"
 Guid="d6046b06-5164-4d56-bc54-8b10a0084456"
>
<ReqRef
 Id="88987d99-35ff-4f33-894e-06060476dc7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b04dc6d-9d56-4604-aac6-c4da8ae2fb74"
>
</ReqRef><Comment>If the list of networks is empty, the process goes to A29, otherwise it allows driver to select one of the proposed Radio Network ids.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S3.ReceiveNetworkIDs.NetworkIDsReceived"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4494d3fd-a533-4efa-a64d-6b8747ebf7c5"
>
<States>
<State
 X="111"
 Y="1"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="NetworkIDsReceived"
 Guid="708c704f-867e-48c7-9866-120d0a9cd7c8"
>
<Comment>When the Network IDs are received, display them to the Driver for selection.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="79b1b271-f61c-404d-86e9-2c149948fea8"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Offer change the Radio Network Id"
 Guid="20fce743-3441-45c7-a29f-76126469f7dc"
>
<ReqRef
 Id="88987d99-35ff-4f33-894e-06060476dc7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa5413f2-631d-40d4-ab56-4a41452f0146"
>
</ReqRef><Comment>If the list of networks is empty, the process goes to A29, otherwise it allows driver to select one of the proposed Radio Network ids.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Offer change the Radio Network Id"
 Guid="9425b5e5-c591-48ce-a65b-95ab80b83b02"
>
<PreConditions>
<PreCondition
 Guid="bdfd2aaf-0240-446d-9eee-f9de37124239"
>EURORADIO.RBCConnection.Contact.AvailableNetworks.RequestState == RequestEnum.Response</PreCondition></PreConditions>
<Actions>
<Action
 Guid="235c73db-6ad5-49f0-8c6f-d0e4f1cd4116"
>EURORADIO.RBCConnection.Contact.AvailableNetworks.RequestState &lt;- RequestEnum.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Check the list of networks"
 Guid="fe196b56-41e1-4869-b6b1-65a388c344af"
>
<Comment>If the list of networks is empty, the process goes to A29, otherwise it allows driver to select one of the proposed Radio Network ids.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E3"
 Guid="ad415df4-5146-4466-9303-f968c369c7e1"
>
<ReqRef
 Id="aaf6ac64-c5bf-4e56-9ed9-2cc794042907"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cacc73c2-7125-4cbb-9104-4e6f5ff41e73"
>
</ReqRef><Comment>If the list of networks is empty, the process goes to A29.</Comment>
<PreConditions>
<PreCondition
 Guid="9bfc3576-f1e1-4859-adc2-b6244737b4d0"
>EURORADIO.RBCConnection.Contact.AvailableNetworks.Networks == []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="21478aae-4b0b-4b85-861a-fe216b49e4fd"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A29</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="List not empty"
 Guid="417eb253-bc30-46f6-8d3b-92d38c570d83"
>
<ReqRef
 Id="5cc3aa7d-2f29-448d-ba8a-4b26df4678b0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3aeb6860-5838-4d1c-8770-a9d5c61764c8"
>
</ReqRef><Comment>The list is not empty =&gt; the driver is asked to select a Radio Network Id from the provided list.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0d13890a-fdb8-4bb2-a3c5-978e1acfb39f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S3.ReceiveNetworkIDs.DriverSelection</Action><Action
 Guid="4b5b8b50-d10d-4d84-a0e9-46e32601d7c0"
>DMI.MasterDMI().In_RBCContactInformation.PursueNetworkIDRequest(
    EURORADIO.RBCConnection.Contact.GetRBCContactInfoForSoM(),
    EURORADIO.RBCConnection.Contact.AvailableNetworks.Networks
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="221"
 Y="1"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DriverSelection"
 Guid="4b63cc76-56d4-4490-9302-8a0c2a42d9a7"
>
<ReqRef
 Id="5cc3aa7d-2f29-448d-ba8a-4b26df4678b0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46058e5b-99bb-4c52-94c7-bd964e358966"
>
</ReqRef><Comment>Once a Network has been chosen, proceed to Registration.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="5bf27bf8-e05e-4a2c-bae4-7a57c6823da9"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A Radio Network id is received"
 Guid="43d5797a-b60e-4564-acb4-a910d6f2ebb4"
>
<ReqRef
 Id="5cc3aa7d-2f29-448d-ba8a-4b26df4678b0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e46451d-d328-44c5-b60e-10a0206a5f89"
>
</ReqRef><Comment>When the driver selects the desired Radio Network id, the id is stored and the RBC connection data state is set to uknown.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A Radio Network id is received"
 Guid="83203dd1-ccb0-4b77-ac38-04689d8aab7e"
>
<PreConditions>
<PreCondition
 Guid="50d00a66-d9da-4f8c-b95e-4a01904298d8"
>DMI.MasterDMI().In_RBCContactInformation.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cb962547-e788-46e1-b257-5e6b0bf8e644"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S3.ReceiveNetworkIDs.Registration</Action><Action
 Guid="cfc2525a-8610-41b5-a1cc-a4ab529c69a8"
>DMI.MasterDMI().In_RBCContactInformation.WaitForSystemRequest(EURORADIO.RBCConnection.Contact.GetRBCContactInfoForSoM())</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Network id changed"
 Guid="5d1e9402-0702-4318-a6bc-69dd8089b5ab"
>
<ReqRef
 Id="5e931954-f188-4190-90e1-fde9d2d2ee5b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="08728734-17a6-4a4a-91c5-50467e7232a8"
>
</ReqRef><ReqRef
 Id="0d0678a7-632a-4a9e-9a4a-87d46d1383b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6f58b1b-cd87-435a-90f1-327a8cb36bad"
>
</ReqRef><ReqRef
 Id="865bbdd6-2010-4869-ab3e-bc538ce5fe4b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="672c32d1-9580-474c-b93c-5a3a2b311fec"
>
</ReqRef><ReqRef
 Id="573d0d6d-98df-43fa-8065-22f5dae937f3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c15e8c3-4504-4e9d-a33e-7732974e29e8"
>
</ReqRef><Comment>If the Radio Network id has changed, the RBC connection data state is set to uknown and the new radio terminal is registered.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Network id changed"
 Guid="2f821385-a47e-4cac-ad08-d1f2292762ba"
>
<PreConditions>
<PreCondition
 Guid="7a0a67c4-70ce-4131-86b0-4e94e173b5a6"
>DMI.MasterDMI().In_RBCContactInformation.NetworkId != EURORADIO.Terminal.LastKnownNetworkId</PreCondition></PreConditions>
<Actions>
<Action
 Guid="198cb14a-02da-4a00-8f9c-b5ddffc80be8"
>DeleteInformation(EURORADIO.RBCConnection.CurrentRBCConnection().ContactData)</Action><Action
 Guid="525893e1-c192-4679-9788-b1b77c5b89c3"
>EURORADIO.Terminal.RegisterMobileTerminals ( DMI.MasterDMI().In_RBCContactInformation.NetworkId )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="331"
 Y="1"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Registration"
 Guid="ef3eb9d0-c08b-454d-90e4-ab80f692c10e"
>
<ReqRef
 Id="3a73d38c-66b9-4e87-873d-9efe293f0f56"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="483b7394-358f-41d4-8bee-0a0c2db20e9b"
>
</ReqRef><Comment>Wait for the terminal to complete registry, then propose a new set of actions to the Driver.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="c0426b18-69d1-4389-a9b8-87316849a547"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Current Terminal is registered"
 Guid="83cd7df2-b0bc-4703-a753-d991269e88e8"
>
<Comment>Once the current terminal is registered with a Radio Network, propose the actions to the Driver once again.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Registration complete"
 Guid="e7b9ad69-87e9-4eb6-9093-fb6bcbbd9a71"
>
<PreConditions>
<PreCondition
 Guid="c3842935-7c87-4440-93fd-86ce9d1d5f50"
>EURORADIO.Terminal.TerminalIsRegistered(EURORADIO.Terminal.CurrentTerminal())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="923250f3-997b-4a5f-a8ac-29986744abdb"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S3.ProposeDriverActions</Action><Action
 Guid="41418547-9fa9-476e-b31b-ecc725e0e008"
>DMI.MasterDMI().In_RBCContactInformation.PursueRBCContactRequest(
    aActions =&gt; EURORADIO.RBCConnection.Contact.GetDriverActionsForSoM(),
    anRBCContactInformation =&gt; EURORADIO.RBCConnection.Contact.GetRBCContactInfoForSoM(),
    aAvailableNetworks =&gt; EURORADIO.RBCConnection.Contact.AvailableNetworks.Networks
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine><EnterAction>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Enter action"
 Guid="78530999-bd14-4d99-9c1c-c959c3e7544f"
>
<SubRules></SubRules>
</Rule></EnterAction>
</State><State
 X="110"
 Y="300"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="ActionsProposed"
 Guid="2714f59d-78fe-45a4-9d2f-23ac622d8693"
>
<ReqRef
 Id="88987d99-35ff-4f33-894e-06060476dc7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5161823-8510-432b-aa76-1b5c011aa714"
>
</ReqRef><Comment>If the driver elects to reenter the Radio Network Id, the on-boards requests the list of available ids to the Mobile Terminal(s).</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="697fce39-504a-4eaf-ab1d-83c0dcb70d68"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle driver&apos;s response"
 Guid="c057be40-20f5-48c3-84e3-839ed8b65364"
>
<ReqRef
 Id="88987d99-35ff-4f33-894e-06060476dc7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09795efc-c594-40ed-910b-ce98af1fd075"
>
</ReqRef><Comment>If the driver elects to reenter the Radio Network Id, the on-boards requests the list of available ids to the Mobile Terminal(s).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle driver&apos;s response"
 Guid="fec5e228-5b1f-461d-ac8e-76c0842fae43"
>
<PreConditions>
<PreCondition
 Guid="978fcd38-2d1b-41c9-b067-c2a86949f9ce"
>DMI.MasterDMI().In_RBCContactInformation.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle specific response"
 Guid="4bf01d41-c550-4d3a-a174-8e2d91f11bf4"
>
<Comment>If the driver elects to reenter the Radio Network Id, the on-boards requests the list of available ids to the Mobile Terminal(s).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver elects to enter network ID"
 Guid="5b621f77-849f-44a9-a077-544ae1bb1c12"
>
<Comment>If the Driver chooses to (re)enter the network ID, get a list of networks to propose to the Driver.</Comment>
<PreConditions>
<PreCondition
 Guid="97859259-41d4-460f-959b-32957ccade83"
>DMI.MasterDMI().In_RBCContactInformation.DriversSelectedAction == DMI.RBCContactActionEnum.ReenterNetworkId</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7b7d924d-761b-47f8-be56-b474e1f1ca84"
>EURORADIO.RBCConnection.Contact.AvailableNetworks.RequestState &lt;- RequestEnum.Request</Action><Action
 Guid="77eb59b8-5cb4-49e8-a2cc-2b2e2f7fa9a4"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S3.ReceiveNetworkIDs</Action><Action
 Guid="e5d6779b-57f1-40bc-84f9-0a94c117e215"
>DMI.MasterDMI().In_RBCContactInformation.WaitForSystemRequest(EURORADIO.RBCConnection.Contact.GetRBCContactInfoForSoM())</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E5"
 Guid="3211135f-4149-4d84-9ccc-59d8ec1b9698"
>
<Comment>If the Driver chooses another action, proceed to E5.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="005ab267-bbd1-4474-b5e5-217058561ce5"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A31</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update RBC contact options"
 Guid="805727e8-c699-491e-aff6-1176c19648f6"
>
<Comment>The driver&apos;s selected action is stored.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Driver elected to use last stored RBC number"
 Guid="baec451f-e8af-437c-80ab-fdb4df4493ca"
>
<ReqRef
 Id="369d7ae0-50db-411b-9941-bbe30e354733"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c65e7c9-fe72-4ab3-9dff-68b7032339de"
>
</ReqRef><Comment>Driver elected to use the last stored RBC number.</Comment>
<PreConditions>
<PreCondition
 Guid="32626884-e265-4849-a120-f71a520e02a6"
>DMI.MasterDMI().In_RBCContactInformation.DriversSelectedAction == DMI.RBCContactActionEnum.UseLastStoredNumber</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bf7bbae9-8b6d-4bd3-808a-af8eacf7b880"
>EURORADIO.RBCConnection.Contact.ContactOption &lt;- EURORADIO.RBCConnection.Contact.ContactOptionEnum.ContactLastKnownRBC</Action><Action
 Guid="c5f0fcde-b0a8-434e-866e-5328f0e3716b"
>EURORADIO.RBCConnection.Contact.SetNextRBCToContact(EURORADIO.RBCConnection.Contact.LastKnownRBC)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Driver elected to use on-board stored short number"
 Guid="4ec4b9eb-c19e-428b-9669-0c963fd8ef1e"
>
<ReqRef
 Id="40859515-77c4-46aa-96a5-12453cd171a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4493eed4-c270-419e-8311-4807c96987ef"
>
</ReqRef><Comment>Driver elected to use the on-board stored short number.</Comment>
<PreConditions>
<PreCondition
 Guid="05fe5311-ce1b-4720-a2da-3b1f06a376cf"
>DMI.MasterDMI().In_RBCContactInformation.DriversSelectedAction == DMI.RBCContactActionEnum.UseEireneShortNumber</PreCondition></PreConditions>
<Actions>
<Action
 Guid="95793100-26fa-4d28-b9e4-af14dded9d38"
>EURORADIO.RBCConnection.Contact.ContactOption &lt;- EURORADIO.RBCConnection.Contact.ContactOptionEnum.UseOnBoardStoredShortNumber</Action><Action
 Guid="da239881-0505-4849-9496-922b2c5e480c"
>EURORADIO.RBCConnection.Contact.NextRBCToContact &lt;- EURORADIO.RBCConnection.Contact.RBCContactStruct{
    Id =&gt; EURORADIO.RBCConnection.CurrentRBCConnection().ContactData.Id,
    PhoneNumber =&gt; EURORADIO.RBCConnection.Contact.ShortNumber,
    DataState =&gt; DataStateEnum.Valid
}</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Driver revalidated or entered new RBC contact information"
 Guid="a0a0468b-05fe-4e0c-9c3e-e22aa2ae39a1"
>
<ReqRef
 Id="cebfc056-7b96-49d7-a6ff-1fdf0076bb9e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e8368bf0-f055-4abd-93db-c3a1658a2785"
>
</ReqRef><Comment>Driver revalidated or entered RBC contact information.</Comment>
<PreConditions>
<PreCondition
 Guid="9525b908-7a51-4be2-9ea4-897bf2b5942e"
>DMI.MasterDMI().In_RBCContactInformation.DriversSelectedAction in [ DMI.RBCContactActionEnum.EnterContactInfo, DMI.RBCContactActionEnum.RevalidateContactInfo ]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9de675ca-f9a8-4377-9d0a-27e5939234d9"
>EURORADIO.RBCConnection.Contact.NextRBCToContact &lt;- EURORADIO.RBCConnection.Contact.RBCContactStruct{
    Id =&gt; DMI.MasterDMI().In_RBCContactInformation.RBCContactInformation.Id,
    PhoneNumber =&gt; DMI.MasterDMI().In_RBCContactInformation.RBCContactInformation.PhoneNumber,
    DataState =&gt; DataStateEnum.Valid
}</Action><Action
 Guid="9586b968-9340-42d6-807a-e7d9fecf2d34"
>EURORADIO.RBCConnection.Contact.ContactOption &lt;- EURORADIO.RBCConnection.Contact.ContactOptionEnum.RBCIdAndPhoneNumber</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="30"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="ProposeDriverActions"
 Guid="bd647c1a-2399-4122-ac9f-7681a0de7fff"
>
<ReqRef
 Id="88987d99-35ff-4f33-894e-06060476dc7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c1995d9-f24f-46f5-938f-2df7fc4603c9"
>
</ReqRef><Comment>In the beginning the driver is asked to select if he wants to reenter the Radio Network Id or not.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="1e690e0c-d434-4acc-9c5b-4dcbe110f500"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Offer currently possible actions to the Driver"
 Guid="ca6bcbe9-a6e3-4fa7-94d8-2855a7d09300"
>
<ReqRef
 Id="88987d99-35ff-4f33-894e-06060476dc7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="accdc62b-e654-478f-ba27-45c344550d97"
>
</ReqRef><Comment>In the beginning the driver is asked to select if he wants to reenter the Radio Network Id or not.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Propose Driver actions"
 Guid="3cfbfa67-eb12-470c-a026-ce3e13ee42f0"
>
<Comment>The driver can only request to select a new Radio Network Id.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="61891f14-3e04-4ca2-a56b-9e6c6f04364d"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S3.ActionsProposed</Action><Action
 Guid="295e1d05-4478-4870-97fd-1fa5d8fcf302"
>DMI.MasterDMI().In_RBCContactInformation.InitiateRequest
(
    aActions =&gt; EURORADIO.RBCConnection.Contact.GetDriverActionsForSoM(),
    anRBCContactInformation =&gt; EURORADIO.RBCConnection.Contact.GetRBCContactInfoForSoM()
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="10"
 Y="680"
 Width="600"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S10"
 Guid="aeee15e7-5c4d-483f-803d-01697bae5812"
>
<ReqRef
 Id="50de839c-3618-4979-b91c-f620d58a32ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d24b991c-443c-40c6-8ad6-80dd8c22b059"
>
</ReqRef><ReqRef
 Id="ea9e58d0-129c-4996-b7ee-105d84bad554"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="618d3a16-40ea-49a6-90b6-8f93eb6222bf"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S10.RequestDriverSelection"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="9a7e81e8-8f09-4c21-a07d-531ea8260058"
>
<States>
<State
 X="110"
 Y="70"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverSelection"
 Guid="cc3988ca-28fb-46f1-845d-04f2d52c7892"
>
<ReqRef
 Id="50de839c-3618-4979-b91c-f620d58a32ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="85f87056-22c7-4d99-8322-7edaf1aec9a0"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ec721afa-6c9b-4936-be3e-243886cafaf0"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request Driver selection"
 Guid="2a9b7c57-827b-4228-830f-4b953deb650c"
>
<ReqRef
 Id="50de839c-3618-4979-b91c-f620d58a32ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b4e22ee-421c-4776-8fd2-348819a38f52"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request Driver selection"
 Guid="6b1ef6d3-406a-48cb-b702-1a2ff4a59743"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="3ca18a1c-a5c4-4fa4-8df9-3a451ea588cb"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10.DriverSelectionRequested</Action><Action
 Guid="9a0b3d4f-3720-433f-98fb-44f7f282703c"
>DMI.MasterDMI().In_NonLeadingRequest.InitiateRequest()</Action><Action
 Guid="53277c45-afcc-4bb0-9d91-b72fbadceb57"
>DMI.MasterDMI().In_ShuntingRequest.InitiateRequest()</Action><Action
 Guid="1c386f42-892b-4d1e-9f0a-b64a3cdf7ac6"
>DMI.MasterDMI().In_TrainDataEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="220"
 Width="200"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DriverSelectionRequested"
 Guid="4a974a0c-ef4f-4a91-9394-ea51a6ebc724"
>
<ReqRef
 Id="d1306277-a43c-43f0-8e13-1a614a2dcac5"
 SpecId="7976a642-eab5-431b-a656-44fc19d26d62"
 Guid="a37083b2-3d29-4039-8f0d-d7cc69a777bc"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="d742b653-940b-4fa0-a5cc-be0779cd20ee"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E10"
 Guid="46843164-eb87-4ea5-890d-7386a7aa3c62"
>
<ReqRef
 Id="2df20d0d-1f50-4e04-aa20-f8d1ab4e0945"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5dfad688-dd8e-490d-85dd-2ba5d88dee7d"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E10: Non leading mode entry selected by driver"
 Guid="eb42270f-0553-4aa8-b9d0-43a26086ac11"
>
<Comment>DMI stops displaying 3 failure messages if they were present. For the transition procedure, see Condition46_SB.</Comment>
<PreConditions>
<PreCondition
 Guid="8a9f122d-645e-4adc-be29-94e2a938646b"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle train position data state"
 Guid="5c7d8c32-642f-42fc-af40-01631082304c"
>
<ReqRef
 Id="42a6f10f-1298-4815-a950-88ff26725dd5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a7d6d0f-d178-417c-b29a-3901da38376c"
>
</ReqRef><ReqRef
 Id="ebe785eb-406c-4459-b678-43e24f9ace82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="019a8057-55b7-4789-b604-9f795ff9d386"
>
</ReqRef><ReqRef
 Id="306aeada-d0ba-4101-bb87-96fc5db2a745"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1fc8bd34-dd41-418f-be12-9a8b87a6d92c"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Invalid to unknown"
 Guid="50807050-1584-43b3-8c5c-22288f4c55f7"
>
<PreConditions>
<PreCondition
 Guid="4ca1c8f8-fe99-434b-bd9f-79110a363508"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Invalid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="79efcaf9-d80b-4d4d-866c-698fc761c324"
>DeleteInformation(Kernel.TrainPosition.Position)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E11"
 Guid="4f406c6d-4bba-47fa-962a-3d1cf1438926"
>
<ReqRef
 Id="6fd0322c-1f7c-44ab-9b8d-3964217e243e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dfe19ef1-629c-4599-a11b-7f7ade1759c6"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E11: Train data entry selected by driver"
 Guid="f9417330-5200-485a-af28-8e119dc5e24c"
>
<PreConditions>
<PreCondition
 Guid="b1d83e04-3d7f-4cbe-898a-48ad9246b13e"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="95ad63ec-6c25-4487-9483-5761e7f0231f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S12</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="E12"
 Guid="d5324989-c96d-4b16-9c39-0928e2c735c5"
>
<ReqRef
 Id="84e4bf85-c73c-4fd2-a440-bc180869ec08"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b987d80c-6a48-4990-8b2e-3edede8f883c"
>
</ReqRef><ReqRef
 Id="3d01d017-72ad-4ae6-888e-a4e7f0241a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da690cb1-6de2-42b4-ae6d-186b6217756d"
>
</ReqRef><ReqRef
 Id="a7dfd21b-40f7-4ea2-8604-1cb1cf5a2a65"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c6e98a66-00f9-4377-8490-66bb771e6797"
>
</ReqRef><ReqRef
 Id="7c5af2d3-aa45-4d2e-b19d-ad71aaf624a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="65ea18e3-5d6b-4376-8f27-416e34b4b0c8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E12: Shunting selected by driver"
 Guid="426fd176-9cb0-454a-9fcc-5214dd4d25c8"
>
<PreConditions>
<PreCondition
 Guid="c927b463-cdd6-4bad-9979-0253bd8fac52"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="787e9a72-addd-4f4c-83f6-45bc400408a6"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver</Action><Action
 Guid="4f8db88e-3165-4661-bdc5-92c554074578"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.Disable()</Action><Action
 Guid="85d5c94d-3176-4321-980a-89906a0a0b71"
>DMI.MasterDMI().In_TrainData.InputInformation.Disable()</Action><Action
 Guid="463167fb-e523-4010-bd09-8a3064471d6d"
>EURORADIO.RBCConnection.Contact.ContactLastKnownRBC()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle train position data state"
 Guid="a7dc8176-fc58-476a-b2a7-d4c26b3f6918"
>
<ReqRef
 Id="42a6f10f-1298-4815-a950-88ff26725dd5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="55806cf6-b223-4c98-a0ae-6ecc35390df3"
>
</ReqRef><ReqRef
 Id="ebe785eb-406c-4459-b678-43e24f9ace82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2af2a6db-9d8e-449b-baab-26f8dfba4f0f"
>
</ReqRef><ReqRef
 Id="306aeada-d0ba-4101-bb87-96fc5db2a745"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e25793e6-effc-4cd0-996f-ab030d4455a8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Invalid to unknown"
 Guid="a2d4d48f-96c7-445a-a1d4-4f0b05fbe1ab"
>
<PreConditions>
<PreCondition
 Guid="4a508c30-f61e-4642-9bfb-c5b8e95e99cd"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Invalid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b1b30221-d9e3-4334-ab87-404ba1068590"
>DeleteInformation(Kernel.TrainPosition.Position)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Allow start"
 Guid="e74295f9-ee9c-467a-ac7a-c5362179d7bb"
>
<ReqRef
 Id="28015708-3b6f-4bfb-87a2-4901cf481c50"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f668c76e-0471-486f-a788-0a01ff8af676"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow start for state S10"
 Guid="cf3ba06a-0984-4f85-83ba-3886d02f2e07"
>
<PreConditions>
<PreCondition
 Guid="267dcd69-cf04-4818-90af-fbe4cb809ecc"
>TrainData.TrainData.DataState == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="23faafc8-0efc-4100-bed6-360515d34d9c"
><Comment>One should not offer the possibility to start the mission in level 2 or 3 if no terminal is registered (A29) or the RBC session could not be opened (A32) or the RBC rejected the train (A39).</Comment>
NOT (Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3] AND (NOT EURORADIO.Terminal.TerminalIsRegistered(EURORADIO.Terminal.CurrentTerminal()) OR EURORADIO.RBCConnection.CurrentRBCConnection().SafeRadioConnectionStatus in [ EURORADIO.RBCConnection.SafeRadioConnectionStatusEnum.ConnectionLostOrSetUpFailed, EURORADIO.RBCConnection.SafeRadioConnectionStatusEnum.NoConnection] OR Kernel.TrainPosition.Position.DataState == DataStateEnum.Unknown))</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow to select start"
 Guid="c076db8f-11d7-4882-a003-09883035d72d"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Start not yet proposed to driver"
 Guid="b9654a3c-04e5-4252-aa03-c6be3748f6a2"
>
<PreConditions>
<PreCondition
 Guid="87f7a9ed-ebd1-4cd5-a6ce-ce894391339c"
>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="3959ee3f-73e9-4dbe-b9a8-638b8e1f497f"
>NOT DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a0088699-6873-421d-b5f3-ebd7f80418a5"
>DMI.MasterDMI().In_Start.InitiateRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected Start"
 Guid="249222a4-2d7e-4b3a-a8e1-750bc23c7c4e"
>
<PreConditions>
<PreCondition
 Guid="e266fc27-fc1a-4f39-80f2-5121e320f6eb"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b95bdeb8-4524-4f82-b3a4-c151eefa7456"
>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Select state according to level"
 Guid="1d9c325c-b8dd-4592-b291-cc3f50e374ba"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0"
 Guid="ef188dcc-4a94-4f59-b60f-dd2a148a696e"
>
<PreConditions>
<PreCondition
 Guid="c4df8dcf-f178-42b9-9807-fb70c26e333d"
>Kernel.Level.Value.Value == LevelEnum.L0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f0015543-7d59-4953-84d7-173971398225"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S23</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level NTC"
 Guid="6a0afb84-6d0d-4eb2-b34d-ad61e718b09c"
>
<PreConditions>
<PreCondition
 Guid="39318056-06b5-454e-84e2-951f64c30df1"
>Kernel.Level.Value.Value == LevelEnum.LNTC</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ae24502b-c0ff-497a-89bd-769ee164563d"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S22</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 1, 2 or 3"
 Guid="02bd5d97-498c-4b07-b60a-d09e3bff9c6c"
>
<PreConditions>
<PreCondition
 Guid="7cdd4b04-cfc8-4daa-9ec8-4b5561935578"
>Kernel.Level.Value.Value in [ LevelEnum.L1, LevelEnum.L2, LevelEnum.L3 ]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f119d8e6-ecd4-47a5-8eba-966ecc41f707"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S24</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine><LeaveAction>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Leave action"
 Guid="c17cca68-89ef-4195-b5e4-390a98238e87"
>
<ReqRef
 Id="2812be46-6d39-4894-be55-c728964a7c49"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a05f205-834e-47b4-aa83-70da545f7890"
>
</ReqRef><ReqRef
 Id="c01d4cc9-6034-43bf-ba70-4d4fe10dffd9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="12776ba1-7de8-4a46-a445-541f6488901e"
>
</ReqRef><ReqRef
 Id="b9721346-42ac-4a79-8f62-10d5ff6a5abb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03412406-88e8-4018-a62b-af411d3c823f"
>
</ReqRef><ReqRef
 Id="5aca3d45-a3d1-4286-a5a4-f451779e43d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2230abc4-bf19-47de-b816-c2e6a8c852c4"
>
</ReqRef><ReqRef
 Id="1e7f3c89-d89b-4d31-b758-514c92ae3bf1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="00f1057b-fcf1-4185-9231-5ca2a9193a99"
>
</ReqRef><ReqRef
 Id="aba0e684-4967-4fc6-850e-d080a2909bc5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f95e2461-5ada-4191-8375-9fb8f00d7f09"
>
</ReqRef><ReqRef
 Id="60a884ee-664d-4031-988d-f9da13132152"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="edb0422a-8cea-4d1d-baba-fe5c5c9ddb26"
>
</ReqRef><ReqRef
 Id="414a7ad9-32f1-4118-b34f-18656d60445f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c090344a-0ab0-4c5b-a6da-6327f8f92cf8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Leave action"
 Guid="766e4bb1-55c1-4a93-9a5a-df255afa7cf0"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="213f82ce-2bb9-438e-82c2-b37c0f5a3226"
>DMI.MasterDMI().In_OverrideRequest.InputInformation.Disable()</Action><Action
 Guid="113cdbac-49a3-49ac-805e-4f4d3e57dd21"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.Disable()</Action><Action
 Guid="ede8a625-d338-45e4-8c53-4e75b633c3df"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.Disable()</Action><Action
 Guid="7f2044e4-c436-415e-8c17-f6d0fff83823"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.Disable()</Action><Action
 Guid="13f8a3cd-351f-496b-895b-c329eee7f562"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.Disable()</Action><Action
 Guid="2e192d4a-bab4-439d-b95b-d9d6cac1ca80"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.Disable()</Action><Action
 Guid="c345c908-e6d1-45ea-95f7-2566f04dcee5"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.Disable()</Action><Action
 Guid="5ad043a3-9b93-4200-88f4-cbdf65c181e1"
><Comment>Stops displaying the RadioNetworkRegistrationFailed message if it was.</Comment>
DMI.MasterDMI().Out_RadioNetworkRegistrationFailed.DisplayStartTime &lt;- EMPTY</Action><Action
 Guid="d8aa655b-5879-4b71-a5ed-cab5390477fd"
><Comment>Stops displaying the TracksideNotCompatibleMessage if it was.</Comment>
DMI.MasterDMI().Out_TracksideNotCompatible.OutputInformation.DoNotDisplay()</Action><Action
 Guid="8cd8327e-8c55-4a11-93c7-45b1987a6961"
><Comment>Stops displaying the TrainIsRejectedMessage if it was.</Comment>
DMI.MasterDMI().Out_TrainIsRejected.OutputInformation.DoNotDisplay()</Action></Actions>
</RuleCondition></Conditions>
</Rule></LeaveAction>
</State><State
 X="910"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S11"
 Guid="ef58548b-dfa1-48be-a2b7-58485982aabc"
>
<ReqRef
 Id="8b735562-2ede-429c-940c-7f53b0f6f675"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d407d46-bb27-4db3-9cc6-31a4ab975b7e"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S11.SendTrainData"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="1c48dc61-7381-4933-afb7-6d9e7e561574"
>
<States>
<State
 X="60"
 Y="60"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="SendTrainData"
 Guid="0a73c2b2-6d91-407f-9b18-d53adaa41a63"
>
<ReqRef
 Id="8b735562-2ede-429c-940c-7f53b0f6f675"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2211a357-fc01-4b6f-a994-f7169e4f46fe"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="9c272947-25d6-487a-8ee3-01d6f565e308"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send train data"
 Guid="4750bd03-a18c-4bf5-9811-d2af62138771"
>
<ReqRef
 Id="8b735562-2ede-429c-940c-7f53b0f6f675"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2dfe333f-a472-464d-a69a-e35056f51cc7"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send train data"
 Guid="7f54bd15-721a-4574-ad40-23c690ef1cea"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c93836d3-b09a-4d4a-b58a-1cfad22208e6"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendValidatedTrainData()</Action><Action
 Guid="25234284-7931-4c74-95e3-64f894c62a48"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S11.TrainDataSent</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="170"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="TrainDataSent"
 Guid="bfd5ee23-16f4-4b10-8703-19d5429d4962"
>
<ReqRef
 Id="ae08f54c-5656-462e-9c38-46eec850f45a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a48e559-6460-4097-9c7d-d5f778a063ad"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="d3e32352-44bb-42cf-9a65-36116d1c0b81"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="E14"
 Guid="16b2d8fd-96a0-41b8-9ca7-a12b48068b4a"
>
<ReqRef
 Id="ae08f54c-5656-462e-9c38-46eec850f45a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f04e9ec8-3b1e-43ca-b6cb-0fbd2e82353e"
>
</ReqRef><ReqRef
 Id="2cee38e9-4ac3-4eb5-a235-17b2c0e36064"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7062d854-dbb2-4c9a-a119-a72eeacf24bf"
>
</ReqRef><ReqRef
 Id="64dae4f0-7a7b-4908-8fa8-6f082446f198"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a6e000f-4a0d-4d43-aee1-69d03b05ee34"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E14"
 Guid="37f73cc6-43bf-43ce-ae2a-0fd839a473fa"
>
<PreConditions>
<PreCondition
 Guid="fa5ebf7a-bef7-4b7f-89cb-3a7476c280c7"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage(EURORADIO.RBCConnection.CurrentRBCConnection()).ACKNOWLEDGEMENT_OF_TRAIN_DATA )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="397ea484-7ad6-41e6-b5a6-c34208a005e0"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S20</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="280"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S13"
 Guid="074cbb2d-3d1f-4b7a-af9d-5ed444738989"
>
<ReqRef
 Id="4549d882-b756-48ca-9591-ed094820a8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dd1f9bb-0aba-40e9-ad88-26a5240e1a7b"
>
</ReqRef><Comment>State S13: The on-board equipments proposes to the driver to reenter or validate the train running number.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S13.ProposeTrainRunningNumberEntry"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="8cc41f15-ec07-48f2-a770-e3f31cc1011d"
>
<States>
<State
 X="110"
 Y="60"
 Width="250"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProposeTrainRunningNumberEntry"
 Guid="67746203-79a7-4442-a25d-a3ac52989d59"
>
<ReqRef
 Id="4549d882-b756-48ca-9591-ed094820a8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e140997e-9645-49f5-82b9-052a5c855268"
>
</ReqRef><Comment>The on-board equipment proposes to enter the train running number.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e9b2610a-3e37-42be-9866-39395468612a"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request train running number"
 Guid="0be64240-8b8b-4de7-a9b0-f2554315a0f7"
>
<Comment>The on-board equipment proposes to enter the train running number.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid train running number"
 Guid="1746bdf7-9cd6-4d48-bb08-cab722620d71"
>
<PreConditions>
<PreCondition
 Guid="da2163c2-8559-4741-9074-7b6f0cf21115"
>Kernel.TrainRunningNumber.DataState == DataStateEnum.Invalid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0ac8622f-25d6-4e3a-acd0-dc80b595016a"
>DMI.MasterDMI().In_TrainRunningNumber.InitiateRequest
(
  aNumber =&gt; Kernel.TrainRunningNumber.Value, 
  aEnter =&gt; True, 
  aReValidate =&gt; True
)</Action><Action
 Guid="ba6a0e32-4453-451e-a987-d657f1d5f861"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S13.TrainRunningNumberProposed</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown train running number"
 Guid="f47f9fa2-fb96-4eaf-8280-a686638807be"
>
<PreConditions>
<PreCondition
 Guid="733e9a07-b1f0-4b8b-8e39-601bc1e14072"
>Kernel.TrainRunningNumber.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="27775e3f-6a9f-41e7-bba5-77290d1190ec"
>DMI.MasterDMI().In_TrainRunningNumber.InitiateRequest
(
  aNumber =&gt; &apos;&apos;, 
  aEnter =&gt; True, 
  aReValidate =&gt; False
)</Action><Action
 Guid="d3426dfc-0203-4a63-9691-20a186a2487a"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S13.TrainRunningNumberProposed</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="210"
 Width="250"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TrainRunningNumberProposed"
 Guid="3cb0a181-a0b4-4211-b9c5-f0e7ed9bd867"
>
<Comment>The driver selected to enter the train running number. Once the data is entered and validated, the process goes to D10.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="666b37b1-112b-4834-97d3-77bd1dd1b4d2"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Driver responded"
 Guid="0fc55ec3-0ee1-403c-8454-76d82640a6d3"
>
<ReqRef
 Id="4549d882-b756-48ca-9591-ed094820a8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9af79982-584f-41ee-9538-4687e22b8183"
>
</ReqRef><Comment>The driver selected to enter the train running number =&gt; the train running number entry is displayed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver closed the window"
 Guid="176386ad-94e3-4681-b27f-87bf09f7997e"
>
<PreConditions>
<PreCondition
 Guid="c8bdc772-3686-480b-8186-02a614b4aa15"
>Kernel.TrainRunningNumber.DataState != DataStateEnum.Valid</PreCondition><PreCondition
 Guid="5cca0c9d-d3cb-4563-88da-4902c33524e8"
>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ab922002-922f-478a-b549-891214039c25"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S13.ProposeTrainRunningNumberEntry</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E18: train running number is valid"
 Guid="1bb65cd2-5e95-4563-a2f6-da183dd9b410"
>
<ReqRef
 Id="f4b839b3-d1ea-4c3b-8a2b-8bda94f934c3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c49fff60-18c0-40ab-8a0f-517dff3eec9e"
>
</ReqRef><Comment>When the train running number status becomes valid, the procedure goes to D10.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E18"
 Guid="5402d51a-615e-4bf5-ad3b-7bb20557019e"
>
<PreConditions>
<PreCondition
 Guid="deb5e04d-f765-458b-959e-179614f9869d"
>Kernel.TrainRunningNumber.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="445c53d3-c0ee-4c2d-b180-eae97d2f0316"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="860"
 Y="680"
 Width="600"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S20"
 Guid="32a9ff38-ef60-4081-9725-f4c49c6042ba"
>
<ReqRef
 Id="c70a632c-3b48-4d02-90f3-3e843c5c1ea1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49c4165d-c813-4843-aa0b-78bebdfef8a0"
>
</ReqRef><ReqRef
 Id="ea9e58d0-129c-4996-b7ee-105d84bad554"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="124b51d5-fcbb-4551-a1cf-4acc0589ff89"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S20.ProposeStart"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e55368ea-64bc-4917-8921-d31f2f518dc9"
>
<States>
<State
 X="60"
 Y="60"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="ProposeStart"
 Guid="212daab6-89d8-435c-be31-9c810f19e43f"
>
<ReqRef
 Id="c70a632c-3b48-4d02-90f3-3e843c5c1ea1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bba8429e-7b36-4295-a9a2-353df85e961c"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="0c4be730-d24b-4c12-b419-66734f991811"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Start proposed"
 Guid="30dd14a1-2200-4fc5-803e-ca996e0a8059"
>
<ReqRef
 Id="c70a632c-3b48-4d02-90f3-3e843c5c1ea1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="394aec20-cbac-4322-ae78-26636488ea6f"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Start proposed"
 Guid="6f4de55c-013d-4215-875c-92d144cc3580"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6464cf64-f89b-4404-b60a-859c419b5b7c"
>DMI.MasterDMI().In_Start.InitiateRequest()</Action><Action
 Guid="ed50ddde-dc42-4393-841f-8655b39817ba"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S20.StartProposed</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="180"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="StartProposed"
 Guid="634ffa90-fdce-49db-b5e5-13f9748477c0"
>
<ReqRef
 Id="eae06a67-b3dd-4f7a-9192-5393b3e88155"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f389262-5f5e-4e28-b143-4326259b1822"
>
</ReqRef><ReqRef
 Id="77e79e6f-9bfd-4470-b548-0d714c901a83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0b934329-c7e1-4b40-9063-40203ba25583"
>
</ReqRef><ReqRef
 Id="f83b0295-446e-4191-b73b-dc8da983ead7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b103908e-cb7c-4f11-aa9d-ce07ad2274ce"
>
</ReqRef><ReqRef
 Id="f8b0528a-9c12-4ef5-9509-bcb0bff33a6e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f81b56de-215f-4a9d-8d1f-d0afac5c1cb0"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="934222a8-5d0c-4e7b-8dbb-f899d0465d42"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E20"
 Guid="cecb4c70-fa21-4d2c-b92d-65a1a0a79873"
>
<ReqRef
 Id="eae06a67-b3dd-4f7a-9192-5393b3e88155"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1934415b-bdf1-4c83-aaaa-3ebddd322086"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E20"
 Guid="ece3b6aa-5531-42f1-8eca-f1039e7b3251"
>
<PreConditions>
<PreCondition
 Guid="0f38f13d-2c67-44af-8eb6-f2324414f31b"
>Kernel.Level.Value.Value == LevelEnum.LNTC</PreCondition><PreCondition
 Guid="cfb38227-d19a-4b36-ae2a-324e7cf659f2"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1672933f-5a0a-4e83-ad0b-e0322a0adfbd"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S22</Action><Action
 Guid="0c54d336-9fc4-45d7-865f-cca4a3896bd3"
>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E21"
 Guid="42cc0304-2c99-484a-93ed-ff0e19140dd6"
>
<ReqRef
 Id="77e79e6f-9bfd-4470-b548-0d714c901a83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="53a31ac8-8d44-4e88-8827-aac0707051db"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E21"
 Guid="4612ea93-c5ac-4d44-ba2e-aa6db5920408"
>
<PreConditions>
<PreCondition
 Guid="6394cd31-5792-4a11-8901-bc6470b22cc0"
>Kernel.Level.Value.Value == LevelEnum.L0</PreCondition><PreCondition
 Guid="c26c8e48-5aa0-4674-a52b-a1b1609aa2c3"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7319bcc7-95e5-4aea-9c68-0c22e7de70d2"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S23</Action><Action
 Guid="20c0cb5e-5251-4204-bfe5-af33d2dce062"
>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E22"
 Guid="b3d9da9e-9659-4cbc-b4ff-f8ac6d457fd4"
>
<ReqRef
 Id="f83b0295-446e-4191-b73b-dc8da983ead7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="209bed0f-b3ff-4e7d-90e3-220471cde71b"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E22"
 Guid="456caac7-60aa-4359-a30b-522f0a47f520"
>
<PreConditions>
<PreCondition
 Guid="56862dda-61a7-4c31-a336-34047a5b7f23"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition><PreCondition
 Guid="48f3282c-3599-46fe-884c-848cb1162acd"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c1eca809-9715-43ef-bb03-9d2abb642e82"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S24</Action><Action
 Guid="5868bcdf-58a1-4901-87f2-40009b460da4"
>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E24"
 Guid="80c560f0-4ca8-4e37-acfb-2c4af90fba0f"
>
<ReqRef
 Id="f8b0528a-9c12-4ef5-9509-bcb0bff33a6e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a89c80b-3194-47b2-ab98-530576169448"
>
</ReqRef><ReqRef
 Id="2ac2d446-1ee9-4dbb-90d3-7ae063cd2925"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc17b8f7-7b00-4d17-b777-6573b2e17657"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E24"
 Guid="2d42a96d-809c-495b-a448-08a4de44f001"
>
<PreConditions>
<PreCondition
 Guid="706c846d-4108-450f-bad8-e0279061baf0"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition><PreCondition
 Guid="9a3b9345-3449-4f77-ab60-d7dba536fd75"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="bc451d22-07d6-4b60-9343-e13e2512041f"
>Kernel.ActiveFunctions.RequestMA_StartSelected()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="535cf889-b49c-4fe5-936f-8207a42556b0"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S21</Action><Action
 Guid="1e48cc1e-f10d-4704-adc7-f0583a725eba"
>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- RequestEnum.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow reenter train data"
 Guid="8e97dbf7-a0a0-426b-8250-174066d063db"
>
<ReqRef
 Id="5aca3d45-a3d1-4286-a5a4-f451779e43d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c957c67-f9fa-464e-b02a-3e4269c3b14f"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter train data in state S20"
 Guid="827376f1-bc74-4e7d-b49e-12519f46fcaa"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow Re-enter train data"
 Guid="d635f64e-2d9c-4675-ab6c-708c025af804"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter train data not yet proposed to driver"
 Guid="a20ee32c-4126-454d-b6dc-8c35f47ce17f"
>
<PreConditions>
<PreCondition
 Guid="38f3b44b-5a89-41ee-b95f-25ad79bd1cbd"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="ddbcc9d5-bbaa-4c8f-bbf1-36f2aca703a9"
>NOT DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="923ea094-6be5-481e-94d1-8cdc8568db9d"
>DMI.MasterDMI().In_TrainDataEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected to reenter the train data"
 Guid="43c1c99c-50f3-40b2-ba7d-cfbc3c503509"
>
<PreConditions>
<PreCondition
 Guid="f261ffb0-3546-4eb3-b92e-2e561dd1e3e6"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a59bd1e1-eb5a-476d-9a84-03cc15848aba"
>DMI.MasterDMI().In_TrainDataEntryRequest.AcceptDriverResponse()</Action><Action
 Guid="a4ac237c-1c31-4a32-b94b-4140748d8b8b"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S12</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow non leading"
 Guid="f9abbd32-7930-42a1-9ae2-d66572827bc3"
>
<ReqRef
 Id="4691efdb-b90a-4120-a11d-7598ae98c8c7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cda968fb-767a-415b-b0c2-b89c0977120c"
>
</ReqRef><ReqRef
 Id="aba0e684-4967-4fc6-850e-d080a2909bc5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f74127e-5ea4-4818-a297-52dbf80bc862"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow non leading for state S20"
 Guid="48964fd4-dfdb-4aea-9183-509a1c5a2242"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow to select non leading"
 Guid="63b32485-8609-4d06-8910-f52780c19e37"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Non leading not yet proposed to driver"
 Guid="4553da4b-74a5-4893-8c60-55953c9995cb"
>
<PreConditions>
<PreCondition
 Guid="6fe25d70-5c98-4813-8f67-081163d450dd"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="28d21e74-b5c5-4d5a-81c5-631b8d70a4b2"
>DMI.MasterDMI().In_NonLeadingRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow shunting"
 Guid="0553eba0-b4db-470d-9fac-2b61a3ee222a"
>
<ReqRef
 Id="4691efdb-b90a-4120-a11d-7598ae98c8c7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97b18db0-5d28-4d29-bbcc-1ef7c12a52c9"
>
</ReqRef><ReqRef
 Id="60a884ee-664d-4031-988d-f9da13132152"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6a493f1-2900-4971-aae4-07aacdef2ff3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow shunting for state S20"
 Guid="2b7a32ee-ff14-40e3-ae44-00a9c88a6bd5"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow to select shunting"
 Guid="b2112eb9-935e-47aa-9618-a8f1fdbc889f"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Shunting not yet proposed to driver"
 Guid="92bea7f0-aafd-412b-b5ba-44052a613683"
>
<PreConditions>
<PreCondition
 Guid="27a382ca-0787-4ca5-86b0-b911ad8c8c23"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="87b43ff5-5833-4940-9556-50a2e7781480"
>NOT DMI.MasterDMI().In_ShuntingRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="47ea6985-2b83-4d62-8bdb-f5b4faa5fd71"
>DMI.MasterDMI().In_ShuntingRequest.InitiateRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected shunting"
 Guid="6c4d41f8-ea61-4072-9bee-9ec3ae9720d4"
>
<PreConditions>
<PreCondition
 Guid="16255eeb-178a-4a42-b934-0186c3c46791"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fcbf15da-671f-480a-b77c-ed25a0c97f53"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Check position validity"
 Guid="54147e7d-cb59-4f21-a140-3e30ecfa3775"
>
<ReqRef
 Id="306aeada-d0ba-4101-bb87-96fc5db2a745"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c9c3b34-bd06-420b-b316-1a5cb1d64b80"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid position"
 Guid="5a728e6f-4915-48eb-92b8-f243b3595311"
>
<PreConditions>
<PreCondition
 Guid="1d9252be-cc50-4a2c-b90b-223f5d8f3071"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Invalid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="db7f4317-778f-47b3-905a-339bb5029e59"
>DeleteInformation(Kernel.TrainPosition.Position)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine><LeaveAction>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Leave action"
 Guid="e070b6e3-269c-4c46-b526-78c9e3e98c6e"
>
<ReqRef
 Id="2812be46-6d39-4894-be55-c728964a7c49"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6b8203c9-1be6-4296-add6-5daac242b656"
>
</ReqRef><ReqRef
 Id="c01d4cc9-6034-43bf-ba70-4d4fe10dffd9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="829495d0-8955-41ae-8386-b321b61b4e2c"
>
</ReqRef><ReqRef
 Id="b9721346-42ac-4a79-8f62-10d5ff6a5abb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6ac66e3-4ef8-45ce-91bd-d3555d8c2224"
>
</ReqRef><ReqRef
 Id="5aca3d45-a3d1-4286-a5a4-f451779e43d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc3dc298-8823-4fe3-9864-908bb61d386e"
>
</ReqRef><ReqRef
 Id="1e7f3c89-d89b-4d31-b758-514c92ae3bf1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="87da6fae-ba78-4a40-a310-ec70b638c4bc"
>
</ReqRef><ReqRef
 Id="aba0e684-4967-4fc6-850e-d080a2909bc5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a15b33e-a467-4304-89af-85ff8061246e"
>
</ReqRef><ReqRef
 Id="60a884ee-664d-4031-988d-f9da13132152"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b33304b-0c76-4787-9088-d682f5ea5c3a"
>
</ReqRef><ReqRef
 Id="414a7ad9-32f1-4118-b34f-18656d60445f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d98b98bf-2a4b-480c-b5fd-ce1f23907001"
>
</ReqRef><Comment>Actions to reset the data entry options upon leaving state S20</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Leave action"
 Guid="fae572dc-9d41-43a6-b7dc-44514bc9c15f"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="3d8e65d5-bccf-458d-a86c-4605e9085cf9"
>DMI.MasterDMI().In_OverrideRequest.InputInformation.Disable()</Action><Action
 Guid="950de50f-a730-4f40-bd1c-34639abee1aa"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.Disable()</Action><Action
 Guid="ef24a316-cfce-4797-891b-c2b06b2f73b6"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.Disable()</Action><Action
 Guid="e5c29bfe-3fb6-4fbd-b3a2-79267ae2e132"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.Disable()</Action><Action
 Guid="edac98b4-65ce-4af3-bdbf-722b384b1410"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.Disable()</Action><Action
 Guid="ab1200c6-542a-4aa7-b56a-8c4b36759f42"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.Disable()</Action><Action
 Guid="f9e8b85d-95f2-40bc-aca4-0dcc38eb2432"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.Disable()</Action></Actions>
</RuleCondition></Conditions>
</Rule></LeaveAction>
</State><State
 X="550"
 Y="880"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S24"
 Guid="15a7f2db-53a6-4e6c-813b-033d62d4ba86"
>
<ReqRef
 Id="b993b468-098e-45b6-9120-8f3a2608780a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b15b646-fa46-4e62-9f1d-4f585b9ea2fb"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S24.RequestDriverAck"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="2746c965-e48c-4126-ad91-fc328467e3a9"
>
<States>
<State
 X="40"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
 Guid="f11ea33e-8286-45ae-802d-c8714b7c9349"
>
<StateMachine
 Implemented="TRUE"
 Guid="26c58b42-a54c-4d39-92b0-2d2e6742ee86"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver acknowledgement"
 Guid="abb3d861-e7b2-4387-a1b1-f0db83c31716"
>
<ReqRef
 Id="b993b468-098e-45b6-9120-8f3a2608780a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="feb7bcd0-5086-4f33-8714-3431a39a7133"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver acknowledgement"
 Guid="1df07749-4bd7-416c-b055-f7e3ac235edc"
>
<PreConditions>
<PreCondition
 Guid="b4ad20ab-c373-46bb-ab33-5b7101bde35c"
>DMI.MasterDMI().In_AcknOfSRMode.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7af6368a-0121-4c32-ba51-1820f2d758c5"
>DMI.MasterDMI().In_AcknOfSRMode.InitiateRequest()</Action><Action
 Guid="b0bc1e94-01eb-4df2-a3b3-2c8eb95e51b7"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S24.DriverAckRequested</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="350"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
 Guid="4b76bcf7-89cd-48b9-b9e9-a1561d1dce94"
>
<StateMachine
 Implemented="TRUE"
 Guid="008b8155-25d4-43be-9e66-bbe94e75976f"
>
</StateMachine></State></States>
</StateMachine></State><State
 X="1030"
 Y="880"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S25"
 Guid="4a8e71b3-e752-43a3-9258-9ea48db72854"
>
<ReqRef
 Id="9987667c-60f8-4136-98e0-3bb720a91f76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a8f79f89-f8c9-4db1-9567-6c48d1ab672a"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S25.RequestDriverAck"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ecc0ca72-8751-4044-834c-bd1c4e3c804c"
>
<States>
<State
 X="40"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
 Guid="2ba494e2-8e81-476b-907f-462cd662eeb7"
>
<StateMachine
 Implemented="TRUE"
 Guid="f319564f-5e61-410b-aab8-81d42f1539a3"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver ack"
 Guid="391cbeda-0dad-4fbf-9275-360b14ecead3"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for LS"
 Guid="0b8cf01d-f67b-41db-8c3f-16b2567269da"
>
<ReqRef
 Id="8c7eb4ff-2716-4d9f-a6f2-bd52aacc416b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d45fde5c-645a-46b2-9a3b-22941df2653d"
>
</ReqRef><ReqRef
 Id="aa3f1b72-e48c-4c84-af17-db6bfe3c11b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="510b6242-c3ba-455f-ab39-c046a20a2d44"
>
</ReqRef><ReqRef
 Id="9987667c-60f8-4136-98e0-3bb720a91f76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c82af150-58e3-4f9c-a11e-95cee867d552"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="8cb5c652-2d65-4628-9f4d-d2c03912f63c"
>Kernel.MA.ModeProfile.CurrentMode() == ModeEnum.ModeProfile.LS</PreCondition></PreConditions>
<Actions>
<Action
 Guid="df66622a-f945-4112-acc7-25b9c04f84cc"
>DMI.MasterDMI().In_AcknOfLSMode.InitiateRequest()</Action><Action
 Guid="2e556ad9-2cbd-4d21-a6fc-d14ffb56af21"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S25.DriverAckRequested</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for OS"
 Guid="8f6dfcc2-b659-4eef-a652-7396606977ac"
>
<ReqRef
 Id="4ebd4845-9d08-4721-8788-6991ab66d3eb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c4cf829-cef4-4200-83a9-f156ca682809"
>
</ReqRef><ReqRef
 Id="c7906978-32c5-4b29-bb48-bb2bb5d7190b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72cbd584-9cfa-4892-8000-8c9dd3ff2636"
>
</ReqRef><ReqRef
 Id="9987667c-60f8-4136-98e0-3bb720a91f76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a3c594c-688a-4724-a7e1-612b45be39be"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="e203a0df-4eb5-465d-9f1d-580d56f0213a"
>Kernel.MA.ModeProfile.CurrentMode() == ModeEnum.ModeProfile.OS</PreCondition></PreConditions>
<Actions>
<Action
 Guid="47394cdf-5bcc-499d-92dd-259bbdb4488b"
>DMI.MasterDMI().In_AcknOfOSMode.InitiateRequest()</Action><Action
 Guid="66ca8a50-e72c-4db9-9631-001f621bd893"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S25.DriverAckRequested</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for SH"
 Guid="f6dce942-b50f-48dd-bb21-bc970890c498"
>
<ReqRef
 Id="39ae88ad-20ca-43d1-8c3f-5f7172777b6e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dba35c8-6213-4043-835b-e10c4791d699"
>
</ReqRef><ReqRef
 Id="91e483bb-c16e-4c94-8256-d3dcf2d0e0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="abf479bd-b34d-4b83-8a99-168cc7614d8b"
>
</ReqRef><ReqRef
 Id="9987667c-60f8-4136-98e0-3bb720a91f76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73a85e59-a4f4-461c-a078-6bfe7c6e2c77"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="8989b7fd-3a2f-471a-98b7-f1cf9e908f1c"
>Kernel.MA.ModeProfile.CurrentMode() == ModeEnum.ModeProfile.SH</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dcf74279-c0cd-49ac-a698-2ac766fc4fc1"
>DMI.MasterDMI().In_AcknOfSHMode.InitiateRequest()</Action><Action
 Guid="20827fa0-5187-4524-8f10-7b37099c761e"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S25.DriverAckRequested</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="350"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
 Guid="07a5d15e-f606-4405-a708-7f86c5401e70"
>
<StateMachine
 Implemented="TRUE"
 Guid="4a902acb-7a27-4b20-8fec-e4bff798db2d"
>
</StateMachine></State></States>
</StateMachine></State><State
 X="480"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D2"
 Guid="b7f45c15-92a0-4ebd-8b8f-d50275cb30fa"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e980e87d-2e68-435b-b6c5-37e079180f0d"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="D2"
 Guid="f1307f0d-f176-43ae-87ed-13a0b4abbb96"
>
<ReqRef
 Id="fd55504d-dcad-435b-b30f-48a7a37ff251"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3381ea5-b7e3-431b-895b-68f84191af59"
>
</ReqRef><ReqRef
 Id="2e3eda46-b060-4164-9dc4-05e853b23a11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b862cf0d-f1e7-4031-892a-1c41db2bddfa"
>
<Comment>Closing the desk does not invalidates the train position stored in the engine</Comment>
</ReqRef><ReqRef
 Id="2716843f-aeab-4fa3-8b17-006bff38ba9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="444c306c-9889-41ea-90e9-52dd41303bb8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid stored position and level"
 Guid="7ba2cf01-ea88-4e99-8e87-44cdc24a63ac"
>
<ReqRef
 Id="6fdea10b-a5c0-4096-87cd-95798603eed3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3d2d19d9-4cdb-448b-b179-d91184821588"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="b622aa04-c29a-4327-b398-9682084161d7"
>Kernel.Level.DataState == DataStateEnum.Valid</PreCondition><PreCondition
 Guid="d11f0472-931c-4394-a4ae-212e4b91e49d"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e673e160-9779-48f7-9c2b-e69c9cc97b66"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D3</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid stored position or level"
 Guid="d28f0bce-1cd8-477f-b350-6285715e56ec"
>
<ReqRef
 Id="07046c6a-c307-4f22-82f0-ebe5cfc912d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24d4f3f3-0ca7-432e-9ae9-1c376682e7ed"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b59a4ff9-9e2e-48d7-a58f-c4570137e63a"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update level state"
 Guid="dc12a6ae-8a48-4876-b0c6-def93bf65ae5"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level was valid"
 Guid="06cf5366-5b2d-4506-9b85-0987436021ba"
>
<ReqRef
 Id="5ffd63ff-4c11-496d-9401-99006c03df8c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="76e66072-3765-4725-b263-9c3ef6cc5568"
>
</ReqRef><ReqRef
 Id="72d0b26b-453c-43da-811b-bb300e22a117"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0f159ad-9d2a-460c-9cdc-3623529c328a"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="4a93d4f4-e1b8-4684-8245-d340230f47f0"
>Kernel.Level.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8b62f242-f507-45b5-ab5c-40ce6d2a09a7"
>InvalidateInformation(Kernel.Level)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update phone ID state"
 Guid="d7bdb0eb-fd91-4316-9908-2065dd3b5ef2"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Phone ID was valid"
 Guid="b7e8a20c-7108-4009-a015-81f73819e7ba"
>
<ReqRef
 Id="5ffd63ff-4c11-496d-9401-99006c03df8c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="76136e6e-ee11-4f7b-99b4-bd680734e386"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="50b53ebb-8f4f-4769-b64f-83decf8af254"
>EURORADIO.RBCConnection.CurrentRBCConnection().ContactData.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3dd1b412-183f-4def-9731-f94da43fc671"
>InvalidateInformation(EURORADIO.RBCConnection.CurrentRBCConnection().ContactData)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="760"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D3"
 Guid="bf1df802-72dc-434b-9422-70c776edaf52"
>
<ReqRef
 Id="6508f335-762b-42d8-b510-de84124ae5ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0dcfacfa-6f4a-49cf-9224-484357d47f44"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4f296b04-67ad-4605-ad47-2d7105d43e52"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D3"
 Guid="7afd1f0a-8366-4c06-aa07-4e7fa12fceb2"
>
<ReqRef
 Id="b3c23b39-6eae-4cf8-b2b1-8c9ee868368c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9993de0a-e630-4e63-82e6-ce27f46a4e72"
>
</ReqRef><ReqRef
 Id="3d01119c-9a06-4fe4-8e31-dcced163ddc9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9846b11a-50f3-4fbe-a931-a13f3f2e1146"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0, 1, NTC"
 Guid="a11c16f5-9bf1-4e88-acd9-2c0b9b83203c"
>
<ReqRef
 Id="b3c23b39-6eae-4cf8-b2b1-8c9ee868368c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1938dba5-cad9-4f45-9592-42d42f45af1a"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="e1776ee6-dd5a-4584-b343-30546176c388"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.LNTC]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1efe5702-7f1f-4e39-a22e-9531d71a4a47"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 2, 3"
 Guid="025ede3d-e005-472f-a026-2da283777659"
>
<ReqRef
 Id="3d01119c-9a06-4fe4-8e31-dcced163ddc9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60a804ef-a6d6-4c4f-8a2f-6434e43acb86"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="a7dc56b4-90af-4847-945c-0b57cb9f870b"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5bd67b8a-f71d-4afb-90a9-cd1740b1f74f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D7</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1060"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A32"
 Guid="80510d79-8e7b-4685-b966-91aac83edcd9"
>
<ReqRef
 Id="61c92874-8d88-4a7a-83b7-5b7266ebfea5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="151165af-7780-480c-9da9-ae2251e86903"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ffbcce36-c1fe-452f-9b42-079272bc27e4"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A32"
 Guid="55e6b369-ff69-4b2d-88d8-32d80220692f"
>
<ReqRef
 Id="97f97df2-7ec4-48d8-a999-6068f0d43b01"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6bd984b-a2a0-456c-96f7-e4f3d75d919e"
>
</ReqRef><ReqRef
 Id="f7f64285-3893-4d88-a8cc-f1648cd075cc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="472f6299-46f8-43e1-93e5-31a95437b259"
>
</ReqRef><ReqRef
 Id="2a24f59d-dee8-4d3d-abc7-cb4d05ba118d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dcf4a6c-dae6-49af-b293-22261ef5fa95"
>
</ReqRef><ReqRef
 Id="c304ce24-e48e-45dd-b7a6-264940ebbb40"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2ecd2d40-8e4d-40bc-a964-62ad7a8eb19d"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inform driver session has failed"
 Guid="8ee59fd4-87a1-480c-b3b5-f5475d771c87"
>
<PreConditions>
<PreCondition
 Guid="5b843fa8-6ed9-4519-875a-76d8fd814251"
><Comment>Wait for the RBC to reach the Inactive state for it has to clean the informations of DMI_In_RBCContactInformation before proceeding further.</Comment>
EURORADIO.RBCConnection.CurrentRBCConnection().ConnectionState in [EURORADIO.RBCConnection.RBCStruct.ConnectionStateSM.NoConnection]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b8f2f399-bcea-4824-8a83-ebaca850d2c5"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1060"
 Y="250"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A33"
 Guid="e7ce2f55-45eb-4eb1-9837-101ee45c2b15"
>
<ReqRef
 Id="2a4035e1-99ac-41b8-ba91-d16f5787152e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7becc947-8600-4df0-a048-9666452f3f06"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="32b48b94-8e6d-458c-b0be-598def2a8e7e"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A33"
 Guid="3d6b1557-37a0-4a12-9838-14a5cf0022ca"
>
<ReqRef
 Id="aa43ddb6-13a5-4b3e-bbcc-bf985bea4175"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b3d74b2-e32b-4bc2-b536-8bc51d395c25"
>
</ReqRef><ReqRef
 Id="ca2f6d51-ace7-440e-8348-3cf6fa973ffe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6070c00c-e12b-4170-b51f-aabd98a90482"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transmit valid SoM position report if train position is valid"
 Guid="a601925d-c67d-4442-a672-c7db18aa24b2"
>
<PreConditions>
<PreCondition
 Guid="81308377-2cbc-448b-90f8-b523bfa262e5"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="11bec68a-2c62-42a4-85d2-f4b54737115f"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendSOMPositionReport()</Action><Action
 Guid="889e2d96-3117-4680-8f98-a7f7f1d4dbc3"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1310"
 Y="350"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A34"
 Guid="f849471c-b7ef-4263-8760-e9360ff6b94b"
>
<ReqRef
 Id="313d08c5-10c0-4602-8ba8-e286bbb9cb33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5bca9cec-d452-4c21-80ce-ae4923839539"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.A34.ReportPositionToRBC"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ef79919c-f3e9-43da-8710-caaddfb72bc7"
>
<States>
<State
 X="20"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ReportPositionToRBC"
 Guid="7b0d49c3-3e70-4577-8ab1-7b130fc90122"
>
<ReqRef
 Id="6375b0de-0293-4d16-abdf-cb5f39a35143"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6fd531b4-6c6f-4be2-912d-a9019fb002c7"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="6493bfcd-9124-479a-b475-ef005fe6f0fa"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Report invalid or unknown position"
 Guid="e27ab43d-1f1b-4f2d-8256-a39d35e1b5a6"
>
<ReqRef
 Id="6375b0de-0293-4d16-abdf-cb5f39a35143"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="36155434-2a3a-44c8-8b34-fb733781980a"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Report invalid or unknown position"
 Guid="ba2ee6dd-0757-4707-ba42-5f747a1c9c49"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="41ae909a-c05c-459e-a1a0-30cd1cee40f9"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendSOMPositionReport()</Action><Action
 Guid="af9a6218-aa19-40cb-bcae-6472d388bfa7"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A34.WaitForRBCResponse</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="330"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="WaitForRBCResponse"
 Guid="0f3a0e65-ed0a-404b-9139-e61f34370dc7"
>
<ReqRef
 Id="55fef314-9384-40f6-ab17-5880cc15474b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3c647397-7dd4-46f4-b0bf-c7b8357b80e8"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="d31b2575-083f-4fb3-a605-9e874daf7956"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Analyze RBC response"
 Guid="a4965491-1790-4ca3-b4d0-3460746474fc"
>
<ReqRef
 Id="55fef314-9384-40f6-ab17-5880cc15474b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="45955731-03a0-49b4-a844-855c180db2ab"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="RBC reports valid position"
 Guid="c966119d-6e9d-40f7-b881-838e9b0824f0"
>
<ReqRef
 Id="14a1f1dd-6b8c-4693-bfb6-d34586f029de"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bcdd1cf2-45b4-444a-9648-9af13d769df9"
>
</ReqRef><ReqRef
 Id="54a97260-e9dd-4150-8cba-095ed5a8f0d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a67e5dc0-d6c9-4df7-b116-796980355608"
>
</ReqRef><ReqRef
 Id="a43e367f-4794-4f8e-bba1-d7384958d7b5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7f52dd2-d326-4efc-98e8-f0160be02de9"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="e174bb1b-121a-49c0-94b2-fe0469288e7a"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()))
  AND  
Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).SOM_POSITION_REPORT_CONFIRMED_BY_RBC )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ee978564-2709-449b-ab4b-8943f2e8d7c5"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A35</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC reports train accepted"
 Guid="4cbb1fdd-6ad1-4f69-9884-61a9725ee134"
>
<ReqRef
 Id="605de9cc-4900-46af-9c8f-c8b14126696e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="282c3bbe-2e2a-411c-a4bf-028cf0160343"
>
</ReqRef><ReqRef
 Id="ea01ea66-b8e6-438d-93a4-4207dbd3797f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b26f6308-1f43-4306-a176-e6d4a3aff26e"
>
</ReqRef><ReqRef
 Id="7c2005be-ddda-445e-89ca-07171e96ad2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6ca611eb-6b3b-4364-81dd-b621666b5237"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="7e3d4f3c-1ecf-4e97-94e5-b4b1b5f9d602"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()))
  AND  
Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).TRAIN_ACCEPTED )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5e2b1e6f-8c5b-403f-8c90-3806f64b7cfb"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A23</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC reports train rejected"
 Guid="e91957b7-6b0b-48b0-8d55-9a0603247e17"
>
<ReqRef
 Id="605de9cc-4900-46af-9c8f-c8b14126696e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25792d0c-8f86-4fd6-b306-65a0dcfdae89"
>
</ReqRef><ReqRef
 Id="bc294642-8437-469e-8c66-7be2171440c5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1214753-57cd-4e36-9e4a-dc80d02c33ae"
>
</ReqRef><ReqRef
 Id="d6dbb7aa-ca5a-47c1-a518-ad6e56320195"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="041e9073-1c40-4922-b6d4-d126d3c8c63a"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="de03c077-54fc-4fc8-943f-861d8b9e01bc"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).TRAIN_REJECTED )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fe9c8493-0fdb-47e4-839b-5796c6122ec5"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A38</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="1060"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A35"
 Guid="d0cd5f33-9403-41cc-b065-895fc2a399bf"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ce544d33-26c1-4fb1-b335-f75e9926198c"
>
<ReqRef
 Id="36c2465e-e5e2-46dd-b60a-a01ee7032c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a06ba45-57ea-4c91-b029-edd5d88cdb90"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A35"
 Guid="2508926d-75b1-4cd9-9e35-4dd3a5b621f3"
>
<ReqRef
 Id="4db9aa98-3d77-411b-8528-257702a16967"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="780f6ec0-1167-41df-868d-fe9425a21b3c"
>
<Comment>The position report has been received while leaving D33</Comment>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RBC informs that the reported position is valid"
 Guid="60b69850-20e4-43fd-971c-70c238065880"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="98d23c02-f619-40d0-b33a-94f5ffd20033"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action><Action
 Guid="2e0b169f-b3e4-4c7b-b22d-3cb1b27d424b"
>ValidateInformation(Kernel.TrainPosition.Position)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1060"
 Y="430"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A23"
 Guid="62453693-9031-4951-87ee-97e5120bbe01"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="99df5780-8c8d-4f5d-9832-33d22af14ad6"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A23"
 Guid="4d0809e0-cda0-4738-a003-d2065efb1215"
>
<ReqRef
 Id="1494c427-572b-4bfa-bfea-2aa68994f26e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="35dfabfd-6ec6-46c3-a7b8-abea1ad4613a"
>
</ReqRef><Comment>The acceptation message has already been received in D22</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A23"
 Guid="dda98141-51fe-4528-9e42-2e4908115ee6"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b748ad85-fa0c-46ae-9404-67a76ec21430"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A24</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1060"
 Y="520"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A24"
 Guid="9511728a-a128-4741-9e41-3688e2b176a3"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="81122618-6049-4f60-99d1-5f80241a75ec"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A24"
 Guid="ac89db53-17e1-42ee-acf0-c4d81673e6d3"
>
<ReqRef
 Id="b0a496b8-7273-4f49-8da4-0d91a260e5ba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="113b08a8-3199-4586-88f6-72f78ee5feed"
>
</ReqRef><ReqRef
 Id="36c2465e-e5e2-46dd-b60a-a01ee7032c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8964caa2-c65a-47f5-ac22-04f0a3447181"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Delete train position"
 Guid="c5e88baa-712f-4f2c-9c31-ecb4d892fe0f"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b54108ba-1521-44d1-abee-ce5626afd545"
>DeleteInformation(Kernel.TrainPosition.Position)</Action><Action
 Guid="2e2ac32d-fe80-40df-8bd8-badfa262e908"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1310"
 Y="450"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A38"
 Guid="99a6f671-d20e-4554-b24a-51cec51b9a43"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="201fb1f7-7cfc-48fe-af02-7f334a29e5f6"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A38"
 Guid="168e137a-6eec-4e5c-ad07-7383d89b572c"
>
<ReqRef
 Id="28f4ed40-a3e4-43f7-b9c4-0bdb249e27bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d900d100-6d26-4955-908a-0a659a714039"
>
</ReqRef><Comment>The message that indicates that the train is rejected by the RBC has been recevied in D22</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RBC informs that it rejects the train"
 Guid="ced9440b-46bc-44c4-90e2-a73d5131b77d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a4bd2981-fe09-46e4-883c-7c615e3a6bfa"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A39</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1040"
 Y="610"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A40"
 Guid="3eba7ac9-a2ce-4726-a52b-3b12670ddd95"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="f19bbb0e-dcb7-40ba-b3d6-5ab69b0605c3"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A40"
 Guid="9ddeff40-7648-481d-a943-3421e7f482b9"
>
<ReqRef
 Id="eb19f005-dc60-4a70-82ac-33c7a4d74922"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9957196a-f6dc-4a31-a493-9cc09a8ca540"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inform driver that the train is rejected"
 Guid="b622dbfe-0fa9-4aad-b2b0-85a5c58d1453"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="99c164b8-f204-4242-bd29-a23f75c47447"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="270"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S12"
 Guid="d6fc6fad-5ed2-487e-ad8c-81975965acdf"
>
<ReqRef
 Id="92ebef6e-9acb-432c-8a1c-932271343aec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a62e6722-3eb4-44bf-b889-3b60a5777bde"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S12.RequestTrainData"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="b1530356-1777-4ad1-94a2-d8c642566aba"
>
<States>
<State
 X="100"
 Y="70"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="RequestTrainData"
 Guid="610c3558-1ed0-462f-b483-25b97d8085fe"
>
<ReqRef
 Id="92ebef6e-9acb-432c-8a1c-932271343aec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ef3c582-09cc-4423-b05b-49c6b261204d"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="ebfdaedb-4821-43b1-b05c-d80a0d151c66"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestTrainData"
 Guid="28d584db-58b4-4673-b3cc-d9c1f8b0d05b"
>
<ReqRef
 Id="92ebef6e-9acb-432c-8a1c-932271343aec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73ceb2d5-60d1-467c-a6f7-91c96fa41fb2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestTrainData"
 Guid="cefb9530-03d1-47b8-a982-096cf6b8d24d"
>
<Comment>When the driver select TrainDataEntryRequest, the train data screen is automatically displayed (DMI namespace)</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="7bd24a23-aedd-4739-8b1a-2c72fed5e334"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S12.TrainDataRequested</Action><Action
 Guid="64561bba-163c-4270-bb88-1af4a286e579"
>DeleteInformation(TrainData.TrainData)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="100"
 Y="200"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="TrainDataRequested"
 Guid="b6e8c50b-1408-49dd-93e9-1d8ae740cbe2"
>
<ReqRef
 Id="47f6b9b0-cb96-4c74-a411-82cd5d418626"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e0debe4-9312-4590-a86c-f8f743884fcb"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4dd0315f-aad2-422f-b599-191fc6e887fc"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E16"
 Guid="695af239-8ba1-4d5d-bb9b-00281c0d5218"
>
<ReqRef
 Id="47f6b9b0-cb96-4c74-a411-82cd5d418626"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="52a6705c-37d8-48c5-99c9-98d6fd30f1e4"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E16"
 Guid="9da87d8c-6479-4791-9b34-a3bae1284bbf"
>
<ReqRef
 Id="3fe59c76-6a3c-4709-8caa-9700dc06cd90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af5e4c15-1db5-4a20-b96a-35f07b30b223"
>
</ReqRef><ReqRef
 Id="57063dee-6c81-4684-9575-1957646474ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b36da43-0b7a-4792-b9f6-4e90a8ce706b"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="2b33748d-d204-4162-af58-ac54b3c897fd"
>TrainData.TrainData.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5d2f8550-d6a7-4e7c-9170-2995928a8efe"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D12</Action><Action
 Guid="ebe4a3f4-a674-43d8-92d3-2b6166113fa2"
>DMI.MasterDMI().In_TrainData.AcceptDriverResponse()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver closed the Train Data entry window"
 Guid="d35849ff-4f2f-4ee4-a851-b23419ce44e5"
>
<ReqRef
 Id="73975a0c-4870-4121-b56e-3c68ce047051"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="6614e79d-3f24-47f3-9500-e306079feb3a"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver closed window"
 Guid="a14fe722-424f-4dc4-a993-c65ca10ad344"
>
<PreConditions>
<PreCondition
 Guid="ce1ab44e-d0f7-48a7-ae25-c80ffd65e042"
>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="ab790024-9e0a-42c2-be46-c6e98482506c"
>TrainData.TrainData.DataState != DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cc9df94f-1f51-4398-bbf0-ca4d8820a9d9"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="270"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D12"
 Guid="89be5d8b-5cd0-44fe-a693-2de83d84d2d1"
>
<ReqRef
 Id="fde257af-4a02-41e3-b187-50efa872ddda"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="12c0d495-a259-47d9-b383-296222b2325c"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="250a33d0-c6a0-4c6e-9a95-1ee76cb1c483"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D12"
 Guid="f2211f4d-14bd-44e3-805c-f217b3d52d34"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D12"
 Guid="a30a875e-1696-431d-a9a5-70b6ec34167a"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train running number is unknown or invalid"
 Guid="ae091ff4-664d-4857-8cfb-851047b6760f"
>
<ReqRef
 Id="885747bc-9ec2-456a-8a96-9c54af37246b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="977bda5d-4331-4fd9-8a0d-3c0b3f202541"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train running number is invalid or unknown"
 Guid="d44a36a0-28d7-44e6-9878-9f35a9c8f38e"
>
<PreConditions>
<PreCondition
 Guid="b1f85625-5fb8-4728-a87b-00c67bc31045"
>Kernel.TrainRunningNumber.DataState in [DataStateEnum.Unknown, DataStateEnum.Invalid]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8fd20504-2ee6-4557-a394-e42586b0bf42"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S13</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train running number is valid"
 Guid="94123451-2362-4c2a-8730-b09a9214fcce"
>
<ReqRef
 Id="eb92da4b-0617-4b51-a599-d01aebed2eb2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3cca20fd-7819-419f-b751-36e46015a0fd"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train running number is valid"
 Guid="84dced9b-148e-4f56-8928-a53fcd9520c7"
>
<PreConditions>
<PreCondition
 Guid="150f7c8c-b602-4f33-b39a-5969dbcb7ac0"
>Kernel.TrainRunningNumber.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="872ee9ae-b1ab-4dd3-81dd-10444cad74f6"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D10</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="480"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D10"
 Guid="be1feb3a-a82d-4a15-8c0f-553c08c69328"
>
<ReqRef
 Id="d7973918-62e2-43d1-ac9f-f8a39db5d10b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41386e2c-6340-4c0a-984f-791e91f96fc8"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="c409f1c3-74f5-4780-aa63-d1a342ee7fc7"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D10"
 Guid="139eea90-6115-4f0d-b85a-8392bb0b4115"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D10"
 Guid="2002e013-259f-4af0-8440-6bae4ef4c2d2"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level2 or Level3"
 Guid="08b977a9-94df-4fdd-8717-0e1b52cb6d85"
>
<ReqRef
 Id="9e3ba5d0-8241-4037-a570-8b0cedd629f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="077bfc99-4a00-4ac3-a2b8-9fc612fd280d"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level2 or Level3"
 Guid="ad840ce5-be0b-48a1-a56a-71292138df14"
>
<PreConditions>
<PreCondition
 Guid="b4d05191-93b3-49f5-9435-423c10c560ac"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e962fbb8-4429-4ad3-957c-5b8d3e3589e8"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.D11</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level0, Level1, Level NTC"
 Guid="f7cdc46e-2e82-47ff-98f4-a38f48579e35"
>
<ReqRef
 Id="4f058292-dd24-489c-bbc9-498c1d9a0e38"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7bd2851-c872-4c53-a8d8-fbab09bc53aa"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level0, Level1, Level NTC"
 Guid="14fc9363-ee4e-49fd-bee9-f7709566a7ad"
>
<PreConditions>
<PreCondition
 Guid="d9550d4a-f9e8-4206-8be8-bfcc14f22415"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.LNTC]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="79cc65b2-97ed-4bfc-bff5-eea2a40f3f50"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S20</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="470"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D11"
 Guid="ed143ae3-3cc1-426f-8763-f42eaa9bd73a"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="26dcfbc1-2471-4ec2-a173-eb462706347c"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D11"
 Guid="a958b581-e750-4826-bf83-cbfb2ca0fa86"
>
<ReqRef
 Id="a2f8c5d0-9029-4c1f-b5bf-fee1dca550f7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="91b2c99e-2e34-47df-a537-b85c2065d58b"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session is open"
 Guid="524d785b-bbbd-4eef-994d-248b9efbd821"
>
<PreConditions>
<PreCondition
 Guid="e7e4f5ab-1836-47dd-b8ab-2fa371f38c41"
>EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="37b32960-c669-42f5-915d-6d007d25901c"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S11</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session is not open"
 Guid="9e19071e-9fb6-4041-8ae1-7034d0725a39"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2aa747bd-aef2-4ef5-9e4f-34ff7e3b06d7"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="800"
 Y="880"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S21"
 Guid="c7d9eeab-e193-41b8-a17a-231e169ba2c6"
>
<ReqRef
 Id="488e6e9f-80b1-48fe-9293-96f3d69e7bd9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="96a3cb37-f69e-4536-9330-47abef3309a6"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S21.SendMARequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="934bf4c7-54fe-4219-bd4e-ea69e332314b"
>
<States>
<State
 X="110"
 Y="190"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="MARequestSent"
 Guid="3aa7a1e4-3a18-4834-9c70-addbefefdce6"
>
<ReqRef
 Id="ab41f6d7-19db-4d3e-95a6-8e15abbd4088"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="644b6e4f-145a-40ad-958d-d646b06d0ebb"
>
</ReqRef><ReqRef
 Id="d7eddae1-a7bf-4be3-8180-19f2e70ac2fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cf918e9d-9a3a-4bfb-b63c-62a6824c5108"
>
</ReqRef><ReqRef
 Id="9055a6b1-6135-49e8-a779-622b3270c280"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e747a33-47b6-445a-bb59-710ecf6a2d00"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="d02fc4f9-cbb5-487d-9ea0-354e9a45ffb5"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ReceiveRBCAnswer"
 Guid="4fb76308-8c43-4588-ac36-6cc28530c0b3"
>
<Comment>Handle the RBC answer to the MA request.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E26: SR mode"
 Guid="24c6f19c-cdf3-43ca-81e6-52f9b1b5ab0d"
>
<ReqRef
 Id="ab41f6d7-19db-4d3e-95a6-8e15abbd4088"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b6409de6-9d3e-45e9-8c24-5e29a04be86e"
>
</ReqRef><Comment>RBC authorises SR mode.
Propose SR mode to the driver before starting the mission.</Comment>
<PreConditions>
<PreCondition
 Guid="e43fdd3d-fef1-4b2f-b931-a04bddf3ae57"
>Kernel.Modes.StaffResponsible.SRAuthorised()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d5a2a004-5cce-4a62-9dd4-637430d3e05f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S24</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E27: OS/LS/SH mode"
 Guid="1f05bdb2-93bd-4444-a4d3-6b307a627c97"
>
<ReqRef
 Id="d7eddae1-a7bf-4be3-8180-19f2e70ac2fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="83f08dc4-540b-4904-ac0f-fae0d8c29dbe"
>
</ReqRef><ReqRef
 Id="c7906978-32c5-4b29-bb48-bb2bb5d7190b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c363555f-5c71-458e-b7e7-e6188e610448"
>
</ReqRef><ReqRef
 Id="91e483bb-c16e-4c94-8256-d3dcf2d0e0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="99a47462-50dc-4e14-8186-b625a2fc6605"
>
</ReqRef><ReqRef
 Id="aa3f1b72-e48c-4c84-af17-db6bfe3c11b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="96fbcfe9-e5d6-4e33-b1dd-6046522695e4"
>
</ReqRef><Comment>Received MA + OS, LS or SH mode profile.
Request driver acknowledgement before starting the mission.</Comment>
<PreConditions>
<PreCondition
 Guid="c68f737a-0f09-4eeb-a036-f347bea64aeb"
>Kernel.MA.ModeProfile.ModeProfileIsApplicable()</PreCondition><PreCondition
 Guid="56e31dd4-9fb5-403c-b023-4f6722a68f84"
>Available ( Kernel.MA.MA )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e25153a2-faf4-46ed-92de-c26f1495d0d6"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S25</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="80"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="SendMARequest"
 Guid="eba4103c-2403-4877-aa73-7fc9bade883d"
>
<ReqRef
 Id="488e6e9f-80b1-48fe-9293-96f3d69e7bd9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea223c61-5243-4914-89e2-a33d9af21f5c"
>
</ReqRef><ReqRef
 Id="ff288c94-6672-4739-a2b6-fd66db6c9de8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="76b93596-8912-4277-8e27-dec1e362ac19"
>
</ReqRef><ReqRef
 Id="4443416b-4b5b-4896-a845-222b762d3950"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1245a735-1c6b-4f2a-b62c-e0892ecc48f5"
>
</ReqRef><ReqRef
 Id="8ae45849-75e7-4ebf-9e7c-625d834e6433"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5aebe384-f3b4-41ec-8625-99e591793724"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="6164abda-92ad-45e3-b05e-7b309c6dd6d1"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Send MA request"
 Guid="e83989bb-9272-409a-9324-75842d9cc3c0"
>
<ReqRef
 Id="488e6e9f-80b1-48fe-9293-96f3d69e7bd9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97d2ce10-a69d-404a-929f-9171db38cb14"
>
</ReqRef><Comment>If the MA request function is available, send an MA request and go to the state &quot;MA request sent&quot;.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send MA request"
 Guid="acb4561b-7ad4-4ed7-a69d-efcf4bcd5ce3"
>
<PreConditions>
<PreCondition
 Guid="3926adee-59c5-4136-b0a8-7084a163195e"
>Kernel.ActiveFunctions.RequestMA_StartSelected()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d8168522-2e95-455d-b009-9b8a1f790460"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendMARequest
(
    aReason =&gt; Messages.Q_MARQSTREASON.Start_selected_by_driver,
    aPacket =&gt; EMPTY
)</Action><Action
 Guid="90885e9c-cbaf-452c-80fe-9e7324d8b5a0"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S21.MARequestSent</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="1210"
 Y="880"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S22"
 Guid="da4dd649-1cc0-461b-b906-ee4cecf8025a"
>
<ReqRef
 Id="195e2b98-7877-4e7a-850f-134fe5fac373"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d482fc29-37c5-4c90-b5ee-ae1c44a67da6"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S22.RequestDriverAck"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="9a68f736-b3ad-4dab-bb17-e6966abc4408"
>
<States>
<State
 X="40"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
 Guid="7b3b57b6-9f97-4c8b-bdec-6522d58df8cf"
>
<ReqRef
 Id="195e2b98-7877-4e7a-850f-134fe5fac373"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8361ed10-485a-42d5-a00c-a36025eb9b04"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 Guid="29eeb7f1-48a8-4121-b426-01789ee89834"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver acknowledgement"
 Guid="19a528ef-380a-4b0e-80b0-5c4c8ea0188f"
>
<Comment>Requests the acknowledgement of SN mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Display driver acknowledgement"
 Guid="0a3b0325-e0b0-443e-9f36-dd13edd3da1a"
>
<PreConditions>
<PreCondition
 Guid="02995a7c-a237-4d3d-8877-d53d79a3f1bb"
>DMI.MasterDMI().In_AcknOfSNMode.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="053b80eb-e5c1-42a5-953b-40dae4c23ec6"
>DMI.MasterDMI().In_AcknOfSNMode.InitiateRequest(Kernel.Level.Value.NTC)</Action><Action
 Guid="a5bf9137-b2c2-482a-ab03-2f9aba77fae0"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S22.DriverAckRequested</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="350"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
 Guid="88d59e73-4b80-4026-a1c0-d5a79de54bbb"
>
<StateMachine
 Implemented="TRUE"
 Guid="e47ec82c-34be-4b98-9199-6f9083fa8aeb"
>
</StateMachine></State></States>
</StateMachine></State><State
 X="1370"
 Y="880"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S23"
 Guid="3bf01b0e-b5d7-4813-9428-aff5c7e6b56d"
>
<ReqRef
 Id="0bdf5b27-3f33-4831-9b62-9424f5bd350a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a627b87-87d3-4d54-9cd5-3a48f70b662a"
>
</ReqRef><StateMachine
 Default="Kernel.HandleModeChangeSM.StartOfMission.S23.RequestDriverAck"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="8bd7adf6-f975-4015-a290-77faffdb3cb4"
>
<States>
<State
 X="40"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
 Guid="2f86e648-6c9f-48f4-b50b-5a041426b1a9"
>
<ReqRef
 Id="0bdf5b27-3f33-4831-9b62-9424f5bd350a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a4a58c5-9237-48ae-a1e2-ace60495541b"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 Guid="d31fca1b-fa2d-45f5-aeda-7b684ce7bf07"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver acknowledgement"
 Guid="fcb7b713-4368-4253-b51a-52569fdfe198"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Display driver acknowledgement"
 Guid="e34c75df-f2dd-4975-b193-9e16f97e3538"
>
<PreConditions>
<PreCondition
 Guid="d48076c7-64f3-4f21-a277-ddbd2ac9fc79"
>DMI.MasterDMI().In_AcknOfUNMode.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dc4095ae-fc09-487b-be90-b86d5bf50080"
>DMI.MasterDMI().In_AcknOfUNMode.InitiateRequest()</Action><Action
 Guid="1f8fc53e-42e5-4023-aa87-f37ae2668231"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S23.DriverAckRequested</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="350"
 Y="110"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
 Guid="755d72fd-eaf1-4a46-8898-59353f803363"
>
<StateMachine
 Implemented="TRUE"
 Guid="818d7513-4553-497f-924f-05a7996bc203"
>
</StateMachine></State></States>
</StateMachine></State><State
 X="1000"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D7"
 Guid="09e46755-3d02-4fbf-979d-5c94fdedd7d0"
>
<ReqRef
 Id="deb40ed2-c7f2-47c5-a61c-52bdd7a62dcc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="96b82c62-6a98-469b-b0d9-459c160b3f2e"
>
</ReqRef><StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="99be0b2e-85bf-4098-abf6-45e43aaf154f"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal registered to network"
 Guid="7d91e04d-bf7a-4167-8615-4aa78cea07aa"
>
<ReqRef
 Id="65314800-5286-475e-b755-60e19e8cb01d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a312f1ed-558e-4383-9a02-5609c725906d"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal registered to network"
 Guid="1dbaf1e9-cb6b-4872-a89a-10e5d2ce0053"
>
<PreConditions>
<PreCondition
 Guid="9a2004d1-fafa-41ac-9617-f983f7d4737e"
>EURORADIO.Terminal.MobileTerminalRegisteredToNetwork()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="599e4f2e-fb91-4a43-b77e-ae747f08f8d1"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A31</Action><Action
 Guid="bd3fb10c-c9f8-477b-ad79-111b8e1c7ff2"
>EURORADIO.RBCConnection.Contact.SetNextRBCToContact(EURORADIO.RBCConnection.Contact.LastKnownRBC)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal not registered to network"
 Guid="a57c6bda-1aea-40dc-aedd-b2e46e32139f"
>
<ReqRef
 Id="25c7ba02-1985-488d-b506-b24eef2b11b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8cb5fdc4-d289-4636-9bc6-7b31ccb74c73"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal not registered to network"
 Guid="6cf2bdf9-af78-48cd-a743-92284a05e625"
>
<PreConditions>
<PreCondition
 Guid="086ed047-63ca-4273-9069-67db7ea92a1d"
>NOT EURORADIO.Terminal.MobileTerminalRegisteredToNetwork()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d0f7230f-54f2-45c4-98c6-e050fa771962"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A29</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="180"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A29"
 Guid="efab7f97-288a-4454-a28f-409bbe1a16e9"
>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="95564f00-0f31-4c53-bbad-0326f124b64b"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A29"
 Guid="b0080178-83ba-4036-9667-8f090d484c3b"
>
<ReqRef
 Id="251b9c82-1dc9-4d99-8648-7a96b0526d5b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e2d1712-e296-44e3-b238-c4bfec824b88"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inform Driver equipment failed"
 Guid="7360e1ff-7568-4cc8-bc8f-9683fccb8e9e"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c2ff2f06-99f6-4ffc-a1cc-75a14cb093b3"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action><Action
 Guid="e6ebdbe7-e464-4ffe-a68a-f4502ba1a160"
>DMI.MasterDMI().In_RBCContactInformation.CancelRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="End of SoM"
 Guid="8a3502cd-1145-4628-86f7-e4e91fb37224"
>
<ReqRef
 Id="4a239d79-5277-403e-b678-13601d0dec4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac2465dd-c8d7-4af4-a2d5-16f3e1d71c0a"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="End of SoM"
 Guid="26c6217c-30d9-43fb-8bae-dfef2bc9bef2"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transition to a mode different from SB"
 Guid="4dce78ed-c10c-4af5-ba3d-2082bfab67c4"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transition to a mode different from SB"
 Guid="fc9571ac-6b52-4b7f-9e41-d042419a836b"
>
<PreConditions>
<PreCondition
 Guid="e4ffa691-161b-4bd9-8313-60f34d519d63"
>Kernel.Mode != ModeEnum.SB</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a543721a-2e37-4dfe-b555-ddfcb90b379e"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Desk is closed"
 Guid="6faedef6-abe1-4b11-9da2-4dfc0cab22ad"
>
<ReqRef
 Id="83709cd5-3863-48a0-8264-34f65a482b28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2dec042-c1a9-4efc-8b8e-a0404ee12cdf"
>
</ReqRef><ReqRef
 Id="058ba686-ff06-4bed-b616-68b4fb4ea7fd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9960b09-de47-43e3-9f40-512447a679a4"
>
</ReqRef><ReqRef
 Id="fe20e6f0-0c95-465f-86a8-bfa2963de515"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="efed8231-5a2d-48fe-9276-7a36cb5b5880"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Desk is closed"
 Guid="79ce1471-6ea2-4c06-b9f6-b07269453120"
>
<ReqRef
 Id="fe20e6f0-0c95-465f-86a8-bfa2963de515"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f63f5590-0bec-4100-9c10-d61ef5278c38"
>
</ReqRef><ReqRef
 Id="83709cd5-3863-48a0-8264-34f65a482b28"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8dd6a52a-d3b6-45f8-a725-f7a1cb6b8569"
>
</ReqRef><ReqRef
 Id="51668b83-2011-4cfe-b5d6-d55503b8349d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0eff926-3ec4-4fa1-9c12-04f165c1f3a5"
>
</ReqRef><ReqRef
 Id="fb08360f-0ff1-4327-8bcd-edf3c1e01e8f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6632696c-1992-4e0c-90a0-d9b921ba3c30"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="d1e9b91a-ff56-4aba-b114-541ef4901082"
>NOT DMI.DeskIsOpen ( DMI.MasterDMI() )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="575cfaa5-2e3b-4bac-9c36-dc6b0a10c2cf"
>EURORADIO.RBCConnection.TerminateOpenSessions( contactInformationIsKept =&gt; True)</Action><Action
 Guid="57481de5-ee41-42b1-ac58-4c9762537811"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action><Action
 Guid="56267830-257d-4e92-b5dc-6777f897089e"
>Kernel.HandlingOfAcceptedAndStoredInformation.DeskClosedDuringSoM &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Loss of open session"
 Guid="6bad3eaf-2f24-4bf6-91d5-36263a6c6158"
>
<ReqRef
 Id="0e26286f-b4f4-4ca9-82ab-e0db75aadf0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d257674f-62e1-4cdd-8ca7-1c851605f403"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="After D11"
 Guid="314b3712-74a9-41c7-8e90-e7775518a171"
>
<PreConditions>
<PreCondition
 Guid="e7466fa3-123d-46da-af21-07f434c56289"
>THIS in [ Kernel.HandleModeChangeSM.StartOfMission.S11, Kernel.HandleModeChangeSM.StartOfMission.S20, Kernel.HandleModeChangeSM.StartOfMission.S21, Kernel.HandleModeChangeSM.StartOfMission.S22, Kernel.HandleModeChangeSM.StartOfMission.S23, Kernel.HandleModeChangeSM.StartOfMission.S24, Kernel.HandleModeChangeSM.StartOfMission.S25 ]</PreCondition><PreCondition
 Guid="fd484513-2142-4fc1-a53f-75f77823e65b"
>NOT EURORADIO.Terminal.HasActiveSession()</PreCondition><PreCondition
 Guid="5a6cd26a-dc17-41a4-9901-491292f3ded0"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3ad2ea3b-68ed-4ad8-bbdf-04351bd7290f"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Allow reenter driver id for states S10 and S20"
 Guid="eecffdff-c38a-4e86-8625-e1b7be52a479"
>
<ReqRef
 Id="c01d4cc9-6034-43bf-ba70-4d4fe10dffd9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea2a433c-5e13-44a6-9972-eacf2d1e1a36"
>
</ReqRef><Comment>Handles the degraded situation where the driver is allowed to reenter the driver id in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter driver id for states S10 and S20"
 Guid="c612bac0-47eb-4c50-a8d4-048633cda15e"
>
<Comment>Handles the degraded situation where the driver is allowed to reenter the driver id in states S10 and S20.</Comment>
<PreConditions>
<PreCondition
 Guid="f7bcca77-5a28-4e46-8ce1-2317bbe5a0e5"
>THIS in [Kernel.HandleModeChangeSM.StartOfMission.S10, Kernel.HandleModeChangeSM.StartOfMission.S20]</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter driver id for states S10 and S20"
 Guid="82683e26-8514-4be7-9371-97fc5ead2446"
>
<Comment>Handles the degraded situation where the driver is allowed to reenter the driver id in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter driver id not proposed to driver yet"
 Guid="f053d594-c9b1-46c5-a6a1-aa54a17b9b21"
>
<Comment>If the entry of driver id is not proposed to the driver yet =&gt; propose it.</Comment>
<PreConditions>
<PreCondition
 Guid="91fa802b-ff28-476b-a651-8c633651cded"
>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="1ec0dda5-1942-462f-9631-61e215d6d028"
>DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="f6f2b953-6391-49ef-8bc7-0b5a994f79c2"
>NOT DMI.MasterDMI().In_DriverIdEntryRequest.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="53e96de6-3f2e-4e4d-b3e0-b25670cce139"
>NOT DMI.MasterDMI().In_DriverId.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9ebd91fb-b6f2-4d28-b3f7-6fb87e037047"
>DMI.MasterDMI().In_DriverIdEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Allow reenter train running number for states S10 and S20"
 Guid="d28a36f2-3019-4425-a860-299d9c9e6bf6"
>
<ReqRef
 Id="b9721346-42ac-4a79-8f62-10d5ff6a5abb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80a29dd1-bad8-4b8e-a0d6-abc17b92fa15"
>
</ReqRef><Comment>Handles the degraded situation where the driver is allowed to reenter the train running number in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter train running number for states S10 and S20"
 Guid="b09c36e8-2392-49f3-917c-c535c8a16499"
>
<Comment>Handles the degraded situation where the driver is allowed to reenter the train running number in states S10 and S20.</Comment>
<PreConditions>
<PreCondition
 Guid="ad61ad9c-55da-4750-92f4-c49c4757ee53"
>THIS in [Kernel.HandleModeChangeSM.StartOfMission.S10, Kernel.HandleModeChangeSM.StartOfMission.S20]</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow Re-enter train running number"
 Guid="003ca651-8587-49e3-9004-9252a13a5874"
>
<Comment>Handles the entry of train running number.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter train running number not proposed to driver yet"
 Guid="862ffd2c-fba8-4ab0-a32c-b49f4e0b0de4"
>
<Comment>If the entry of train running number is not proposed to the driver yet =&gt; propose it.</Comment>
<PreConditions>
<PreCondition
 Guid="70d7809e-9779-4fdf-9c3a-9aaf8d7d045e"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="31973ab2-57b1-4431-a284-6d3f8e52c678"
>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="1076b164-9860-4218-a3bb-30339f00bd4b"
>NOT DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="eb6a75ab-35db-4c39-9176-bbd2d109cafb"
>NOT DMI.MasterDMI().In_TrainRunningNumber.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5e0fd3ed-60e6-4b96-b48c-0786ee77e557"
>DMI.MasterDMI().In_TrainRunningNumberEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Allow reenter level for states S10 and S20"
 Guid="8339b88a-c46f-47fe-96cd-9399b62676a2"
>
<ReqRef
 Id="1e7f3c89-d89b-4d31-b758-514c92ae3bf1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="70438859-26ed-41db-9c54-2694284d764e"
>
</ReqRef><Comment>Handles the degraded situation where the driver is allowed to reenter the level in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter level for states S10 and S20"
 Guid="da5aced7-8b86-4e15-8dd8-6801094743e1"
>
<Comment>Handles the degraded situation where the driver is allowed to reenter the level in states S10 and S20.</Comment>
<PreConditions>
<PreCondition
 Guid="e387c081-c5c9-4dd7-93cb-9d18d9a4790c"
>THIS in [Kernel.HandleModeChangeSM.StartOfMission.S10, Kernel.HandleModeChangeSM.StartOfMission.S20]</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter level for states S10 and S20"
 Guid="b0d2b632-9991-4298-9b63-09f827cd4ec7"
>
<Comment>Handles the degraded situation where the driver is allowed to reenter the level in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter level not proposed to driver yet"
 Guid="23ce7013-f6dc-4b1b-8e82-f7766a74842f"
>
<Comment>If the entry of level is not proposed to the driver yet =&gt; propose it.</Comment>
<PreConditions>
<PreCondition
 Guid="752efb16-fd0d-4e3a-a8d4-514912453887"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="08d52ea0-e4d2-4759-977a-72f373654097"
>NOT DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="de6fa6e4-a90c-4813-b140-e440384d79de"
>NOT DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="b8c45ab5-430c-4ec5-a887-5875f78d37f3"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="eff502a6-8c0a-43e4-9cf9-693106460776"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected to reenter the level"
 Guid="a141fb86-7873-4806-8c02-bb5cedef0402"
>
<Comment>If the driver selected to reenter the level =&gt; display the screen allowing to do it. This is automatically done in DMI namespace.</Comment>
<PreConditions>
<PreCondition
 Guid="e74820b3-2ae5-4ac7-852b-a21b93c3e667"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle change of level validity"
 Guid="468b2632-cc82-4f4b-8739-75046ad3b35b"
>
<ReqRef
 Id="0e06c751-a7a2-4c82-9441-dfc783509c2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dae673a9-17eb-40fb-833c-c306d4f85623"
>
</ReqRef><Comment>If the driver has chosen to reenter the level, its status becomes invalid.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid level"
 Guid="235ba717-9d6a-4421-886a-eb3d589f7e91"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c5962eb5-d1d6-4cc7-9baa-8d1ca3f31595"
>InvalidateInformation(Kernel.Level)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle change of RBC ID / Phone number validity"
 Guid="70c6984f-6710-495d-8176-c4330408dfd5"
>
<ReqRef
 Id="0e06c751-a7a2-4c82-9441-dfc783509c2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="550c5d29-cf3c-49a1-a0b3-027ad3415dee"
>
</ReqRef><Comment>If the driver has chosen to reenter the level, the status of RBC ID/phone number becomes invalid.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid RBC ID / Phone number"
 Guid="d0a875d4-585d-44c2-abbf-9fe1597ede9e"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="57a12587-e7e5-458c-bdd6-5d19303cadef"
>InvalidateInformation(EURORADIO.RBCConnection.CurrentRBCConnection().ContactData)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Driver reentered the level"
 Guid="4b00a48c-db1f-45e9-8358-ae8d38e4f518"
>
<Comment>When the driver has entered the new data, it is stored.</Comment>
<PreConditions>
<PreCondition
 Guid="ae7ab92d-f97e-4ee2-b50a-3137e1b17946"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d43762ba-cc41-48b3-be35-302b460560c2"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S2.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Allow set/remove VBC for states S10 and S20"
 Guid="2a063391-04be-41f1-a550-b50e3a39e750"
>
<ReqRef
 Id="414a7ad9-32f1-4118-b34f-18656d60445f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f5bbaed5-4496-4050-8b61-70b2984ba743"
>
</ReqRef><ReqRef
 Id="ea9e58d0-129c-4996-b7ee-105d84bad554"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="536e6aa6-acf4-4250-9102-cdfb97201f26"
>
</ReqRef><Comment>Handles the degraded situation where the driver is allowed to set or remove Virtual Balise Covers in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Allow set/remove VBC for states S10 and S20"
 Guid="7b369b9d-3749-4125-8c52-9c38ace641f7"
>
<PreConditions>
<PreCondition
 Guid="6070d7bc-afdc-42c3-8526-bce18e6b5a4b"
>THIS in [Kernel.HandleModeChangeSM.StartOfMission.S10, Kernel.HandleModeChangeSM.StartOfMission.S20]</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Allow set/remove VBC for states S10 and S20"
 Guid="df00d4a0-66d3-42ad-b7fc-7c8d812e6fad"
>
<Comment>Handles the degraded situation where the driver is allowed to set/remove Virtual Balise Covers in states S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Not proposed to driver"
 Guid="5fe47a0f-c027-407c-a77e-91aaae191865"
>
<Comment>If the VBC modification is not proposed to the driver yet =&gt; propose it.</Comment>
<PreConditions>
<PreCondition
 Guid="c16e9284-e25c-4bfa-9aac-d2e4d22b6a15"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="24d0f665-d562-4828-aa10-c8054b15bd33"
>DMI.MasterDMI().In_VirtualBaliseCover.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition><PreCondition
 Guid="532678d5-96a2-4557-a7aa-c73167c7d9e9"
>NOT DMI.MasterDMI().In_VirtualBaliseCover.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="aef64fa7-f88e-45e1-af89-555819a7325c"
>NOT DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1601bb77-d59c-4cf0-8fee-c86b5d7369a9"
>DMI.MasterDMI().In_VirtualBaliseCoverEntryRequest.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Terminal registration failed"
 Guid="30a4e388-0673-4a4f-bcad-3b8fcdeacdaa"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Registration failed"
 Guid="cca05ffc-db83-459e-87bf-4d44d849422a"
>
<PreConditions>
<PreCondition
 Guid="02c842f1-6c18-4c56-a5ba-f9fbac08f891"
>THIS in [Kernel.HandleModeChangeSM.StartOfMission.S3.ReceiveNetworkIDs.Registration]</PreCondition><PreCondition
 Guid="5e66f04d-b2b5-4286-8537-6f8ca289813b"
><Comment>The terminal answered ...</Comment>
EURORADIO.Terminal.RegistrationStatus() == True</PreCondition><PreCondition
 Guid="410d8ef0-d858-41c1-910d-5a6963d9a7da"
><Comment>... that it could not register.</Comment>
EURORADIO.Terminal.RegistrationAnswer() == False</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c566634d-b45d-4a63-bb0a-e050725b142a"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.A29</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="LevelRequest only allowed in S2, S10 or S20"
 Guid="b69265de-eb05-46fc-93bb-f1efe8a1b888"
>
<ReqRef
 Id="8208d384-8400-46e8-98be-8183f5b72238"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c30e27d8-e487-4f69-a4f5-4616e1e60915"
>
</ReqRef><ReqRef
 Id="43636c33-c15e-448c-8ae5-10c4fc06a99b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e40e633d-8d5d-4445-8830-24ecc27f6b93"
>
</ReqRef><ReqRef
 Id="1e7f3c89-d89b-4d31-b758-514c92ae3bf1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d171287a-296f-4dd6-9e60-32fba83e82f2"
>
</ReqRef><Comment>Rule to insure level entry button is disabled when not in S2, S10 and S20.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Deactivation"
 Guid="e79bf752-f2e3-4b53-a651-7b09c061285a"
>
<PreConditions>
<PreCondition
 Guid="9524b02b-eb44-48d0-92e0-73bdf6f0f91a"
>THIS not in [S2, S10, S20]</PreCondition><PreCondition
 Guid="5eca887c-35fc-4aab-a4f7-f340222c8532"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.RequestStatus != RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3d1a3d80-8412-4917-90e0-7ce3c4ef09b2"
>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.Disable()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="320"
 Y="330"
 Width="500"
 Height="50"
 NeedsRequirement="FALSE"
 Name="TrainTrip"
 Guid="513231cc-cfb4-40ed-81d7-19bd692db1a5"
>
<ReqRef
 Id="dc6e23b7-6b64-46ae-8eff-b7bc7d636a3a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bf307ba9-6917-420d-900c-66d83a6e4c55"
>
</ReqRef><Comment>The procedure for handling the entry into TR Mode.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.TrainTrip.S010"
 NeedsRequirement="FALSE"
 Guid="8c4ba40d-94dc-4824-90a2-260c8fcf9c6a"
>
<States>
<State
 X="10"
 Y="50"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S010"
 Guid="d4dcf255-1289-4090-9a09-4b217c379d79"
>
<ReqRef
 Id="7a800db1-0312-49df-8a67-3d61c0b8c37b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8b5876e6-af13-4adc-82fb-b03a600f4edb"
>
</ReqRef><Comment>State S010: Begin the Train Trip procedure</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="abd48729-52f1-4614-94de-c740e6c52c53"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E015"
 Guid="c2a5c374-2036-4edd-93f7-ddbe5fd91a69"
>
<ReqRef
 Id="7a800db1-0312-49df-8a67-3d61c0b8c37b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d842bcb0-95bf-44da-8e15-6f8efee1a6b6"
>
</ReqRef><Comment>Go to A025</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E015"
 Guid="8a5e8ffd-1a27-434a-9e69-4293bc3ea888"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="14d6ea94-ebf6-463a-b1e1-052185a81715"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A025</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="140"
 Y="50"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A025"
 Guid="866553a7-858d-4c0b-925c-bede7328929f"
>
<ReqRef
 Id="eb5aeb5a-ad87-4472-bf20-a249e1f525d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="889b0fd1-2131-42d2-a42c-5b5aa19bf9cb"
>
</ReqRef><Comment>Action A025: Enter Trip Mode</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4a023eea-4cbc-4578-b9a0-b750a1234d68"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="A025"
 Guid="7e260d83-a8d4-4793-964c-7ef4f487fe04"
>
<ReqRef
 Id="eb5aeb5a-ad87-4472-bf20-a249e1f525d2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ef34fe5-6ee5-45f4-bf4d-17b44a8a8366"
>
</ReqRef><Comment>Set Mode to Trip and go to D020</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="A025"
 Guid="62e0151a-a3e0-4d2e-ae38-f6d4e0dfcfa5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4fc228d8-8749-4fc8-8c4b-14e6c0267fc8"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.D020</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="280"
 Y="170"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A030"
 Guid="ee1ca7d1-646b-45e1-9555-35148385c2f1"
>
<ReqRef
 Id="21b9d8d4-21b1-4c6d-a127-d82c90e0fdd8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8000d1db-6d0b-41b7-8ddf-dbb1848407ff"
>
</ReqRef><ReqRef
 Id="1e84c5a2-c916-45da-94c9-cdf6585f39c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4a17e7f9-00db-4021-a1dc-acedc9ae1b29"
>
</ReqRef><ReqRef
 Id="570307dd-e817-45d9-b3d0-1400a19b04f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2458dbe-4a0e-45cd-8a60-eb54ed09139e"
>
</ReqRef><Comment>Action A030: Delete all MA and Track Description information. Proceed to A035.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="cde70f7d-c871-4b94-82a1-c376e01706aa"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A030"
 Guid="30244bcf-c521-46d4-bd33-6b8122c8d102"
>
<ReqRef
 Id="570307dd-e817-45d9-b3d0-1400a19b04f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c9f3513f-06f2-4d39-871e-b5c59f481b34"
>
</ReqRef><Comment>The Mode change report is sent (this is handled in the EURORADIO namespace, in Position Report) and the procedure goes to A035.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="A030"
 Guid="717863ea-6a86-4c02-b1d2-73bb7f6b5831"
>
<Comment>The Mode change report is handled in the EURORADIO namespace.
A Position Report is sent whenever the Mode changes (amongst other conditions), so the report is not explicitely handled here.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="8a5e12aa-48f4-4118-a5f4-704839a18279"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A035</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="460"
 Y="170"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A035"
 Guid="b14d9f9c-143b-4ca3-9851-a1cfb466287c"
>
<ReqRef
 Id="9be8a6ae-9abe-4a16-8a19-f28a0581c994"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e96fdd25-c1f0-4460-b86c-73c3f8da6aab"
>
</ReqRef><Comment>Action A035: Delete all MA and Track Description information. Proceed to S050.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="7cbc950a-d292-4e0a-9807-b105bdd049ca"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A035"
 Guid="da4fd36b-8413-42d1-8267-ac6a4bd62e55"
>
<ReqRef
 Id="9be8a6ae-9abe-4a16-8a19-f28a0581c994"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="16147079-f80a-4498-a415-d3ef2552d1b3"
>
</ReqRef><Comment>All MA and Track Description information (except track conditions) are deleted and the procedure goes to state S050.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A035"
 Guid="e173bef1-be81-43b7-bfbc-1b99ffc6d707"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c438264f-c080-4306-be6c-102dd4c71f6e"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S050</Action><Action
 Guid="2582dd22-7ee8-43d8-973d-1d5d59bc616e"
>Kernel.MA.MA &lt;- EMPTY</Action><Action
 Guid="3e32b74f-4232-46ac-913d-48f8ed6c4ab1"
>Kernel.TrackDescription.StaticSpeedProfile.SSP &lt;- []</Action><Action
 Guid="13acd83f-0de7-4e28-9fb5-0a2c930958bc"
>TrackDescription.Gradient.Gradients &lt;- []</Action><Action
 Guid="3e66ad5c-31e7-4710-88a6-ba7186bd2e65"
>Kernel.TrackDescription.AxleLoad.ASP.ALs &lt;- []</Action><Action
 Guid="bfb9669d-9e0a-4fa4-923a-df58a424861f"
>Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.SpeedRestrictions &lt;- []</Action><Action
 Guid="db8e40f8-8f31-4602-9644-e86929881436"
>Kernel.TrackDescription.AdhesionFactors.AdhFactors &lt;- []</Action><Action
 Guid="0c153c8a-cdcb-4e6c-bee4-153b2d898106"
>Kernel.TrackDescription.ReversingArea.ReversingAreaProfile &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="460"
 Y="50"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S050"
 Guid="ba6e9cce-8604-4a2a-b726-5e1b7c60453c"
>
<ReqRef
 Id="faeb30d5-16e6-44fb-95d1-4045678c6c60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="587e4460-d3f7-417e-85bc-d1047fb5cf00"
>
</ReqRef><Comment>State S050: Apply brakes until the train reaches standstill. Proceed to S060.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="98ebac5b-1432-4b8a-a56b-103b573836e8"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E055"
 Guid="09eaedd1-ae57-4942-bd8b-e7147add3f6a"
>
<ReqRef
 Id="69bdfec5-14ae-43a8-9b36-15d441915044"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a927c66c-9987-4e26-9e02-2e94ec0ccdb2"
>
</ReqRef><ReqRef
 Id="19c49a5f-d2e2-456a-847c-6d87a956a360"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c816c72-c5e1-43ec-a331-9fd53ad64e86"
>
</ReqRef><ReqRef
 Id="5922076b-396c-4635-a3bc-dd00149b3647"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b520578-58d9-4352-9265-c1a0a0bf51c4"
>
</ReqRef><ReqRef
 Id="baa74e49-0452-49c0-a452-f75558625db1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98530011-8612-4905-999e-264737944540"
>
</ReqRef><ReqRef
 Id="3d8929cd-3036-4ab6-a142-7e62115e9f72"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a124576-2bcb-43d6-bf81-eed2af7bb23c"
>
</ReqRef><Comment>When at standstill, go to S060.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E055"
 Guid="a425b57a-0b9e-49bf-ab5b-48a10f9c53c1"
>
<PreConditions>
<PreCondition
 Guid="bd912c80-b11d-4383-8f47-334482455281"
>Odometry.TrainIsAtStandstill()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="35e98016-41c6-4108-9083-ca69fceae8ce"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S060</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="630"
 Y="50"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S060"
 Guid="23a7bbf9-a21f-444d-bd1a-2dcd1bb8d433"
>
<ReqRef
 Id="0bae6856-8d5d-4916-83a0-b8fa4be991ae"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="243aab1e-b3f6-4de7-bd01-4ffc962a72da"
>
</ReqRef><ReqRef
 Id="32b6a168-5f23-49a4-b5ae-4a87344b2b47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0bdccdb-19a7-4ce7-a0be-977c553a0446"
>
</ReqRef><Comment>State S060: Request acknowledgement of Train Trip from the driver. Once the acknowledgement is received, proceed to D080.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.TrainTrip.S060.RequestDriverAck"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e9b9a454-2ec6-48d2-878e-2e609f9097f4"
>
<ReqRef
 Id="0bae6856-8d5d-4916-83a0-b8fa4be991ae"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a8d34c87-cc6d-40c6-a1c8-f1a5d3fed81b"
>
</ReqRef><States>
<State
 X="30"
 Y="30"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
 Guid="1ee8b706-3a8f-461b-8b5d-bdaefeb06153"
>
<ReqRef
 Id="8df0e2ea-eb7f-40b5-b72c-11d3fc2ee7b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d079db42-1b28-4b33-ae44-84b36c9071d6"
>
</ReqRef><Comment>Upon entering S060, request the Driver&apos;s acknowledgement then wait for the response.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="fc2a4181-029d-45d9-8437-a32ba1278e14"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Request driver ack"
 Guid="f33218d6-71fd-4e92-8a33-f7a240317aaa"
>
<ReqRef
 Id="8df0e2ea-eb7f-40b5-b72c-11d3fc2ee7b4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a75ffa5-ede4-4723-b9e6-1001170d9e42"
>
</ReqRef><Comment>Send request for Ack of Train Trip to the DMI, then wait for a response.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request driver ack"
 Guid="c524673b-6372-4f78-8a6d-68231b777d2f"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e974ee8b-f4a6-462c-aeaa-a26536520878"
>DMI.MasterDMI().In_AcknOfTrainTrip.InitiateRequest()</Action><Action
 Guid="3057bc54-5cbc-4164-b149-57051fe70fdc"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S060.DriverAckRequested</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="30"
 Y="130"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
 Guid="7efbfa67-32c7-4db5-b915-466fb56f923e"
>
<ReqRef
 Id="c08c4dd4-2d01-4cfc-ae12-f6e093ce97f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b06d8675-ca60-42aa-a492-82c5850d75a4"
>
</ReqRef><Comment>Once the Driver has acknowledged the Train Trip, go to D080.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="0fecab45-efff-49dd-aac6-fb58215880c0"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E065"
 Guid="5c9e04d8-a279-4b1d-9d81-8a7e91f5cb59"
>
<ReqRef
 Id="c08c4dd4-2d01-4cfc-ae12-f6e093ce97f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5646791f-3b60-4d50-b731-302359224ba6"
>
</ReqRef><ReqRef
 Id="19c49a5f-d2e2-456a-847c-6d87a956a360"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4fcf361e-29bf-46b6-b389-32b28de9cba0"
>
</ReqRef><ReqRef
 Id="5922076b-396c-4635-a3bc-dd00149b3647"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="016d2365-1e8d-4192-8de2-7e0ea56737c8"
>
</ReqRef><ReqRef
 Id="baa74e49-0452-49c0-a452-f75558625db1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5accd5ac-6969-4a73-b64a-7daadb01df73"
>
</ReqRef><ReqRef
 Id="3d8929cd-3036-4ab6-a142-7e62115e9f72"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40d6cfae-2ebe-448d-8464-849456c3f602"
>
</ReqRef><Comment>When the Ack of Train Trip is received, disable the request and go to D080.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E065"
 Guid="c779ce21-5839-4421-a894-dccf0e421218"
>
<PreConditions>
<PreCondition
 Guid="39d0af87-3472-44f0-a3b5-806e67d1b75b"
>DMI.MasterDMI().In_AcknOfTrainTrip.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9b810682-306d-41fa-84ff-890eae846bbc"
>DMI.MasterDMI().In_AcknOfTrainTrip.InputInformation.Disable()</Action><Action
 Guid="3c874fdb-5764-48db-b436-1d58699af90e"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.D080</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="630"
 Y="170"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
 Guid="bb638800-b352-4104-b102-2854d9394b7d"
>
<ReqRef
 Id="9cef3130-290c-46a6-af7c-07e1df0ea3f3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22ab6a9c-33cc-4d67-b7b9-3a6724277e44"
>
</ReqRef><Comment>Decision D080: Choose Action A105 or Decision D085 depending on the Level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="1a807d05-4ca3-4817-bd4e-d4cbfee857e6"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
 Guid="6f2099ef-fb0e-4ece-be73-6b137491f74b"
>
<ReqRef
 Id="9cef3130-290c-46a6-af7c-07e1df0ea3f3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3eae54ee-9d89-409a-818b-e9c405957028"
>
</ReqRef><Comment>If the Level is level 1, 2 or 3, go to A105.
If the Level is level 0 or NTC, go to D085.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 1, 2, 3"
 Guid="78f5790c-2acb-4fbf-b606-d786bd713d74"
>
<ReqRef
 Id="7364d3c3-544e-4eea-adda-1d2b6461aaac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="400a83da-f0aa-40fb-b138-526727ae47c6"
>
</ReqRef><ReqRef
 Id="3d8929cd-3036-4ab6-a142-7e62115e9f72"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f58f2d2-aab5-4167-89de-4723ffdeb938"
>
</ReqRef><Comment>If the Level is level 1, 2 or 3, go to A105.</Comment>
<PreConditions>
<PreCondition
 Guid="381346b4-42d5-4491-a5ee-33979319c657"
>Kernel.Level.Value.Value in [LevelEnum.L1, LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="42aef285-00ea-4612-9353-fe273c39f732"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A105</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 0, NTC"
 Guid="2bbde536-e702-43f6-ace0-05265803d11a"
>
<ReqRef
 Id="20a77818-d458-4cc3-a579-79971189457e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c14785b6-78ad-4b7f-b51f-2eb718ac50ed"
>
</ReqRef><ReqRef
 Id="19c49a5f-d2e2-456a-847c-6d87a956a360"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62e60848-474d-44df-8533-e8c0435ce0c0"
>
</ReqRef><Comment>If the Level is level 0 or NTC, go to D085.</Comment>
<PreConditions>
<PreCondition
 Guid="c304e2bd-7f2c-40b5-87de-07ac74c29513"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.LNTC]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cf9c0c8e-5d6f-458e-9576-fd09a3dc7b9e"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.D085</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="750"
 Y="350"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A150"
 Guid="cbe24884-f60e-4567-92c0-9e059cb0e8ac"
>
<ReqRef
 Id="c66d9504-6139-4a0b-b411-04a20973be2e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80d1088a-47d6-4f2f-8a99-b4fbcccecc02"
>
</ReqRef><Comment>Action A145: Change Mode to SN and end the procedure.


This is handled in the rules for Mode transitions.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="a9d44c24-d705-4bb1-8d3a-ceb8c78e803f"
>
</StateMachine></State><State
 X="550"
 Y="270"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A105"
 Guid="c5f51f77-e45c-49e5-9695-06b3e4dd6800"
>
<ReqRef
 Id="458c52b6-b128-424e-b29e-05cf4a057a91"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e0ce39f-fe4a-4d07-8214-5f2f2ce85284"
>
</ReqRef><ReqRef
 Id="62231675-226e-4512-bb26-157f534b0300"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bea2f0e6-5123-456d-9ece-160dd065f9ca"
>
</ReqRef><Comment>Action A105: Mode changes to PT and the emergency brake command is revoked. Proceed to D110.

This action is handled in the rules for Mode transition.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="8bf0d892-71ea-424d-bc61-54449cb57d66"
>
</StateMachine></State><State
 X="550"
 Y="360"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D110"
 Guid="24558c5c-f618-452a-bf3c-bd16e22bebd7"
>
<ReqRef
 Id="4985c0db-75ef-450e-b5e1-2b9b3de3503e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="437eed85-5f42-4c4b-8cd6-599b4d9b74ef"
>
</ReqRef><Comment>Decision D110: Choose Action A115 or State S140, depending on the Level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="431198bf-6820-4708-81c8-0ffe810a8f38"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D110"
 Guid="caff0bb9-b1d0-487d-a00c-a4643ee9c1e9"
>
<ReqRef
 Id="4985c0db-75ef-450e-b5e1-2b9b3de3503e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32009a08-4984-4b79-9822-b5072ce81dc5"
>
</ReqRef><ReqRef
 Id="7c644530-c702-4fd9-a9a1-a73f90a2bdf8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8c22e7e-a29f-41b5-92aa-69cd905dd8ef"
>
</ReqRef><ReqRef
 Id="781ffdfe-d64c-4a5b-8759-e92aa9394b13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05fbbc61-2432-439f-9174-27d3d9b73836"
>
</ReqRef><Comment>If the Level is level 1, go to S140.
If the Level is level 2 or 3, go to A115.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 1"
 Guid="10a17ef9-2839-4b9d-a868-c30c7b6030ce"
>
<ReqRef
 Id="781ffdfe-d64c-4a5b-8759-e92aa9394b13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b365a9c-0218-4e9e-88ea-d37b9c3c477d"
>
</ReqRef><Comment>If the Level is level 1, go to S140.</Comment>
<PreConditions>
<PreCondition
 Guid="7ca85845-8383-49a3-b1ec-5c52d0b7fb35"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8b629f15-44a4-4733-a3f6-6316b6dd92d7"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S140</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 2, Level 3"
 Guid="8ea39bbc-c118-432e-8bb7-a3074b8aaee8"
>
<ReqRef
 Id="7c644530-c702-4fd9-a9a1-a73f90a2bdf8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f68b6cf0-ec48-4a6d-9539-760127266f68"
>
</ReqRef><Comment>If the Level is level 2 or 3, go to A115.</Comment>
<PreConditions>
<PreCondition
 Guid="9043dfd8-e25e-4e73-a46b-6aefb6c438f9"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="880dd603-8c02-48bd-a1fc-aeea0c049095"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A115</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="280"
 Y="360"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S120"
 Guid="7f3d7ae4-9ea4-45e6-a7d6-78be7d05db73"
>
<ReqRef
 Id="d66a7056-b379-4f68-842b-d83ef90bf4bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed5e44ba-b928-4b65-833b-82df55ca2cc2"
>
</ReqRef><Comment>State S120: The on-board contacts the RBC and waits for acknowledgement of PT Mode. Proceed to D130.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="2d766ed0-11db-426f-983e-761ac79d6bc3"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="S120"
 Guid="49870eb8-75a7-4ab3-afe1-e36fc690039e"
>
<Comment>Send Position Reports periodically until either an acknowledgement is received or the maximum number of repetitions is reached.
Once an acknowledgement is received, go to D130.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E125"
 Guid="86f65751-0650-4202-8247-0e1e8d6b0528"
>
<ReqRef
 Id="03e81fdf-21c4-4670-be56-584116d35c0d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea5a86f7-5d5f-4d63-ad68-d9b4e250757a"
>
</ReqRef><ReqRef
 Id="21c031bd-8f98-4fee-9fc5-f8c7a8b94fc3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f17145c1-25fc-4cec-b07c-93642670299f"
>
</ReqRef><ReqRef
 Id="51b5930a-1ad2-409e-9f84-5443e8f154d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="652f757d-4cc1-4a48-aa46-d33fd84b32a2"
>
</ReqRef><Comment>Once an acknowledgement is received, go to D130.</Comment>
<PreConditions>
<PreCondition
 Guid="ec9ad665-223e-468e-92f5-4db91abad7e4"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).RECOGNITION_OF_EXIT_FROM_TRIP_MODE )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3d6ba8d3-b9b6-4b6c-8abc-8567bb7efd73"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.D130</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, maximum number of requests reached"
 Guid="a6c4a1f5-3282-471d-afe3-136450edbcf8"
>
<ReqRef
 Id="c4552b18-7c1b-4778-a53c-1272271bb392"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="7cf6a73f-9329-4c3e-a377-953dc2bd1a7c"
>
</ReqRef><ReqRef
 Id="84b1f605-4265-4bb8-965e-ea245a16e6d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0cf44430-2574-4c41-aa00-dfd98902f232"
>
</ReqRef><Comment>Once the maximum number of Position Reports have been sent, close the RBC session and the Override function will be activated.</Comment>
<PreConditions>
<PreCondition
 Guid="528d5e2d-a603-4abf-88cf-70f8a807690e"
>EURORADIO.Messages.PositionReport.LastPositionReport.Time + EURORADIO.RBCConnection.TimeBeforeMessageRepetition &gt;= Kernel.DateAndTime.CurrentTime</PreCondition><PreCondition
 Guid="44e7ad72-1a69-4af4-90cf-fe51df4d09ac"
>EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions == 3</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5e051267-f76d-4e1c-b3e8-3430ca27f92e"
>EURORADIO.RBCConnection.TerminateOpenSessions( contactInformationIsKept =&gt; False )</Action><Action
 Guid="e417f332-0232-4bd9-b447-c72192adc81f"
>EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions &lt;- 0</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, a new request can be sent"
 Guid="7a37d41f-3711-4ad0-809e-5bbb4d236289"
>
<ReqRef
 Id="f4b1a027-643a-48c1-a840-1735e19ae661"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1da59079-3ecc-4d11-b595-eae8fb0a7e4b"
>
</ReqRef><Comment>Send Position Reports to the RBC periodically until an answer is received or the maximum number of reports have been sent.</Comment>
<PreConditions>
<PreCondition
 Guid="af65778b-f8e2-4308-9aad-916b891b06a5"
>EURORADIO.Messages.PositionReport.LastPositionReport.Time + EURORADIO.RBCConnection.TimeBeforeMessageRepetition &gt;= Kernel.DateAndTime.CurrentTime</PreCondition><PreCondition
 Guid="65472c45-fb03-45c1-b6c4-4882d5db91a2"
>EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="db1ae574-596a-4769-b545-a8ac4ef20a8b"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendPositionReport()</Action><Action
 Guid="966a9e43-3c4b-4bbd-8255-7bc4f9d48518"
>EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions &lt;- EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions + 1</Action><Action
 Guid="00277364-b480-4ce2-879a-9ff25c5617ef"
>EURORADIO.Messages.PositionReport.LastPositionReport.Time &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="280"
 Y="450"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D130"
 Guid="5b242497-1fe5-4e79-af80-26dac029f53d"
>
<ReqRef
 Id="a2fcf695-a724-4a9e-850c-aa791e0d2403"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac4160fc-b782-4d8b-ae6b-bd381e13ba21"
>
</ReqRef><Comment>Decision D130: Choose S130 or S140, depending on whether there are any pending emergency stops.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e7dd3a38-8f4c-4fbe-a4a5-8b2e33ed05de"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D130"
 Guid="fd53a975-a762-43da-9019-86f144d237a6"
>
<ReqRef
 Id="a2fcf695-a724-4a9e-850c-aa791e0d2403"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc5f313a-546b-4aed-b77c-0fbd4b3ed044"
>
</ReqRef><Comment>If there are no pending emergency stops, go to S140.
If there are pending emergency stops, go to S130.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No emergency stops"
 Guid="b8e7baff-494a-4096-b7c0-42d2cdcee348"
>
<ReqRef
 Id="3991569f-53ae-4c85-ae2e-22ccdea80ca5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95c1a232-cce1-4409-90ab-61364b666bb9"
>
</ReqRef><Comment>If there are no pending emergency stops, go to S140.</Comment>
<PreConditions>
<PreCondition
 Guid="9dc5b1d9-05dc-49e3-89a1-97efd85b048c"
>Kernel.BrakeCommands.EmergencyStops == []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6369faef-bf0e-4161-8a3d-8873f1c1f0ac"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S140</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Pending emergency stop"
 Guid="79602819-7a8c-4f40-9244-a1d7fb728180"
>
<ReqRef
 Id="0bf0ab9d-7ce3-46d5-a104-d59dbbcf8e4a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1361f01b-80aa-4868-a23a-b40b9b8b177a"
>
</ReqRef><Comment>If there are pending emergency stops, go to S130.</Comment>
<PreConditions>
<PreCondition
 Guid="8ea2e2cc-f1f2-415b-bca4-fe21fb4e80bb"
>Kernel.BrakeCommands.EmergencyStops != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bb6f0559-f476-4f61-8234-749ad0a46b84"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S130</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="90"
 Y="540"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S130"
 Guid="0812ac63-2ce4-4fd8-b848-16d833f6d6ce"
>
<ReqRef
 Id="a2fcf695-a724-4a9e-850c-aa791e0d2403"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0bda7d4e-1ac3-459b-bea2-b1ff0ec8b4ce"
>
</ReqRef><Comment>State S130: Wait for the RBC to revoke all emergency stops. Proceed to S140.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="c22e776f-bfb0-4714-b4ad-31fb12e9d843"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E135"
 Guid="e0c967c0-87a5-437d-9b03-709054ac913f"
>
<ReqRef
 Id="d0b99ecd-1992-4aae-9fe2-9ea2b7873292"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e408e8f5-ce27-4475-ab54-3b1773507964"
>
</ReqRef><Comment>Once all the stored emergency stops have been revoked by the RBC, go to S140.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E135"
 Guid="d2b73f4f-604e-4268-94f7-3368b877407e"
>
<PreConditions>
<PreCondition
 Guid="b3a80965-8ba1-411b-bbcd-61295bb0c42b"
>Kernel.BrakeCommands.EmergencyStops == []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c4b36227-358d-4f92-822b-c239e4063ec8"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S140</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="290"
 Y="540"
 Width="400"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S140"
 Guid="f6f8307b-b7c7-43e8-bc39-b21423158efa"
>
<ReqRef
 Id="05d0b794-9069-41fe-b9f7-f7085e32d535"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c053713-c14b-4e9c-8fb9-49a35121d012"
>
</ReqRef><ReqRef
 Id="6ad8d7bf-01fe-471e-92c3-38b06b7a48f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30a17e3a-a4b7-439e-80f7-9617bf8770fd"
>
</ReqRef><Comment>State S140: The Driver can select either &apos;Start&apos; or entry in SH Mode. Depending on the Level and the Driver&apos;s selection, proceed to States S160 or S170, or start the &quot;Shunting initiated by Driver&quot; procedure.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.TrainTrip.S140.RequestDriverSelection"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="145893a3-bfa7-4fc5-9827-ee7aa1860de2"
>
<ReqRef
 Id="05d0b794-9069-41fe-b9f7-f7085e32d535"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a52e4a04-f85f-4214-aa29-2e8f4b83cc38"
>
</ReqRef><States>
<State
 X="100"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverSelection"
 Guid="49829a92-a01c-46d8-a599-0f01b57a6a40"
>
<ReqRef
 Id="dfdc851b-0f50-470e-8cbc-c7d0ae012b9d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c17bd03-7731-4bfb-bb52-f74538c5627c"
>
</ReqRef><Comment>Propose Entry in SH and Start (if applicable), then go to DriverSelectionRequested.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="8d467867-fea6-4ae6-8176-92886ff14de1"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="RequestDriverSelection"
 Guid="4aab0777-80b3-4511-9141-eed1dd2314b4"
>
<ReqRef
 Id="dfdc851b-0f50-470e-8cbc-c7d0ae012b9d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10293d00-d6dc-41c0-98a2-d492ad760d64"
>
</ReqRef><Comment>Offer Entry in Shunting and, if valid Train Data is stored on-board, Start.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestDriverSelection"
 Guid="99b82971-3417-4ddb-a948-dcc99b9f3460"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="823d4bf3-7fa5-47a2-b989-00c45f07221f"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S140.DriverSelectionRequested</Action><Action
 Guid="7a3cf90e-21db-4389-9eed-ba4477662811"
>DMI.MasterDMI().In_ShuntingRequest.InitiateRequest()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Valid train data"
 Guid="9d5d88b3-7e6a-4a13-bd1c-3d4ad2c390de"
>
<ReqRef
 Id="9f33f81f-8311-4e08-b43d-80816d35a690"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="6343a7f1-10cc-47aa-ade4-688c8f58c955"
>
</ReqRef><Comment>Propose &apos;Start&apos; if there is valid Train Data stored on-board.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid Train data"
 Guid="3c95d683-6c5d-4ec2-a88a-ecf93809516c"
>
<PreConditions>
<PreCondition
 Guid="8bd93a06-a6f7-4104-bfab-95efe47e32c4"
>TrainData.TrainData.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="579b0f8d-9f55-46d4-b079-98656a53e736"
>DMI.MasterDMI().In_Start.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="100"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DriverSelectionRequested"
 Guid="da553980-a876-4974-a6e0-37d148c735c9"
>
<ReqRef
 Id="8ed924c8-449b-49e3-b97b-9d9bac584781"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9497beba-d575-4c08-a8a7-56da9dcc8810"
>
</ReqRef><ReqRef
 Id="a4b631e4-9069-4f56-b3ab-340f8ec68908"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fefdd3f-0b15-4626-ace6-7f104d9da450"
>
</ReqRef><ReqRef
 Id="e4f509dd-fcb0-4205-8e6b-921aae447bca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c5165d9-bdd3-44b3-91b0-157eb2ba7a72"
>
</ReqRef><Comment>Wait for the Driver&apos;s response. The action will depend on the response and the Level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e65e02f1-a1f2-47da-b33e-7bfde25d6290"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver has answered"
 Guid="4caba2bd-5c30-45e6-b301-315d1192ef23"
>
<ReqRef
 Id="6114bfb9-055b-4951-93ea-75d62541b167"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="a3db26cc-42a0-4af3-9117-129b5d500418"
>
</ReqRef><Comment>If the Driver selects Start and the Level is level 2 or 3, go to S150.
If the Driver selects Start and the Level is level 1, go to S160.
If the Driver selects Entry in SH, initiate &quot;Shunting initiated by Driver&quot; procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E155"
 Guid="cf98221e-cb8e-4e9f-8246-958126ac1f83"
>
<ReqRef
 Id="a4b631e4-9069-4f56-b3ab-340f8ec68908"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b73edaa-b642-4145-930d-d7af8b4edced"
>
</ReqRef><Comment>If the Driver selects Start and the Level is level 2 or 3, go to S150.</Comment>
<PreConditions>
<PreCondition
 Guid="8748e903-765c-482a-b060-e24a8c012a8e"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition><PreCondition
 Guid="16f83256-478c-4f7c-9056-b8097c00fbda"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="943a1f2f-1239-439f-a012-d060ccc05728"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.Disable()</Action><Action
 Guid="741cde16-5ca2-4fe2-a0ff-31743d338787"
>DMI.MasterDMI().In_Start.InputInformation.Disable()</Action><Action
 Guid="08f650ec-16ac-4ddd-bd1f-a112069dd4aa"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S150</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E150"
 Guid="02c3a70e-2e23-40c5-bb25-2c8366b0bf56"
>
<ReqRef
 Id="8ed924c8-449b-49e3-b97b-9d9bac584781"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7858503e-4f6a-46d2-88b2-175cdfed8f7e"
>
</ReqRef><Comment>If the Driver selects Start and the Level is level 1, go to S160.</Comment>
<PreConditions>
<PreCondition
 Guid="22c8f914-81c5-45ec-98e4-85fec0186b89"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition><PreCondition
 Guid="bcbf278e-7248-4a02-9580-06002d14112f"
>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9617e3b5-fa81-46f2-aefb-50865d8ce869"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.Disable()</Action><Action
 Guid="91093a5f-2aae-457d-a856-d36fbd2facc9"
>DMI.MasterDMI().In_Start.InputInformation.Disable()</Action><Action
 Guid="b68a1177-0104-41b1-b6c3-eb641d14f384"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S160</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E145"
 Guid="134a5ebf-963f-44aa-b497-a3ca9bad7887"
>
<ReqRef
 Id="3d01d017-72ad-4ae6-888e-a4e7f0241a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="725324e5-f800-4a3a-8f8a-16b72cbc8cde"
>
</ReqRef><ReqRef
 Id="a7dfd21b-40f7-4ea2-8604-1cb1cf5a2a65"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab462add-6711-4651-8efd-23956f4f4f0c"
>
</ReqRef><ReqRef
 Id="e4f509dd-fcb0-4205-8e6b-921aae447bca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68152ba1-59ec-42e3-9d7c-f297af4902cb"
>
</ReqRef><Comment>If the Driver selects Entry in SH, initiate &quot;Shunting initiated by Driver&quot; procedure.</Comment>
<PreConditions>
<PreCondition
 Guid="fbf6c6bf-abd0-403c-bb99-33cf81ed6bce"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.DriverAnswered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="180ce797-b671-4585-a52f-426f2fa4056b"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.Disable()</Action><Action
 Guid="c9cabf9b-e4f8-4ebb-ace5-dbab095ab111"
>DMI.MasterDMI().In_Start.InputInformation.Disable()</Action><Action
 Guid="d367c039-b4a7-42a3-a80f-a18eed86e4d4"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="760"
 Y="550"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S150"
 Guid="519b89d8-083c-4e07-a3fe-132e54a45a77"
>
<ReqRef
 Id="79973edc-1e31-489a-82f9-9c7f7b894493"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="51a0236b-7b45-40ef-9014-5beabdbacb96"
>
</ReqRef><ReqRef
 Id="6ad8d7bf-01fe-471e-92c3-38b06b7a48f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46599cdc-a90b-416d-a139-4a71c8bda782"
>
</ReqRef><Comment>State S150: The on-board sends an MA request and chooses States S160 or S170, or ends the procedure, depending on the response.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.TrainTrip.S150.SendMARequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="89057797-d1bb-4252-8116-2326fba25163"
>
<ReqRef
 Id="79973edc-1e31-489a-82f9-9c7f7b894493"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="171c938c-1a22-41f8-ba15-d51a79fd810b"
>
</ReqRef><States>
<State
 X="110"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendMARequest"
 Guid="d797d7a3-f28f-493a-bd2d-867a08c254cb"
>
<ReqRef
 Id="b490aef9-44fa-4043-a130-aa1a33c15e0c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="99c11309-8314-4ba5-8130-18e9d224f951"
>
</ReqRef><ReqRef
 Id="4443416b-4b5b-4896-a845-222b762d3950"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a287c29-c3bb-4dea-b5a2-3af2f11c3bf7"
>
</ReqRef><ReqRef
 Id="8ae45849-75e7-4ebf-9e7c-625d834e6433"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1882a332-6b39-4b30-a9bc-5fc0f80e4662"
>
</ReqRef><ReqRef
 Id="ff288c94-6672-4739-a2b6-fd66db6c9de8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b2482c8-a4e2-4391-809f-f917b831d17f"
>
</ReqRef><Comment>Send a MA request to the RBC, the ngo to MARequestSent.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="5b07bb1c-d2be-45f2-8f2a-019b8fdda636"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Send MA request"
 Guid="8795c55c-d620-4888-a5c2-64b87d6c009c"
>
<ReqRef
 Id="b490aef9-44fa-4043-a130-aa1a33c15e0c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9cd4a2d1-e6ca-488b-b3a8-ce680a761be1"
>
</ReqRef><ReqRef
 Id="2ac2d446-1ee9-4dbb-90d3-7ae063cd2925"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1935d15d-de46-4ff7-bf0d-df0479997532"
>
</ReqRef><Comment>Send a MA request and go to MARequestSent.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send MA request"
 Guid="c64ab4f8-bcad-43bf-ace1-61357da48ff5"
>
<PreConditions>
<PreCondition
 Guid="f795015d-7980-4c60-9ad7-76b79fb6917b"
>Kernel.ActiveFunctions.RequestMA_StartSelected()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="39540147-4615-44eb-84a8-9083d135c7c0"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendMARequest
(
    aReason =&gt; Messages.Q_MARQSTREASON.Start_selected_by_driver,
    aPacket =&gt; EMPTY
)</Action><Action
 Guid="fed8c181-694f-4bae-b0ce-bceb028acba9"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S150.MARequestSent</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MARequestSent"
 Guid="dba0222a-4534-4dd5-8cb9-5ed47cc0538d"
>
<ReqRef
 Id="a54617b4-525f-472d-9e22-cd671feaee3b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32708ba3-2046-4048-ad7f-920269b32853"
>
</ReqRef><ReqRef
 Id="c5dfe3ed-6a84-4f83-a94d-2d2859aa42fc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6955dc21-240d-4a74-84b9-a2830f77a748"
>
</ReqRef><ReqRef
 Id="6ed812c6-f711-468a-8c0f-0843bf2384be"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ba5cba9f-bfe7-4591-a559-1c5dfbe9974c"
>
</ReqRef><Comment>After a MA request is sent, the on-board waits for a response and either goes to S160 or S170, or ends the procedure, depending on the response.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="b586e25e-24a5-4e61-b832-69de7ff17041"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="MARequestSent"
 Guid="78e2dae6-48fc-46f7-8a3c-e247b2878a8f"
>
<Comment>If the RBC sends a SR authorisation, go to S160.
If the RBC sends a MA with a Mode Profile, go to S170.
If the RBC sends a MA without a Mode Profile, the Mode will change to FS and the Train trip procedure will end. This is handled in the Mode transitions.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E26"
 Guid="6b322841-1dbb-4732-bf8a-721d6e419a56"
>
<ReqRef
 Id="a54617b4-525f-472d-9e22-cd671feaee3b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe9b9104-ce87-4d3e-b907-2e1299ed38c4"
>
</ReqRef><Comment>If the RBC sends a SR authorisation, go to S160.</Comment>
<PreConditions>
<PreCondition
 Guid="de3e27a7-c5e6-4f07-8b68-aadb8d7fc131"
>Kernel.Modes.StaffResponsible.SRAuthorised()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7ddbbfa8-8c2a-423e-982b-b4feec5a94ae"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S160</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E175"
 Guid="41646756-599f-4504-8b15-414cbec9b795"
>
<ReqRef
 Id="c5dfe3ed-6a84-4f83-a94d-2d2859aa42fc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="617a4385-4c42-429b-9160-7933ac39fc0b"
>
</ReqRef><ReqRef
 Id="c7906978-32c5-4b29-bb48-bb2bb5d7190b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e82bc4c0-7519-4d7c-9715-84f06f1ca5a3"
>
</ReqRef><ReqRef
 Id="91e483bb-c16e-4c94-8256-d3dcf2d0e0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e07d5cfb-364f-4788-81c9-76eff5dc61ee"
>
</ReqRef><ReqRef
 Id="aa3f1b72-e48c-4c84-af17-db6bfe3c11b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aeed2537-fc04-4a96-9cc9-44aab898ddab"
>
</ReqRef><Comment>If the RBC sends a MA with a Mode Profile, go to S170.</Comment>
<PreConditions>
<PreCondition
 Guid="abe91836-f15f-4e85-bb48-284618adc79f"
>Available ( Kernel.MA.MA )</PreCondition><PreCondition
 Guid="b392e994-22e6-4664-b3de-a6f2d0ddc35d"
>Kernel.MA.ModeProfile.ModeProfileIsApplicable()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6f1a6f0a-0a50-49dc-a9c6-9024364d3bd2"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S170</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="580"
 Y="630"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S160"
 Guid="6c37aeb7-8d22-4116-b72f-eb4077aeebc6"
>
<ReqRef
 Id="d20ca54f-b973-4b49-9923-a3eaf4c2d07e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c569b9b8-f56f-4cd7-9826-ed2f20a73798"
>
</ReqRef><ReqRef
 Id="d20ca54f-b973-4b49-9923-a3eaf4c2d07e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6b708915-a39b-42b4-868a-4dc801c47d79"
>
</ReqRef><ReqRef
 Id="6ad8d7bf-01fe-471e-92c3-38b06b7a48f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="58a44da9-41b9-4e83-8018-9877ad70fc50"
>
</ReqRef><Comment>State S160: The Driver is requested to acknowledge the entry in SR Mode. Once this is received, the procedure ends.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="fccae4c9-94d6-4626-a5f4-6550c57d1665"
>
<ReqRef
 Id="d20ca54f-b973-4b49-9923-a3eaf4c2d07e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80b82576-2565-4dec-996f-da396609f0fd"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Request driver ack"
 Guid="a1090298-2204-4d83-8e94-79787e8e74d4"
>
<ReqRef
 Id="da598b1f-9157-4e9a-8888-5cfc296ac2a3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b07df63d-dac5-4149-bc80-331bcfabf51b"
>
</ReqRef><ReqRef
 Id="67821ca1-b727-417d-bd7e-38b05017910c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3324e2a7-ca2b-4ded-8dbb-6fc8689af099"
>
</ReqRef><Comment>Send a request to the Driver for &quot;Acknowledgement of SR Mose&quot;.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request driver ack"
 Guid="28c7e6e8-15f7-41c7-b4df-ec7d2655c9e5"
>
<PreConditions>
<PreCondition
 Guid="8f77c5a0-ecec-4a9e-a8f6-70aaf095798b"
>DMI.MasterDMI().In_AcknOfSRMode.InputInformation.RequestStatus == RequestEnum.Disabled</PreCondition></PreConditions>
<Actions>
<Action
 Guid="be31f090-2f1d-4061-83a6-729a5aed0a7c"
>DMI.MasterDMI().In_AcknOfSRMode.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="940"
 Y="540"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S170"
 Guid="bad1b295-5dfa-47bc-9898-7ac3177d06ee"
>
<ReqRef
 Id="607f77f2-dd97-4b41-bd65-683352dfdfc9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="57b32a25-e1b2-4d74-a9f5-e30cc9d4f72e"
>
</ReqRef><ReqRef
 Id="607f77f2-dd97-4b41-bd65-683352dfdfc9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac405ca3-7ec3-4a8a-b2ae-6bf2f19f994b"
>
</ReqRef><Comment>State S170: The Driver is requested to acknowledge the Mode received in the Mode Profile. Once this acknowledgement is received, the procedure ends.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.TrainTrip.S170.RequestDriverAck"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e18c8ff9-90a9-4638-adc4-35ddceb7faca"
>
<States>
<State
 X="70"
 Y="50"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
 Guid="7fb84f0e-3ff1-4260-95c3-450d11213e76"
>
<ReqRef
 Id="24c07d7e-5637-4dfa-8ad0-b07595006ea3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d8c8ae2d-4095-4f58-be82-4760a49588c7"
>
</ReqRef><Comment>Request acknowledgement for the Mode required by the Mode Profile, then go to DriverAckRequested.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="6e73bdb0-d4c6-4e42-be99-f237e7fd6afc"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Request driver ack"
 Guid="f0efbc3d-c139-4614-98f3-3f6a8beae34d"
>
<ReqRef
 Id="24c07d7e-5637-4dfa-8ad0-b07595006ea3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d85649e0-00fc-4108-a94a-4add97b0066c"
>
</ReqRef><ReqRef
 Id="7a006572-8e75-4e6b-be5e-b096bfa7f855"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc19b645-67cd-4812-a689-0dadbb6c5ae6"
>
</ReqRef><Comment>Send a request to the DMI for acknowledgement of the Mode as requested by the Mode Profile and go to DriverAckRequested.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request driver ack"
 Guid="56a9be66-1753-4417-827c-19bcdca0b3ad"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4c8eb4a4-ba68-4876-9e7b-d4cbef9cae95"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S170.DriverAckRequested</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request ack for OS"
 Guid="69757fb2-3b75-47a0-81de-63acef14c22c"
>
<ReqRef
 Id="c7906978-32c5-4b29-bb48-bb2bb5d7190b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="853d998d-7b2c-4308-9112-09efdbc7c001"
>
</ReqRef><ReqRef
 Id="4ebd4845-9d08-4721-8788-6991ab66d3eb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f2654f48-25cd-40f4-95c6-cd4fb966d62b"
>
</ReqRef><Comment>If the Mode Profile contains a OS Mode starting at the train&apos;s position, request acknowledgement for OS Mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="OS"
 Guid="4cee0b29-91dc-43a7-8748-c3ac3bb1657c"
>
<PreConditions>
<PreCondition
 Guid="c551b067-d254-4c56-baac-37c31b9f6cb2"
>Kernel.MA.ModeProfile.CurrentMode() == ModeEnum.ModeProfile.OS</PreCondition></PreConditions>
<Actions>
<Action
 Guid="20fa23e1-ae46-4bb5-9b1d-e2b07d2a131e"
>DMI.MasterDMI().In_AcknOfOSMode.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request ack for LS"
 Guid="c1608343-9abe-4b2a-a478-830f7dd56f98"
>
<ReqRef
 Id="aa3f1b72-e48c-4c84-af17-db6bfe3c11b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22ba3628-8bba-4fcf-92fb-fa9fbf01bd5d"
>
</ReqRef><ReqRef
 Id="8c7eb4ff-2716-4d9f-a6f2-bd52aacc416b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0570dace-e623-48b2-8388-443eba9b7d77"
>
</ReqRef><Comment>If the Mode Profile contains a LS Mode starting at the train&apos;s position, request acknowledgement for LS Mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="LS"
 Guid="99e3a56c-fc15-4521-9ccb-7fa739c0f2d3"
>
<PreConditions>
<PreCondition
 Guid="97ee615f-e5eb-4e58-98a7-d93b1ee16dbc"
>Kernel.MA.ModeProfile.CurrentMode() == ModeEnum.ModeProfile.LS</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ea87de01-786e-488a-9595-cfc2398832cd"
>DMI.MasterDMI().In_AcknOfLSMode.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request ack for SH"
 Guid="6ed34e5d-c2a2-43e8-a965-7c0ad96a5f79"
>
<ReqRef
 Id="91e483bb-c16e-4c94-8256-d3dcf2d0e0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b312b0c6-a3f0-424f-9d9f-e10214659ae6"
>
</ReqRef><ReqRef
 Id="39ae88ad-20ca-43d1-8c3f-5f7172777b6e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0b6a958-5718-4b1f-a74a-787ff31fc4c6"
>
</ReqRef><Comment>If the Mode Profile contains a SH Mode starting at the train&apos;s position, request acknowledgement for SH Mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="SH"
 Guid="b59096c1-7841-4fc2-a51d-7d45b41880d9"
>
<PreConditions>
<PreCondition
 Guid="64197a7e-5607-4126-b26e-96462181d60c"
>Kernel.MA.ModeProfile.CurrentMode() == ModeEnum.ModeProfile.SH</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a6c8e672-2266-4133-90e9-57ecccd75c06"
>DMI.MasterDMI().In_AcknOfSHMode.InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="70"
 Y="160"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
 Guid="3bc22ff9-557a-4321-b609-9513353a6ed5"
>
<ReqRef
 Id="af1d067a-7dc9-45dc-9ce8-dcbd2fe36941"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb26ec59-2af2-401e-8562-96db3aa82775"
>
</ReqRef><Comment>The handling of the the Driver&apos;s acknowledgement is done in Mode transitions. The procedure will end.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="eed8ab44-bbad-4c80-8b03-35508889cf84"
>
</StateMachine></State></States>
</StateMachine></State><State
 X="280"
 Y="50"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
 Guid="ea958f61-b2e6-4344-8977-e76cb4f355bc"
>
<ReqRef
 Id="708eaaf1-04ba-46c2-aa01-47d2ddd20b8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a135de75-d14f-46c3-a32d-1db6474db7d6"
>
</ReqRef><Comment>Decision D020: Choose state S050 or actions A030 or A035 depending on the current Mode</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="2b0c7b24-54d3-4705-bf41-6d0493aed54f"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D020"
 Guid="f97abc09-1e2c-44bb-a96c-6831e513ab6a"
>
<ReqRef
 Id="708eaaf1-04ba-46c2-aa01-47d2ddd20b8d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11889f89-e06f-4a8f-80f5-5e5d980fe054"
>
</ReqRef><ReqRef
 Id="4ab254b6-4bbf-464c-9170-75905b61adcb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d0f2934c-2b70-476c-ab6b-49ffafac9866"
>
</ReqRef><ReqRef
 Id="34640ebd-9a29-4cc2-9bfc-c11616a1eac8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c327cdbc-433f-45c2-916a-21f1a5d726cb"
>
</ReqRef><ReqRef
 Id="32670e49-9b3d-41ae-b115-4c9a1f6dc1e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3afe59f6-9cf8-43cd-b1ec-d8ebd001c101"
>
</ReqRef><Comment>If Level is level 1, go to A035.
If Level is level 2 or 3, go to A030.
If Level is level 0 or NTC, go to S050.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 1"
 Guid="883b3daa-1c4a-4ce7-992a-37be32afd812"
>
<ReqRef
 Id="4ab254b6-4bbf-464c-9170-75905b61adcb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e649cff-668f-42ee-8e78-cb088be23cae"
>
</ReqRef><Comment>If Level is level 1, go to A035.</Comment>
<PreConditions>
<PreCondition
 Guid="838ed804-4420-4d1a-a78c-d57a5807850b"
>Kernel.Level.Value.Value == LevelEnum.L1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="09c7dc8d-656d-4abc-b9f6-bcc86aaa7317"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A035</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 2, 3"
 Guid="8e3f491e-87bd-4744-8bdb-fd6e0455cce9"
>
<ReqRef
 Id="34640ebd-9a29-4cc2-9bfc-c11616a1eac8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd350800-229a-467d-8fd4-45560d6e45b4"
>
</ReqRef><Comment>If Level is level 2 or 3, go to A030.</Comment>
<PreConditions>
<PreCondition
 Guid="e9082bb3-1606-490a-8aac-5442ef5a2374"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7021103e-5033-4c1f-b30f-d38d80b995e0"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A030</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 0, NTC"
 Guid="57f6d6ef-68c8-4451-b94f-4395021d8f29"
>
<ReqRef
 Id="32670e49-9b3d-41ae-b115-4c9a1f6dc1e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c70d6782-c142-459d-9b25-bbfed38911c1"
>
</ReqRef><Comment>If Level is level 0 or NTC, go to S050.</Comment>
<PreConditions>
<PreCondition
 Guid="cbf4243a-6975-42f8-bad9-07e9c8245eba"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.LNTC]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="85b52695-7760-43b1-b283-fb62fe9e270a"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S050</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="810"
 Y="170"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D085"
 Guid="988575d7-45bd-440b-be44-cd15ef4f1e62"
>
<ReqRef
 Id="8a4ca614-e3bc-4aa4-ad33-afce78253af2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25305c66-d14c-4442-80b8-910123abfa37"
>
</ReqRef><Comment>Decision D085: Choose Action A140 or Decision D090, depending on whether valid Train Data is stored on-board.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="f7773569-6f7d-42f1-882f-42945cfeb32a"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D085"
 Guid="a3cfcb39-174f-400a-92b6-cb6ecc73448a"
>
<ReqRef
 Id="8a4ca614-e3bc-4aa4-ad33-afce78253af2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b2a7813-f99d-49ac-9c50-55fa017cfbbf"
>
</ReqRef><Comment>If the on-board has valid Train Data stored, go to D090.
If the on-board does not have valid Train Data stored, go to A140.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Valid data"
 Guid="9701c061-6a35-44f4-a22e-aa5ba82663c5"
>
<ReqRef
 Id="ad21fa53-6db5-4bf3-af13-6d90389c9bdb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fa4ad0e8-21a4-415f-9312-6a76b111f771"
>
</ReqRef><ReqRef
 Id="5922076b-396c-4635-a3bc-dd00149b3647"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2674894b-c879-4cb2-b6bd-6e2b51bad4b8"
>
</ReqRef><ReqRef
 Id="baa74e49-0452-49c0-a452-f75558625db1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0b17802-d381-45c0-b0f9-7a5f7c37c57d"
>
</ReqRef><Comment>If the on-board has valid Train Data stored, go to D090.</Comment>
<PreConditions>
<PreCondition
 Guid="009375ee-d07e-4c39-9d8c-5d10e25e1063"
>TrainData.TrainData.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d1abc592-c25b-46e3-bedc-b40ab4be542f"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.D090</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No valid data"
 Guid="642e837f-37b3-44a5-a7a2-d9e0facf2744"
>
<ReqRef
 Id="68b4d5bd-48d1-4e00-b91b-a41dc51986be"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18e08981-853f-41da-a6e7-a6b7a2dbf330"
>
</ReqRef><ReqRef
 Id="19c49a5f-d2e2-456a-847c-6d87a956a360"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7cc064e-ac74-4fe1-aa6d-6d08649af3b4"
>
</ReqRef><Comment>If the on-board does not have valid Train Data stored, go to A140.</Comment>
<PreConditions>
<PreCondition
 Guid="7c9fb8b6-860d-4f53-a90c-4267b9f1482e"
>TrainData.TrainData.DataState != DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="08e32f3e-7e99-4a6b-8345-c01f48191fbe"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A140</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="810"
 Y="260"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D090"
 Guid="1d779b52-ef20-4694-a9aa-58c16adeb996"
>
<ReqRef
 Id="2aca08c0-e2e9-4d56-93f8-31654c48705d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5af8f8f-d247-44cd-bd8d-36298e47cb1b"
>
</ReqRef><Comment>Decision D090: Choose Actions A145 or A150, depending on the Level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="210482a6-5934-4192-9d96-6032e036f8c3"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D090"
 Guid="c32cc84a-9e77-4dff-a353-15120ec46e03"
>
<ReqRef
 Id="2aca08c0-e2e9-4d56-93f8-31654c48705d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="100e4e01-0374-4be9-aae5-0412e0186c34"
>
</ReqRef><Comment>If the Level is level 0, go to A145.
If the Level is Level NTC, go to A150.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 0"
 Guid="0cacdbf5-f675-4382-97c2-77ec99ef335a"
>
<ReqRef
 Id="e7bdf687-c54b-4d32-a5c6-00cd7f6bd21e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e796920b-d7fe-42b3-ac6a-595a7518297c"
>
</ReqRef><ReqRef
 Id="5922076b-396c-4635-a3bc-dd00149b3647"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ca6fbeb0-536d-449c-8c96-c14bc540f420"
>
</ReqRef><Comment>If the Level is level 0, go to A145.</Comment>
<PreConditions>
<PreCondition
 Guid="e310a442-e50c-450e-b592-b583920672ac"
>Kernel.Level.Value.Value == LevelEnum.L0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dd60d7fc-8555-4d2d-8699-72ff8b2617a4"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A145</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level NTC"
 Guid="e71f81aa-590c-4c08-b02f-6a0b981e45e9"
>
<ReqRef
 Id="602dc383-9138-403a-ac74-13e9cb2047eb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f73159e2-3696-44ed-a91c-e932d91bb1fe"
>
</ReqRef><ReqRef
 Id="baa74e49-0452-49c0-a452-f75558625db1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f18f6e2a-b3e4-49aa-9ca9-2b50783a12d4"
>
</ReqRef><Comment>If the Level is Level NTC, go to A150.</Comment>
<PreConditions>
<PreCondition
 Guid="91457cfd-d5e2-4eab-937d-a0c20b543156"
>Kernel.Level.Value.Value == LevelEnum.LNTC</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cc7d4ceb-1e1a-4a4e-869e-7e75a2f8c68e"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.A150</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="910"
 Y="90"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A140"
 Guid="8fe5c2f9-39de-4216-a300-3729070bc7c6"
>
<ReqRef
 Id="97a651d7-2517-48ce-8d06-d2c205c7cc1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bd39dfb0-eba2-4525-8fde-7e3454153182"
>
</ReqRef><Comment>Action A140: The Mode changes to SH and the procedure ends.


This is handled in the rules for Mode transitions.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="8a51e59e-d324-4b4b-82d0-f83a497aa00e"
>
</StateMachine></State><State
 X="870"
 Y="350"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A145"
 Guid="9be519d3-f115-445a-825f-254a8fd5a19e"
>
<ReqRef
 Id="ad5e8878-4a8a-4a39-9072-970084488dfa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0619249f-69e8-4463-b3a2-2adcf581dc37"
>
</ReqRef><Comment>Action A145: Change Mode to UN and end the procedure.


This is handled in the rules for Mode transitions.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4e6494e9-929f-4f07-baf4-418497cd560d"
>
</StateMachine></State><State
 X="280"
 Y="270"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A115"
 Guid="81ff89f9-8964-4102-9dd5-01721017991b"
>
<ReqRef
 Id="9e235c11-59a2-4259-80f0-b5b1a76e3673"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4f34d119-827a-444b-9477-6e95879461ad"
>
</ReqRef><Comment>Action A105: Mode change to PT is reported to the RBC. Proceed to S120.

The report is handled in the EURORADIO namespace</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="d73748af-2ae1-4cf2-a671-4273bea9481f"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="A115"
 Guid="3cd44f38-e63c-42a7-9a59-ba05433f0b35"
>
<ReqRef
 Id="b1fe97fd-7b59-47e6-b2b5-b1ae367f3a0c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="044045fe-5208-4dd2-862c-ee4a0cee6055"
>
</ReqRef><Comment>Go to S120, the report is handled by a Position Report in the EURORADIO namespace.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="A115"
 Guid="f1b0d52e-6aac-495e-a7d3-6d3966c6f837"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f202d942-7efc-43cf-a472-ad9b2082cb88"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S120</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="30"
 Y="160"
 Width="380"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ShuntingInitiatedByDriver"
 Guid="5a7fa963-96b2-42be-8184-2cc360b711bb"
>
<ReqRef
 Id="20733b5e-b944-4ff3-ba02-861e2acb6911"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5e58675-2c5a-47dd-91a0-1fca9806011a"
>
</ReqRef><Comment>Procedure of selection of shunting by the driver.</Comment>
<StateMachine
 Default="Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.S0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e875fa5e-54c6-4251-8d93-3e40fcb5c46d"
>
<ReqRef
 Id="20733b5e-b944-4ff3-ba02-861e2acb6911"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="09ad0b8e-01db-4dc1-8faa-ec1d9c0e387e"
>
</ReqRef><States>
<State
 X="340"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
 Guid="95067465-49bd-46e9-8e88-0b8fec0a7f75"
>
<ReqRef
 Id="b80cbe68-fa35-407f-a0e0-6bd2ec431021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b34cc7f-1db2-45fc-a84d-77bac343342d"
>
</ReqRef><Comment>Selection of the next state according to the value of the level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="f63db1a7-09b2-4831-9583-77da926b2b68"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
 Guid="9ce0a9a4-dded-4f14-8563-4c0f0a3d6eb5"
>
<Comment>Selection of the next state according to the value of the level.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 0 or 1"
 Guid="73ff1112-04bf-4da6-8612-8bf58bab3de4"
>
<ReqRef
 Id="e890e98d-15ce-46e7-ba5f-e5a0c704d832"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1b3d8825-4b55-4e07-9cef-8d1bbc01d72c"
>
</ReqRef><Comment>The level is 0 or 1 =&gt; go to state A050.</Comment>
<PreConditions>
<PreCondition
 Guid="ffa853eb-8045-483c-9238-3d411219528f"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bef78fa3-f5bd-4faa-862c-979a5667c472"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A050</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 2 or 3"
 Guid="0b58fd82-dcce-4ba2-bdf6-b7b8278f46e5"
>
<ReqRef
 Id="42a7e2ab-4f12-4436-8a10-d922ea35b779"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23c988ca-f536-48a5-b144-eda66ccc3b8a"
>
</ReqRef><Comment>The level is 2 or 3 =&gt; go to state A045.</Comment>
<PreConditions>
<PreCondition
 Guid="b2001e67-4fe2-4c52-881b-dea065f7d31c"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="952278d9-3147-4c88-843a-dc3b5e96cb2e"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A045</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level NTC"
 Guid="f4c01e34-9b9b-48d6-b3c4-8ee0ac05180a"
>
<ReqRef
 Id="19dd42a7-eddc-4da0-bfdf-815a2abb1795"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="576e987e-7f3a-4f62-9cb7-a25cc3b5f7d7"
>
</ReqRef><Comment>The level is NTC =&gt; go to state D030.</Comment>
<PreConditions>
<PreCondition
 Guid="bf16d39f-ea6c-48cc-a0c0-d6cf34945793"
>Kernel.Level.Value.Value == LevelEnum.LNTC</PreCondition></PreConditions>
<Actions>
<Action
 Guid="393eaa91-d1d2-4d4c-ab2b-351100032613"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.D030</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="340"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A050"
 Guid="4d3f54ce-97e1-4c39-bb54-788848ecf02f"
>
<ReqRef
 Id="21984b69-0068-4a67-b99c-ffceb9070f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="daccf528-ff16-41d4-a991-3ff842bcf6b9"
>
</ReqRef><ReqRef
 Id="d6556c98-2b83-492e-a9a5-a2d4b3a86251"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="70d15a38-a877-4f61-9700-4414c9e309e6"
>
</ReqRef><Comment>Handling the change of the mode.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="99a0aaae-7b53-42f8-b325-c8b8800f4a38"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A050"
 Guid="4a25e5f8-1c63-4375-af5a-d7511fb1619c"
>
<ReqRef
 Id="122422ab-96f8-41c0-9965-09ccffc8b79f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6c6c351-fa5c-49ed-bf64-837f6cbe1510"
>
</ReqRef><ReqRef
 Id="0df24273-c216-4ef5-8d1d-23e83f6d6c2d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18cbf140-868e-4319-a206-439cd4d83f27"
>
</ReqRef><Comment>Handling the change of the mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transition to SH mode"
 Guid="442fb1aa-3f8c-4735-b124-0c53b99b8495"
>
<Comment>The mode of the kernel changes to SH.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="20cf75ea-cb45-43e5-9b57-5c1bab08ec32"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.D040</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle new balises"
 Guid="115a1504-77e3-4e4a-867c-cab90f66b7f4"
>
<ReqRef
 Id="21984b69-0068-4a67-b99c-ffceb9070f60"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b928e03-d1ca-48db-973a-0fd16d69383a"
>
</ReqRef><Comment>Handling the list of balises for SH mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="New list of balises received"
 Guid="4859e26e-bf53-4345-b287-d6c51a216c2a"
>
<Comment>If a new list of balises for SH area is received =&gt; replace the previous one by that list.</Comment>
<PreConditions>
<PreCondition
 Guid="fc2d9fa3-d834-42a2-8978-11653b10d672"
>Available ( FIRST X IN EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).SH_AUTHORISED.Sequence1 | Available ( X.LIST_OF_BALISES_FOR_SH_AREA ) )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9284dece-9f13-46bf-bcd9-3348e25bdd07"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( ( FIRST X IN EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).SH_AUTHORISED.Sequence1 | Available ( X.LIST_OF_BALISES_FOR_SH_AREA ) ).LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Balises not received"
 Guid="e656f476-87d2-4729-b734-be752aab5619"
>
<Comment>If the list of balises for SH area has not been received =&gt; clear the previously stored list.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="078393ba-187b-4992-a8ac-d44fad419046"
>Kernel.Modes.Shunting.BaliseGroupsForShArea &lt;- Kernel.Modes.Shunting.ExpectedBGstruct{
    ListReceived =&gt; False,
    BGs =&gt; []
}</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="590"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A045"
 Guid="d646baa7-d11a-4ab2-aae8-79c0f120c35c"
>
<ReqRef
 Id="457bd04c-8b77-4ecc-b5ec-c4dbce5c1e53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f87655d-ba74-4c04-b5c7-13609c070a27"
>
</ReqRef><ReqRef
 Id="0b3b6512-c647-49ba-b468-91ed102a5a94"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c2b8e1e-20d9-4659-892f-32ce36ee6a20"
>
</ReqRef><Comment>Sending of Request for Shunting message to the RBC.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="71be846f-e395-499c-9507-2971dcea0dca"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A045"
 Guid="50403ed7-5931-471c-ab22-7bcc00b6cf87"
>
<ReqRef
 Id="457bd04c-8b77-4ecc-b5ec-c4dbce5c1e53"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="347d3075-93c7-4953-ba74-f4f26271a84a"
>
</ReqRef><ReqRef
 Id="3e2e1297-75d8-4cb1-86a6-44e815a1d9cf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d0d9416c-8afb-4421-b7ec-5d187472f41d"
>
</ReqRef><ReqRef
 Id="58b99381-a184-4b10-8c25-d125705b5194"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8543b309-6c33-4c94-a84c-df68e5c82540"
>
</ReqRef><ReqRef
 Id="1b8d900f-c280-48ab-867c-7a40ffdaaea3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d1860a2-7233-48d5-98d3-8a8abf91b3d6"
>
</ReqRef><Comment>Sending of Request for Shunting message to the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send Request for Shunting"
 Guid="31811475-a2f5-4f6a-8241-c5f00bcfe9c0"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="63d11d3e-e82f-4a5d-b7a1-6e47f1c88410"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.S050</Action><Action
 Guid="ad9ddcbb-6f74-4882-b01f-462593af8352"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendRequestForShunting()</Action><Action
 Guid="06d67b36-615b-4772-896c-f9e2d15610e5"
>Kernel.Modes.Shunting.NumberOfSentRequestRepetitions &lt;- 0</Action><Action
 Guid="cb5c1d6c-3df7-4123-895e-6edc8dd00866"
>Kernel.Modes.Shunting.TimeOfTheLastSentRequest &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="590"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="S050"
 Guid="9816d557-7acf-449a-b5c5-a380af50a403"
>
<ReqRef
 Id="431525e9-6114-43ef-a6c4-f75462a54f16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3fb5be99-7354-40a5-ad11-dbabc46d8082"
>
</ReqRef><Comment>Handling of RBC reply to Shunting request.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="fc4bab8b-d4c9-43dc-b852-f72a29c05c85"
>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="S050"
 Guid="4accde7a-f1cb-49a7-98c7-f0ee7f7dc318"
>
<ReqRef
 Id="431525e9-6114-43ef-a6c4-f75462a54f16"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="69f582ba-0c1a-4628-bf27-ccf068c06313"
>
</ReqRef><Comment>Handling of RBC reply to Shunting request.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E090: SH authorised"
 Guid="b0c6177b-6979-465b-a979-3987da49f521"
>
<ReqRef
 Id="61faae76-f226-4744-a4a6-06512a75b891"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a5be16d0-80af-48b6-92e8-583bd9c2364f"
>
</ReqRef><ReqRef
 Id="38d45e49-f55c-4765-9dfc-1faf09f9a446"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c022dec7-6281-46fe-b7c6-e94fed1f0eef"
>
</ReqRef><Comment>If shunting is authorised =&gt; go to state A050.</Comment>
<PreConditions>
<PreCondition
 Guid="d075df1e-8e73-44f1-a0a9-974b22889c71"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).SH_AUTHORISED )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="856800ed-d6ae-4e2c-8be9-f0cd6886fe2e"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A050</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E215: SH refused"
 Guid="2be2d600-78ef-4846-9599-889e6b0c6e3b"
>
<ReqRef
 Id="f966dba5-db59-4c31-b423-6ec37205dcf2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="148ce468-0b87-4a22-8f5b-f6637d01709a"
>
</ReqRef><ReqRef
 Id="a2ff07ed-af73-4d18-8233-2001d2d071a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cddf942c-1884-42a3-9d62-3c8169bfb824"
>
</ReqRef><Comment>If shunting is refused =&gt; go to state A220.</Comment>
<PreConditions>
<PreCondition
 Guid="93d54865-8d2f-441e-a570-f13e9e6ca697"
>Available ( EURORADIO.Messages.UpdatedReceivedMessage( EURORADIO.RBCConnection.CurrentRBCConnection()).SH_REFUSED )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d7ff52cc-1ac0-478f-8ca6-569249a73c39"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A220</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No answer, maximum number of requests reached"
 Guid="32802579-16d8-4462-99b6-e6938eba2739"
>
<ReqRef
 Id="1b8d900f-c280-48ab-867c-7a40ffdaaea3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a7102418-c7c7-4637-80bd-32196b172196"
>
</ReqRef><Comment>If no answer received and maximum number of requests sent =&gt; close the RBC session and inform the driver.</Comment>
<PreConditions>
<PreCondition
 Guid="a4e05313-ab68-48d5-baf5-b37b99f603b5"
>Kernel.Modes.Shunting.RequestNotAnsweredByRBC()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0ad25f45-c491-44cc-b897-bb52084011af"
>EURORADIO.RBCConnection.TerminateOpenSessions( contactInformationIsKept =&gt; False )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No answer, a new request can be sent"
 Guid="c068c307-599c-41ba-94b8-2693d2dcdb48"
>
<ReqRef
 Id="58b99381-a184-4b10-8c25-d125705b5194"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8c98e75-06a3-4047-8d98-b9d6c2bbf0f8"
>
</ReqRef><Comment>If no answer is received and a new request can be sent =&gt; send it.</Comment>
<PreConditions>
<PreCondition
 Guid="703f0fc4-324a-46be-893f-ec651b9a63f0"
>Kernel.Modes.Shunting.TimeOfTheLastSentRequest + EURORADIO.RBCConnection.TimeBeforeMessageRepetition &lt;= Kernel.DateAndTime.CurrentTime</PreCondition><PreCondition
 Guid="2b7d05e7-a40d-49f4-b17a-d9102490ff91"
>EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8808d797-c2cd-444b-8c2e-1e2ff3620a82"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendRequestForShunting()</Action><Action
 Guid="b2283ec0-3f07-401a-85ff-311a71079033"
>Kernel.Modes.Shunting.NumberOfSentRequestRepetitions &lt;- Kernel.Modes.Shunting.NumberOfSentRequestRepetitions + 1</Action><Action
 Guid="250d0e5c-57fe-4f75-acc6-00eaecafbd84"
>Kernel.Modes.Shunting.TimeOfTheLastSentRequest &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No answer, no communication session"
 Guid="52278ba7-d9b9-4707-8561-be75181091cf"
>
<ReqRef
 Id="24ae765e-d289-46fa-a044-79cf087add58"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9db70fb3-9039-48eb-ae66-90e0d9b45609"
>
</ReqRef><Comment>If no answer can be received since there is no active RBC session =&gt; go to procedure Override.</Comment>
<PreConditions>
<PreCondition
 Guid="d6202868-bcf4-4f46-923c-0e55b57d2935"
>NOT EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3487c294-9c15-41e3-9c7a-37a4c2d1b167"
>THIS &lt;- Kernel.HandleModeChangeSM.Override</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="840"
 Y="130"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A220"
 Guid="f4e95f46-a1fa-4e22-b04a-ac54e47ea958"
>
<ReqRef
 Id="ff9286d9-70ab-48f9-8f38-21024af06e76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="274e99ee-bf8c-466f-8e3b-35c34be28b3b"
>
</ReqRef><Comment>Handling the indication of SH refused by RBC to the driver.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="1ee9562c-cef1-4b8e-956e-0fb384bc9728"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A220"
 Guid="74434730-746c-422f-a248-5f3cdd676c77"
>
<ReqRef
 Id="ff9286d9-70ab-48f9-8f38-21024af06e76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="904dc73c-a5a6-4cb8-8318-0dd58e9647e8"
>
</ReqRef><Comment>Handling the indication of SH refused by RBC to the driver.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E13: Inform driver SH refused"
 Guid="e41d9e94-4134-423d-ae59-4c1789207d17"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Post action"
 Guid="62d75bd9-9e9b-46fd-8ced-170f9fafb470"
>
<Comment>Handling the rejection of SH or ending the procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E13: Shunting refused"
 Guid="f5f83160-9716-4c6e-9166-54c652b62e25"
>
<ReqRef
 Id="2e9f9917-e8f9-49b1-89ca-a25dc8ef2e05"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="670f0dc7-b475-4a3d-808f-588cf3155dae"
>
</ReqRef><ReqRef
 Id="d973b79d-a502-4a1d-bb38-c759e6101d62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="afa8da70-ce56-43c2-9416-8a7392a3fc1a"
>
</ReqRef><Comment>If shunting was rejected by the RBC and the process was initiated by StartOfMission procedure =&gt; go back to the procedure StartOfMission.</Comment>
<PreConditions>
<PreCondition
 Guid="5d6491bd-29e9-4cf4-aef7-2175d77a52df"
>Kernel.Mode == ModeEnum.SB</PreCondition></PreConditions>
<Actions>
<Action
 Guid="14b7b6e2-6b37-408e-a7bd-79ea0da6f567"
>THIS &lt;- Kernel.HandleModeChangeSM.StartOfMission.S10</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E165: Shunting refused"
 Guid="e66e57a0-40d3-4a7c-8fec-8a23ea45a86a"
>
<ReqRef
 Id="e4f509dd-fcb0-4205-8e6b-921aae447bca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b55c00c2-c9a6-4d13-afcd-b22de9ae6a58"
>
</ReqRef><Comment>If shunting was rejected by the RBC and the process was initiated by TrainTrip procedure =&gt; go back to the procedure TrainTrip.</Comment>
<PreConditions>
<PreCondition
 Guid="afd3f1fb-97b7-4c7f-8e71-de40a522db68"
>Kernel.Mode == ModeEnum.PT</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8f7f6e5d-cf08-429f-ad6b-6af0bd5b266d"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip.S140</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="End procedure"
 Guid="03fd9136-d475-4c95-a89a-6e6daff339ce"
>
<ReqRef
 Id="209690fa-85f2-4338-98b6-c636b00a1007"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4cf9c00-758a-45b9-9e8b-c9cdba972035"
>
</ReqRef><Comment>Otherwise, the procedure ends.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6005019a-9cf3-416e-8e81-a3bb443308da"
>THIS &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="340"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D040"
 Guid="32690c60-78f6-4253-abc0-14d33296596c"
>
<ReqRef
 Id="ed6d59e3-036c-4918-9170-c57f75205be5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="998b2eb9-718b-4ab1-bb10-66ad6c41ab88"
>
</ReqRef><Comment>Selection of the next state according to the fact that a mission is on-going or not.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="140b0502-43f6-4d88-87ac-13fa6d0aac68"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D040"
 Guid="e229136f-c6df-42ed-a357-5d03c9e03016"
>
<ReqRef
 Id="3df563f2-b5be-4707-9c14-fed9bce37577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f990c15d-df6e-492f-8011-a742acb26b5b"
>
</ReqRef><ReqRef
 Id="ed6d59e3-036c-4918-9170-c57f75205be5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98bc02e7-7cd6-4076-9da9-147d44977a67"
>
</ReqRef><Comment>Selection of the next state according to the fact that a mission is on-going or not.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mission is on-going"
 Guid="bd1a03c2-f1a9-451e-9ef2-eebea4280483"
>
<ReqRef
 Id="5aeb9959-1698-4ea4-a60e-da2bb3797ccf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="38624254-624b-4f64-a8b7-c96d12a15148"
>
</ReqRef><Comment>If there is an on-going mission =&gt; go to state A100.</Comment>
<PreConditions>
<PreCondition
 Guid="4edd262e-d96e-4f4d-b90b-ce3f18efbc27"
>Kernel.MissionIsOnGoing</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d00ce813-1d42-419d-a816-c2877889f0b2"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A100</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No on-going mission"
 Guid="02943c9b-e873-4b1c-9b97-79a78343ecfd"
>
<ReqRef
 Id="68435f48-b3c4-4b8d-ae9d-1d5a4a33dd0b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05c48ee3-48d3-4a13-85ca-6120a19aa371"
>
</ReqRef><Comment>If there is no on-going mission =&gt; go to state D080.</Comment>
<PreConditions>
<PreCondition
 Guid="de45559b-a7c3-469b-a3db-04d9651f32a6"
>NOT Kernel.MissionIsOnGoing</PreCondition></PreConditions>
<Actions>
<Action
 Guid="20b5e5ce-842f-4bb5-a58b-aa445d80b52e"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.D080</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="850"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="S100"
 Guid="481e74a4-de21-40b6-bd0b-2ee222b468c3"
>
<ReqRef
 Id="8a2197b0-8bfc-49a1-a13f-20909b2be98c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d8a829d-f6fc-4a2f-8414-f4ba07d66149"
>
</ReqRef><Comment>Waiting for the RBC order to terminate the communication session.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="8f80bf98-e947-4044-ad42-a03f5d6ba013"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="S100"
 Guid="fad791bd-1c40-4b6e-b863-cd05b3fbc65d"
>
<ReqRef
 Id="8a2197b0-8bfc-49a1-a13f-20909b2be98c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dcc7e346-9473-4058-a760-f84593b0b0b6"
>
</ReqRef><ReqRef
 Id="dd7c262e-fb20-4039-bbc5-e87aeac2d131"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="df7cf555-db4c-4d70-bf62-1b18c82c5f04"
>
</ReqRef><Comment>Waiting for the RBC order to terminate the communication session.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E055: RBC order to terminate session"
 Guid="0c52b9e6-ecd6-48f2-94e1-19fb5aeeba69"
>
<Comment>If an order to terminate the communication session is received =&gt; go to state A115.</Comment>
<PreConditions>
<PreCondition
 Guid="9b1484ba-cf02-47ee-a173-44c34c92194f"
>EURORADIO.Messages.DeconnectionOrderIsReceivedFromRBC(EURORADIO.RBCConnection.CurrentRBCConnection())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a9bd1583-0026-4a84-8cb8-5c279f955c1c"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A115</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, maximum number of requests reached"
 Guid="70d4035a-32c4-41a6-9cf5-9535ee8e8a42"
>
<ReqRef
 Id="0df24273-c216-4ef5-8d1d-23e83f6d6c2d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec7fbaac-2f1e-4ba4-ad11-3410096c8512"
>
</ReqRef><ReqRef
 Id="c4552b18-7c1b-4778-a53c-1272271bb392"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="959b34e2-b05b-4e1a-9342-2a2454491f3f"
>
</ReqRef><Comment>If no order is received and maximum number of sent request has been reached =&gt; close the session and end the process.</Comment>
<PreConditions>
<PreCondition
 Guid="f83d0a79-efb0-4b17-a420-f110e0ec8e98"
>EURORADIO.Messages.PositionReport.LastPositionReport.Time + EURORADIO.RBCConnection.TimeBeforeMessageRepetition &gt;= Kernel.DateAndTime.CurrentTime</PreCondition><PreCondition
 Guid="440078ee-4366-430c-9ced-803149576982"
>EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions == 3</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7ce91876-e8e5-4dc1-bdf6-8fa6c164eb84"
>EURORADIO.RBCConnection.TerminateOpenSessions( contactInformationIsKept =&gt; False )</Action><Action
 Guid="1f653799-324f-4a16-acf5-5ba2b328f744"
>THIS &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action><Action
 Guid="6e69e0fa-8f9c-4da6-a338-cbf2bb896b42"
>EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions &lt;- 0</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, a new request can be sent"
 Guid="58dc4d4f-2781-4e55-92f4-8379fd8295b3"
>
<ReqRef
 Id="60acc0ca-e056-4297-ae12-7f37389323d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2fb3477-d7f0-4e19-8238-80f0cc6111f7"
>
</ReqRef><Comment>If no order is received and maximum number of sent request not yet been reached =&gt; send a new position report.</Comment>
<PreConditions>
<PreCondition
 Guid="025ce385-7c44-4331-a241-95eda2d2b47f"
>EURORADIO.Messages.PositionReport.LastPositionReport.Time + EURORADIO.RBCConnection.TimeBeforeMessageRepetition &gt;= Kernel.DateAndTime.CurrentTime</PreCondition><PreCondition
 Guid="d0ba0ed8-5ced-42b5-bf0a-648e0110781e"
>EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="623383f3-1e5b-476c-9457-04a51f86efa6"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendPositionReport()</Action><Action
 Guid="e61938d4-b14d-4900-b4ad-496b5688eb58"
>EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions &lt;- EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions + 1</Action><Action
 Guid="04d05666-6dc8-4d65-b724-1615f7466804"
>EURORADIO.Messages.PositionReport.LastPositionReport.Time &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="600"
 Y="590"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A115"
 Guid="9e729289-5572-484a-b5f9-f25ed3bc97e5"
>
<ReqRef
 Id="27f88b30-f620-4d1c-aae4-860de3b3a7df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6605446-f406-4ac7-b038-e2c5e750b5f1"
>
</ReqRef><Comment>Handling the termination of communication session.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e354ba8a-60cc-4bd2-a3aa-01fb910c0531"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="A115"
 Guid="d4fa6464-3810-445b-bfc3-28440cc0c428"
>
<ReqRef
 Id="27f88b30-f620-4d1c-aae4-860de3b3a7df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98907f2d-9367-4d00-b8ad-e476f964c13a"
>
</ReqRef><ReqRef
 Id="29c239c8-dea5-47f0-9916-581993980f9f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9a771f5-dbc5-412c-9c84-d60f7193a3ac"
>
</ReqRef><Comment>Handling the termination of communication session.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminate session"
 Guid="1d8a7b4c-3b30-4b66-8dfa-d3a2a9fc9fa2"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b4be4b71-5c71-4a8b-a8f8-661d2cb532df"
><Comment>Having received the terminating order from the RBC (Sate 100), the RBCConnection state machine takes responsability to terminate the session.</Comment>
THIS &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="340"
 Y="490"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A100"
 Guid="878a9c49-5175-4421-afce-eb0092cd4452"
>
<ReqRef
 Id="7ca0878c-f3b5-45ba-ad1f-001f5cf3180d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8514be0a-31af-42b1-97ad-8ec7fa0d1ea0"
>
</ReqRef><Comment>The process goes to EndOfMission procedure.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="6ab22cb8-a055-4a4f-adc1-0ccc6387c9ad"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A100"
 Guid="24b20c75-6243-49ee-a274-59228a225195"
>
<ReqRef
 Id="7ca0878c-f3b5-45ba-ad1f-001f5cf3180d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b3f55248-c77f-4a13-8730-3b28b95c1b3a"
>
</ReqRef><ReqRef
 Id="39941df7-787e-4ef3-839d-a438e01d3964"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a95ae20d-f4bd-4df0-964b-bb86a3fd8f52"
>
</ReqRef><ReqRef
 Id="3df563f2-b5be-4707-9c14-fed9bce37577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34e9dea2-c9f9-4014-b52c-55b18eb2a3fa"
>
</ReqRef><Comment>The process goes to EndOfMission procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="End the mission"
 Guid="6b610f7b-55ad-4218-bcab-f6a97fe2f331"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2bd48cec-82e1-48cc-b424-d147cceadeb5"
>THIS &lt;- EndOfMission</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="590"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
 Guid="aa44865b-d148-4421-8e75-9534d4acc95d"
>
<Comment>Selection of the next state according to the value of the level.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="4fe3fd3b-c6b0-4be0-8c64-9e24d71b1172"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
 Guid="b53b19a7-5eb2-46a7-b984-3790293d8701"
>
<Comment>Selection of the next state according to the value of the level.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 2 or 3"
 Guid="756423ae-05fb-4221-996d-59917d2ef78a"
>
<ReqRef
 Id="0cd426d1-35bd-4be9-be23-a5f473998d40"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2ba57cb6-89a0-4efe-861f-93dece9abe68"
>
</ReqRef><Comment>If the level is 2 or 3 =&gt; go to A095.</Comment>
<PreConditions>
<PreCondition
 Guid="772df137-5869-413e-a9ca-58bca24c175a"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3d435f88-5421-4d23-8d6f-5570b672d01f"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A095</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 0, 1 or NTC"
 Guid="6e224209-8b88-4431-8fd9-2f31d38f7f39"
>
<ReqRef
 Id="465fdc06-3913-4ca5-89e8-36b2eec18509"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1718c037-ab70-4bd7-b92a-f19c8266af84"
>
</ReqRef><Comment>If the level is 0, 1 or NTC =&gt; end the process.</Comment>
<PreConditions>
<PreCondition
 Guid="bd217358-4b3b-44c5-a07e-ff50d034ca15"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.LNTC]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a389ba71-4c64-4e42-9753-52ab865d444d"
>Kernel.HandleModeChange &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="840"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A095"
 Guid="eac9e346-66a1-43ff-8094-65333082eedb"
>
<ReqRef
 Id="6f5b08a4-6fc6-431d-926a-e1b6bfaa34e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="194165da-42ba-4403-a0c0-71a5c1283974"
>
</ReqRef><Comment>Reporting of the mode change to the RBC.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="41a8e49a-0abe-4b7c-965a-4c8af46ab74f"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A095"
 Guid="3fff059f-7f5a-4003-b93d-da62a34ee6de"
>
<ReqRef
 Id="6f5b08a4-6fc6-431d-926a-e1b6bfaa34e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dea28a27-2eef-4593-81e5-d70a73427c19"
>
</ReqRef><Comment>Reporting of the mode change to the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Report mode change to RBC"
 Guid="30a4aeba-8273-4664-8b52-a82ad0aa68dc"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="610d354f-85f3-456f-9f49-98782e0cdf4c"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.S100</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="340"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S0"
 Guid="f71656f0-0cae-4203-ba1c-ef505c76bd79"
>
<Comment>Initial state, no action.</Comment>
<StateMachine
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Guid="e930d635-b8ce-4927-b529-896024d7f8fd"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E015"
 Guid="1ffa5580-19c4-4ff4-9f67-9cf7903b30ce"
>
<ReqRef
 Id="3d01d017-72ad-4ae6-888e-a4e7f0241a33"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cbef2946-b563-4711-9197-da01e44540ab"
>
</ReqRef><ReqRef
 Id="a7dfd21b-40f7-4ea2-8604-1cb1cf5a2a65"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9a71f02-3c04-4b75-97bd-f245a19f4eee"
>
</ReqRef><Comment>Initial state, no action.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E015"
 Guid="a9333f8b-ce21-4ce5-8e80-1857a924aa0f"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2aeaa58b-0780-494f-b6a2-81fc67112263"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.D020</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="30"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D030"
 Guid="f0ae028f-dd4b-41c6-9922-ad36cc7ef4d9"
>
<ReqRef
 Id="5c8448a3-da14-4f33-8469-90326aacfdaa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bdaf71db-e27c-43ae-8d1d-5965e7d60b1c"
>
</ReqRef><Comment>Selection of the next state according to the status of National Trip procedure.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="36621e76-b388-4fe6-8c71-f80fb77f1282"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D030"
 Guid="3e6ee612-39fe-4bd7-a7ff-c9d2255020a0"
>
<ReqRef
 Id="5c8448a3-da14-4f33-8469-90326aacfdaa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="df079051-87e2-45ba-bca9-bfca208a7c55"
>
</ReqRef><Comment>Selection of the next state according to the status of National Trip procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="A National Trip procedure is on-going"
 Guid="1ee371ff-61f7-454d-8ed0-ed3b99390e70"
>
<ReqRef
 Id="7df12dee-2836-487c-b425-429f870ed1a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ae9c25b9-fc4c-4c70-8275-9ef046102434"
>
</ReqRef><Comment>If there is an on-going National Trip procedure =&gt; go to state A030.</Comment>
<PreConditions>
<PreCondition
 Guid="e32b210c-5d4e-46b7-a6c2-5701542c4676"
>STM.NationalTripProcedureIsOnGoing</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3ef9358a-a7be-4dfa-bb4d-516474d07fcb"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A030</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No National Trip procedure is on-going"
 Guid="513d43c3-e87a-4edb-ba5a-eb7a04abce8c"
>
<ReqRef
 Id="2b84288f-8f44-4b3d-bc37-e1534d27fc7a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e195697-5e81-497c-8739-5292a56f8064"
>
</ReqRef><Comment>Otherwise =&gt; go to state A050.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e9e0c8ec-265d-4b83-b310-04864ead6e1e"
>THIS &lt;- Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.A050</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="30"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A030"
 Guid="7467068e-dbd4-4a09-9145-cc63df1de33f"
>
<ReqRef
 Id="1e58eff1-39ce-4df0-89c9-6052cd28d07e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90ce3c01-8c4f-4924-b2e6-caa6fc97a810"
>
</ReqRef><Comment>The process goes to TrainTrip procedure.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="07848af9-ef86-44b4-9e7c-581619a57846"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A030"
 Guid="285161fa-480d-4d01-96c1-ba6b6a558e43"
>
<ReqRef
 Id="1e58eff1-39ce-4df0-89c9-6052cd28d07e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c695118a-cf4d-4343-81f1-cfbf29c75e37"
>
</ReqRef><Comment>The process goes to TrainTrip procedure.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="A030"
 Guid="5d4c726b-e6c7-487e-af1b-230a7a1fd06b"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="6b2d7720-aa46-4b65-8e47-5706510f74c8"
>THIS &lt;- Kernel.HandleModeChangeSM.TrainTrip</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="730"
 Y="60"
 Width="310"
 Height="50"
 NeedsRequirement="FALSE"
 Name="Override"
 Guid="85baaaf6-957a-4dbd-b879-e392695e64be"
>
<Comment>This state corresponds to the Override function being active.</Comment>
<StateMachine
 NeedsRequirement="FALSE"
 Guid="2d3bf862-d58c-4ba2-ac26-696afa231341"
>
<ReqRef
 Id="4327460f-edc2-4267-8dc2-70ca734e4df9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="98268028-aac4-4c46-b113-a5e640ca5c8d"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="End override"
 Guid="459b6728-145f-4a43-b3a5-6e9e62fec8b6"
>
<ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="576b0867-46ab-4c9e-b254-470759ee37c9"
>
</ReqRef><ReqRef
 Id="c9c7c7f3-3d1c-42b1-b80c-061de2d83f8e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="75fdbfc1-7e12-46cb-80a4-be1ddcafd81f"
>
</ReqRef><Comment>When any of the following occur, the override function is ended:
the time/distance to run with override active is exceeded
the former EOA is passed with the active BTM antenna
the train overpasses the maximum allowed distance to run in SR</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Max time/dist exceeded"
 Guid="01c24176-1799-4de1-a467-a404cc9cb2e6"
>
<ReqRef
 Id="8cf2cb63-f4b5-47e6-8f30-09f773417468"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cbb11da2-aab1-47fb-ab9c-cae91a5d0771"
>
</ReqRef><ReqRef
 Id="53125a9b-26fb-4d1d-bc8f-0e7ab8e929ee"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcaa66f8-b2f2-4125-9f5f-9a2f68855fe1"
>
</ReqRef><Comment>If the maximum time/distance to run with override active are exceeded, the override will end.</Comment>
<PreConditions>
<PreCondition
 Guid="6eb0fb0e-c294-4570-b6fd-d5eaaeb351e6"
>Kernel.DateAndTime.CurrentTime &gt; Override.OverrideSupervision.StartTime + NationalValues.CurrentNV().MaxTimeForTrainTripSuppressionWhenOverrideIsTriggered
  OR  
Odometry.NominalDistance &gt; Override.OverrideSupervision.StartLocation + NationalValues.CurrentNV().DistForTrainTripSuppressionWhenOverrideIsTriggered</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5c90190f-97b9-4212-afbe-5e0fc175eadc"
>Override.EndOverride()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Former EOA passed"
 Guid="dd1e6919-605f-4646-9ea0-8210dc08a70f"
>
<ReqRef
 Id="89900100-9bcf-431a-af98-adc2b2350eea"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="504eab9a-ccb5-48e0-a328-c6fa5fe0ec51"
>
</ReqRef><Comment>If the former EOA is overpassed, the override will end.</Comment>
<PreConditions>
<PreCondition
 Guid="eead167b-1d92-4209-89a8-4d46d6a60d05"
>Kernel.Mode not in [ModeEnum.UN, ModeEnum.SN]</PreCondition><PreCondition
 Guid="d2b29f74-eeb5-4770-b6e5-6b9a160df02c"
>Override.OverrideSupervision.FormerEOA &lt; BTM.AntennaDistance(DistanceIntervalEnum.Min)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="67ae36be-5bd9-4e9b-8d8a-2842068e454c"
>Override.EndOverride()</Action><Action
 Guid="7af318c3-302f-4bc3-9219-1a508e47bc8f"
>Override.OverrideSupervision.FormerEOAPassed &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Train overpasses former max dist to run in SR"
 Guid="65af4354-9251-44a0-8a10-0d7e13665781"
>
<ReqRef
 Id="2ef118e4-847b-423d-9ca2-dbddfc439fbb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="30f24403-2312-4a3c-820f-74b27772276d"
>
</ReqRef><Comment>If the maximum distance to run in SR mode is exceeded, the override will end.</Comment>
<PreConditions>
<PreCondition
 Guid="7e7add7b-abc7-4cfc-af16-a6fbb11b1e39"
>Kernel.Mode not in [ModeEnum.UN, ModeEnum.SN]</PreCondition><PreCondition
 Guid="9ace0955-51b7-461a-99b1-6011f28e2fc9"
>Override.OverrideSupervision.FormerSRDistance &lt; Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="192f8825-d3ec-42a6-80c0-9875a6d04ff0"
>Override.EndOverride()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="30"
 Y="60"
 Width="380"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EndOfMission"
 Guid="6a970aaa-82be-4fb2-a2a2-148493c8799c"
>
<ReqRef
 Id="5f9152b9-260e-437e-a7d1-b6acb37d9dba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="506d51aa-ffb9-4859-8c5f-e8230a898149"
>
</ReqRef><StateMachine
 Default="EndOfMission.HandleStoredData"
 NeedsRequirement="FALSE"
 Guid="4ccf6d96-0cea-4fdf-a8d9-beb8ff7b27b9"
>
<ReqRef
 Id="5f9152b9-260e-437e-a7d1-b6acb37d9dba"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="08a8e3b2-1042-47a9-8e2c-3b08c83e5c51"
>
</ReqRef><States>
<State
 X="60"
 Y="50"
 Width="100"
 Height="50"
 Name="HandleStoredData"
 Guid="1567d30f-5183-48ce-b1a7-cade4622fd71"
>
<ReqRef
 Id="9a9d1994-65cc-4ce3-8805-06dbf30f991b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e196481-77ec-4890-becd-caca5b8c8ada"
>
</ReqRef><Comment>Delete MA, Track Description Data and Train Data</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="719c5fb9-732b-4373-9bd1-64a299d6348f"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Check communcation sessions"
 Guid="9f6c5d1a-2206-45cf-ab5a-4e89313e28e1"
>
<Comment>Select next step according to status of communication sessions</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="RIU session exists"
 Guid="8c9dc923-af23-40ae-a830-b6666eeeb010"
>
<ReqRef
 Id="76ba8efa-4749-4010-974a-06666af596e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c349d0dd-d541-4667-814a-3eb174f3a499"
>
</ReqRef><Comment>If there is an RIU session =&gt; terminate it.</Comment>
<PreConditions>
<PreCondition
 Guid="d81d9ff0-6e30-4c4a-9960-b2307cb95a39"
>False</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3633e19b-b668-45b2-bdab-c8a2960c36e1"
>THIS &lt;- HandleRIUConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Euroradio session exists"
 Guid="b001db91-6e78-44d1-8f9c-503bf43f7e2a"
>
<ReqRef
 Id="0a55611b-2936-44a8-89fb-8b7fa083a761"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="732dfe67-7c31-46c4-bf87-9d265ee2246b"
>
</ReqRef><Comment>If there is one or several RBC communication sessions =&gt; terminate them.</Comment>
<PreConditions>
<PreCondition
 Guid="688ad93f-5342-42f9-b1cf-7adfc4099978"
>EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="749dbeb8-66b4-4e90-8f8b-95621be527ee"
>THIS &lt;- HandleRBCConnections</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No communication sessions"
 Guid="d80efd4c-f7bf-45b6-8f5b-77cb06e5c7a5"
>
<ReqRef
 Id="219ceefb-8943-4c10-a74d-b6ef703ec766"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="800cabfd-fc07-4ad3-a57e-36bd43f87180"
>
</ReqRef><ReqRef
 Id="f31f1b65-224b-4941-9951-eebbd7994a51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7903f8d8-ec93-4864-8bfc-0fe35b988092"
>
</ReqRef><Comment>If no communication session exists =&gt; go to exit state.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b6df0027-6d02-4732-83b7-04cf8a0659f4"
>THIS &lt;- ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="680"
 Y="270"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleRBCConnections"
 Guid="4a4442ff-24e6-4794-b7fd-8019ffe0568a"
>
<ReqRef
 Id="7b63a22c-a47e-4e98-87a7-bb6800dbb38e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f88dd91-b701-4076-89c4-1dbae1faeeb9"
>
</ReqRef><Comment>Handles the temrination of the RBC connection(s).</Comment>
<StateMachine
 Default="EndOfMission.HandleRBCConnections.DisconnectPrimaryConnection"
 Implemented="TRUE"
 Guid="2150b33f-5d47-4d14-9eed-4e50b52b58b8"
>
<States>
<State
 X="40"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisconnectPrimaryConnection"
 Guid="b1f5625e-2a07-4137-8062-491050cf3f50"
>
<ReqRef
 Id="b9145b48-24bf-42d2-a2ad-8283dc888f3b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d502584c-2c43-4516-bd07-8c2c90a87f1e"
>
</ReqRef><Comment>First, disconnect the primary connection.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="ad7b0706-43ae-45cc-bfaf-4ca7cdf894e1"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Disconnect primary connection"
 Guid="b8383795-f3cb-45b2-bd4d-f1592f131b20"
>
<Comment>First, disconnect the primary connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Disconnect primary connection"
 Guid="41205200-c0d4-4b81-b5fe-8e93e6f72265"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="56427b99-34ca-4914-bbb0-ef26e4909131"
>EURORADIO.RBCConnection.CurrentRBCConnection().ExecuteEndOfMission()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Post actions"
 Guid="65d86c80-8e83-4b39-87fc-f4f1ddeef874"
>
<Comment>Handle next state.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Secondary connection exists"
 Guid="ba75f38d-e941-45d0-82f5-c3e5ed006f49"
>
<Comment>If there is a secondary connection =&gt; terminate it.</Comment>
<PreConditions>
<PreCondition
 Guid="2064e3ed-ebd0-4f32-98ac-1f97f15a8088"
>Available ( EURORADIO.RBCConnection.SecondaryRBCConnection() )</PreCondition><PreCondition
 Guid="74beabb9-3bd4-453c-88c9-a53147d14eec"
>EURORADIO.RBCConnection.SecondaryRBCConnection().SafeRadioConnectionStatus != EURORADIO.RBCConnection.SafeRadioConnectionStatusEnum.NoConnection</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f8cdb70f-52fc-4596-8cbd-f9faf1e9fd23"
>THIS &lt;- EndOfMission.HandleRBCConnections.DisconnectSecondaryConnection</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="762656f3-e5ab-4283-893a-b79312c424f0"
>
<Comment>Otherwise, terminate the procedure.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a7d0b427-0ada-4944-b8c3-3e665a1577f8"
>THIS &lt;- EndOfMission.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="350"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisconnectSecondaryConnection"
 Guid="d38adbc8-9351-48c5-95cc-af3bda4a0709"
>
<ReqRef
 Id="b9145b48-24bf-42d2-a2ad-8283dc888f3b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c24527f4-287f-4085-8c79-401cc66bd28f"
>
</ReqRef><Comment>Then disconnect the secondary connection, if any.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="b8bac2c1-6a0a-4457-8d95-314e367d41c3"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Disconnect secondary connection"
 Guid="2739c179-94b8-4598-87d1-198fc4e9f0a3"
>
<ReqRef
 Id="c55df22b-a932-48aa-9c94-b034916ab339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6e55f81-129d-4ef9-915d-a790fe8233e8"
>
</ReqRef><Comment>Disconnects the secondary connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Disconnect secondary connection"
 Guid="956cbcbe-449d-4945-9bc2-2b4f1c6dba78"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ee48e81e-a69f-445f-8080-ba952daa3e4e"
>EURORADIO.RBCConnection.SecondaryRBCConnection().ExecuteEndOfMission()</Action><Action
 Guid="655ec492-bb16-4404-8bf2-5e594a57e5ae"
>THIS &lt;- EndOfMission.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="680"
 Y="50"
 Width="100"
 Height="50"
 Name="HandleRIUConnection"
 Guid="8366468a-03b0-43fc-92d9-fbe146ea45af"
>
<ReqRef
 Id="afd0107b-e36b-4b26-a0f0-1071084bc3e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9ca58586-5432-4186-b211-b3e8721b176c"
>
</ReqRef><Comment>Handles the termination of the RIU connection.</Comment>
<StateMachine
 Guid="46cf0d6d-e5c4-4a0c-bd20-c90efd26f5f7"
>
<Rules>
<Rule
 Priority="Processing"
 Name="Close the session"
 Guid="8098ccb4-7677-4854-af3c-c5bcc5db4f7d"
>
<Comment>Handle the termination of the RIU connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Close the session"
 Guid="7779b4c0-c03c-4dcd-8266-9c49a42de1eb"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check Euroradio session"
 Guid="e77c920c-fabd-473c-8715-89e05546f874"
>
<Comment>Handle the termination of the RIU connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Euroradio session exists"
 Guid="eee13ec9-bc34-4ed6-835a-d39b08509fd9"
>
<ReqRef
 Id="0a55611b-2936-44a8-89fb-8b7fa083a761"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd27af7d-cb84-481c-8908-cddd2c67e3cf"
>
</ReqRef><Comment>If there is one or several active RBC connections =&gt; close them.</Comment>
<PreConditions>
<PreCondition
 Guid="966f5d84-2ebc-4c82-bc45-fb6b079b3ded"
>EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="977f4308-39ae-456c-af15-8f71fee34958"
>THIS &lt;- EndOfMission.HandleRBCConnections</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No Euroradio session"
 Guid="d729b699-df93-47b2-ac6c-5b1125641367"
>
<ReqRef
 Id="6cb672e1-5b1b-46b0-86fb-2ea853009bd5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9ae62e5c-b070-4206-844d-1796d32ed1f9"
>
</ReqRef><ReqRef
 Id="219ceefb-8943-4c10-a74d-b6ef703ec766"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c177068-3166-47c8-aa0d-aeec5b1b1354"
>
</ReqRef><Comment>If no RBC connection is active =&gt; terminate the procedure.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="38fe2543-4bcb-4733-bc17-100daa0af254"
>THIS &lt;- EndOfMission.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="270"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ExitState"
 Guid="7e478844-4ef1-4a43-9f49-dd2a3949152d"
>
<ReqRef
 Id="c55df22b-a932-48aa-9c94-b034916ab339"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="274790c9-ab2a-4959-909c-e81a26bb4ea6"
>
</ReqRef><ReqRef
 Id="6cb672e1-5b1b-46b0-86fb-2ea853009bd5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1cd2418-7d72-44e5-b457-1141a2f7fae8"
>
</ReqRef><ReqRef
 Id="f31f1b65-224b-4941-9951-eebbd7994a51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="539c6468-14c0-40db-90ff-6feb005e617c"
>
</ReqRef><Comment>Terminates the procedure, if all the communication sessions are closed.</Comment>
<StateMachine
 Implemented="TRUE"
 Guid="e636fcf5-25f8-44ee-ba88-9a8fccede424"
>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Terminate the procedure"
 Guid="71267c79-1ea1-478f-b92f-dbb20f2c623d"
>
<Comment>Terminates the procedure, if all the communication sessions are closed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminate the procedure"
 Guid="93baf038-47dc-42db-8f77-3c04f5124d38"
>
<PreConditions>
<PreCondition
 Guid="a02606a4-37e3-46fe-a48a-3ab979fded76"
>NOT EURORADIO.Terminal.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d97b4749-16f5-43b4-bc88-2621ae594f9b"
>THIS &lt;- Kernel.HandleModeChangeSM.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine><EnterAction>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Enter action"
 Guid="e4d30cbf-9cce-42fa-9b1d-f533710c8a0d"
>
<ReqRef
 Id="193d2e18-8bfa-43f0-b84d-6e1b1d45a84d"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="bd6ec7fd-1fe2-448e-907c-bf476a3dfb00"
>
</ReqRef><ReqRef
 Id="39941df7-787e-4ef3-839d-a438e01d3964"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11f954bd-6cd7-4f0d-bd32-45c366663b92"
>
</ReqRef><ReqRef
 Id="57975d77-7335-4135-bac0-954cd1debb67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f988c8f-e103-4531-80b9-ade17b1eda8c"
>
</ReqRef><ReqRef
 Id="d27a51c4-55a3-44c2-a184-442af52831fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a889b368-c407-4b68-a08b-3303b4afed66"
>
</ReqRef><Comment>Mission is no longer ongoing when EndOfMission is initiated.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mission no longer ongoing"
 Guid="8902152f-862c-4af5-818d-6c53c69b8ec4"
>
<ReqRef
 Id="193d2e18-8bfa-43f0-b84d-6e1b1d45a84d"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="3e11ee7b-c878-4e61-a1c9-be3fe022a0ff"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ae2911b5-6229-476b-9e68-04743ddb2712"
>Kernel.MissionIsOnGoing &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></EnterAction>
</State><State
 X="550"
 Y="690"
 Width="100"
 Height="50"
 Name="StandBy"
 Guid="9bd23c26-d905-4f49-b5f4-f76ffd9894db"
>
<StateMachine
 NeedsRequirement="FALSE"
 Guid="c54cff8a-4385-4478-9a68-bc48992a82c4"
>
</StateMachine></State><State
 X="220"
 Y="690"
 Width="100"
 Height="50"
 Name="SystemFailure"
 Guid="14fb6129-8f29-43bf-896b-2c6717cfd414"
>
<StateMachine
 NeedsRequirement="FALSE"
 Guid="24acf372-0964-4ca4-878d-60d89f54135c"
>
</StateMachine></State></States>
</StateMachine></StateMachines>
<Functions>
<Function
 Type="Boolean"
 Default=""
 X="120"
 Y="400"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FaultIsUrgent"
 Guid="5d2e53c6-af56-4f6f-a4e0-b821d87355ee"
>
<ReqRef
 Id="0dbbf234-3119-40cf-839a-64ae2c895770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f390bed-ff6c-4c2a-a68b-1ada29cf439d"
>
</ReqRef><ReqRef
 Id="ecdd4d2a-94b2-405c-bdd5-a4f4050fb58d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c39266f9-bf74-4260-96d6-e532750674db"
>
</ReqRef><ReqRef
 Id="e13575b2-3dc6-4c1e-995f-7d24e34c61b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c978429a-3e54-4898-b207-1136bcc275b3"
>
</ReqRef><ReqRef
 Id="fed0816f-33b0-4ae0-82ce-ac9e35a4efc2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="370cb70b-9630-4065-ae8c-dee08dfd2628"
>
</ReqRef><Comment>For a type of fault, returns whether the train must immediately go into SF mode.</Comment>
<Parameters>
<Parameter
 Type="Messages.M_ERROR"
 Name="Fault"
 Guid="3b2ed32c-2beb-4be9-8f92-cc2c5a3e0987"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Prefer not to switch."
 Guid="b17459de-6293-401f-92e0-4cc51fa62cdb"
>
<PreConditions>
<PreCondition
 Guid="fa43be27-2045-49de-b7c9-5ae4e49cb81e"
>Kernel.Mode in [ModeEnum.SL, ModeEnum.PS, ModeEnum.NL]</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Otherwise"
 Guid="5b718973-5e31-44ca-96ba-84e4fc23d834"
>
<Expression>True</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="10"
 Y="400"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ReferenceLocation"
 Guid="3810f1d9-1f85-449d-9383-64b695af39ff"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbeb21fc-9612-481f-9b18-314fc777ef0e"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d4e2519a-6771-4819-9605-e82f779b3e2c"
>
</ReqRef><Comment>Provides the reference location of profile data used on-board.</Comment>
<Cases>
<Case
 Name="LRBG position, if available"
 Guid="4e1eb547-3533-4606-9332-11256fbf90e6"
>
<PreConditions>
<PreCondition
 Guid="3034a046-5335-4291-b268-c1be131e240f"
>Available( BTM.LRBG.LRBG().Position )</PreCondition></PreConditions>
<Expression>BTM.LRBG.LRBG().Position.Position</Expression>
</Case><Case
 Name="Unlinked BG position, if available"
 Guid="c7809cb9-9c62-4095-9b96-e614e1d0d144"
>
<PreConditions>
<PreCondition
 Guid="50d72afc-1431-4cb8-b388-1ad295a75ab0"
>Available ( BTM.LRBG.UnlinkedBGPosition )</PreCondition></PreConditions>
<Expression>BTM.LRBG.UnlinkedBGPosition.Position</Expression>
</Case><Case
 Name="0 otherwise"
 Guid="0c0f178c-cfeb-4493-8e8e-b2a2847791e1"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="340"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="StopCommunicationSessions"
 Guid="d9c1eb5e-2249-4d1d-8647-bfcb2af5bc9e"
>
<ReqRef
 Id="37635c63-5e19-4eac-8a83-f90098b54909"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="c7370f55-1e6f-45f5-962a-fb077a6eba7e"
>
</ReqRef><Comment>Keeps track of the conditions implying a termination of communication sessions.</Comment>
<Cases>
<Case
 Name="RBC rejects train while in SoM"
 Guid="90797853-5863-48cf-8f4d-8a73b693488c"
>
<Expression>Kernel.HandleModeChange in [Kernel.HandleModeChangeSM.StartOfMission.A39]</Expression>
</Case><Case
 Name="Driver closes the desk while in SoM"
 Guid="27722005-a532-4acf-8304-e6849fae7e88"
>
<Expression>Kernel.HandleModeChange in [Kernel.HandleModeChangeSM.StartOfMission]
  AND
NOT DMI.DeskIsOpen(DMI.MasterDMI())</Expression>
</Case><Case
 Name="Shunting initiated by driver and no RBC answer"
 Guid="7cb28bea-c1b5-4837-b188-57e5540ac1af"
>
<Expression>Kernel.HandleModeChange in [Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.S050]
  AND
Kernel.Modes.Shunting.RequestNotAnsweredByRBC()</Expression>
</Case><Case
 Name="Train trip or Shunting, nor order received, maximum number of requests reached"
 Guid="b1bb80d1-739d-4859-ac6d-853ff87f4569"
>
<Expression>Kernel.HandleModeChange in [Kernel.HandleModeChangeSM.TrainTrip.S120,
Kernel.HandleModeChangeSM.ShuntingInitiatedByDriver.S100]
  AND
Kernel.Modes.Shunting.RequestNotAnsweredByRBC()
  AND
EURORADIO.Messages.PositionReport.LastPositionReport.Time + EURORADIO.RBCConnection.TimeBeforeMessageRepetition &gt;= Kernel.DateAndTime.CurrentTime
  AND
EURORADIO.Messages.PositionReport.NumberOfSentReportRepetitions == 3</Expression>
</Case><Case
 Name="Otherwise"
 Guid="b621ad31-2648-4156-bd0b-a0ac4077cf78"
>
<Expression>False</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="10"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleInputs"
 Guid="584e61f2-ed38-4424-b1ba-2838e620ef92"
>
<ReqRef
 Id="3f373697-d41c-426c-a4a1-360175610417"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e80fa4f7-bee7-4b77-8220-215046a4c201"
>
</ReqRef><Comment>This procedure handles the inputs from the trackside and updates some internal variables according to these inputs.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle TIU inputs"
 Guid="f23f1962-61c9-4863-a5f1-4db6c89379e9"
>
<ReqRef
 Id="2e3eda46-b060-4164-9dc4-05e853b23a11"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="edb9a0b2-1175-45cc-b83c-d4265667223a"
>
</ReqRef><ReqRef
 Id="2716843f-aeab-4fa3-8b17-006bff38ba9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="971c4583-ff15-4819-8aae-1abfae6b1243"
>
</ReqRef><Comment>Handle change of orientation when a desk is opened.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle TIU inputs"
 Guid="79f6a2fd-d625-4354-8170-09f1a3534a3c"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="5ea97aa4-1ade-4662-b5b7-53634de602e3"
>TrainPosition.Orientation.HandleOrientationChange()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle Odometry inputs"
 Guid="e4c388a2-a672-48e4-97a3-b3582fe5de15"
>
<Comment>When a new odometer message is received, its content is copied to EFS internal variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle Odometry inputs"
 Guid="89da51a5-25d5-4e71-9880-7fe2360f042f"
>
<PreConditions>
<PreCondition
 Guid="99d84f3b-cc2e-4d2d-b093-1e6f1a17e664"
>Available ( Odometry.Message )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e29f4454-27a4-4605-a9ba-559f9aa9c4f1"
>Odometry.StoreOdometerMessage ( Odometry.Message )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="End of linking expectation window"
 Guid="ed7ec36f-0544-4ec7-b13f-df040e8b4162"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e85cef6e-1d30-442a-97a5-9a68693eb207"
>
</ReqRef><ReqRef
 Id="c534dda4-ea81-40b7-a27b-c229e935a20e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="beecb795-005b-401b-8218-0c80ff6507c2"
>
</ReqRef><ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4d699990-054f-460e-8592-c659753537bb"
>
</ReqRef><ReqRef
 Id="2c84de1b-61c3-4555-b485-6b4eae58ae90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b09ca036-7e41-41e9-9050-8e7a8d242004"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="96338666-9918-4249-9a25-f2283f6f12a9"
>
</ReqRef><ReqRef
 Id="21a0ae2b-0594-4a82-bcb1-13fdda48901c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="56863e88-2d0f-44cc-baef-a12a658b7044"
>
</ReqRef><Comment>Handles the linking consistency error when a train reaches the end of the currently expected balise&apos;s expectation window without encountering it</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Check the train has passed the expected BG&apos;s expectation window"
 Guid="698f6885-1eec-46b4-87fa-7ad3439243f9"
>
<Comment>Apply the linking reaction and remove the linking from the list</Comment>
<PreConditions>
<PreCondition
 Guid="6d3b2490-aa01-4121-8abb-e05a55a842cc"
>BTM.Linking.LinkingApplicable()
  AND  
(
BTM.Linking.Supervision.ExpectationWindowPassed()
  OR  
BTM.Linking.RAMS.RAMSWindowPassed()
)</PreCondition><PreCondition
 Guid="c890d07b-a440-4ec6-ba9a-57aec6e3798e"
>Kernel.ActiveFunctions.CheckLinkingConsistency()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d3d59ef2-1780-4145-90f8-d8a3cf0dfbcc"
>BTM.Linking.Supervision.HandleLinkingError(BTM.Linking.CurrentLinking().BaliseGroupIdentifier)</Action><Action
 Guid="871081d2-0e3b-4bf5-818c-269a1cdf7f5f"
>BTM.Linking.RAMS.LinkingWindowPassed()</Action><Action
 Guid="0e82728c-3d8d-4cc9-aad2-0a13e7445827"
>BTM.Linking.Supervision.StopExpectingLinkingsUpTo(
    ID =&gt; BTM.Linking.CurrentLinking().BaliseGroupIdentifier
    UpdateNextDistance =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle DMI inputs"
 Guid="3f4a21e9-b96b-4111-9e6e-f43307cb9ac5"
>
<Comment>Accept all the driver responses</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle DMI inputs"
 Guid="40fea73a-1a08-48d3-b25f-8f98327e08f2"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0cad42a7-d40a-4922-983f-e8acadc41b1e"
>DMI.MasterDMI().AcceptDriverResponse()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update Operated System Version"
 Guid="130c1bf5-7a06-4d86-89ef-056079708a2c"
>
<ReqRef
 Id="fc9c2633-16cf-4cca-9698-93622e8854e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6f1f9d15-af0a-4378-a0f3-6ac0d36c69c2"
>
</ReqRef><Comment>Update the Operated System Version prior to check message consistency. This is the default behaviour applied at each cycle. The operated system version may also be updated while crossing a RBC location border or setting the level .</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="UpdateOperatedSystemVersion"
 Guid="43e28c73-6a67-4b39-add2-1203be3bfaf3"
>
<PreConditions>
<PreCondition
 Guid="de3c088c-18b4-4a6f-8f0f-a17797cb2507"
>Available(EURORADIO.RBCConnection.CurrentRBCConnection())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c9010095-5f8d-417c-a8ab-dab19e770b55"
>VersionManagement.UpdateOperatedSystemVersion(EURORADIO.RBCConnection.CurrentRBCConnection())</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle BTM inputs"
 Guid="1ba806ee-8de8-4b1e-bb93-49c5dce8f696"
>
<ReqRef
 Id="3dcd2c27-a8e0-48b8-93e4-915c7943633f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0311786b-b1a5-4d76-9d2d-969526bbdc12"
>
</ReqRef><Comment>When a new balise telegram is received, its content is copied to EFS internal variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle BTM inputs"
 Guid="7a73e5ba-e5fc-4096-af34-3907ed746ba0"
>
<Comment>Handle a received balise of trackside version 2.0</Comment>
<PreConditions>
<PreCondition
 Guid="a3cd896f-c1dd-4f6c-b119-3337fd5cc404"
>NOT (Kernel.ActiveFunctions.ProtectAgainstReverseMovement() AND Kernel.UndesirableMovement.ReverseMovementDetected(Kernel.UndesirableMovement.ReverseMovementReferencePosition))</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Store received BG"
 Guid="769f7c80-d7fa-477b-9463-b9e133d5222c"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Store received BG"
 Guid="07720cbe-13ec-495e-aa00-330231f60c1c"
>
<PreConditions>
<PreCondition
 Guid="e77d83c7-e2ac-4e97-a9b6-cf974eefafae"
>Available ( BTM.Message.SystemVersion1) OR Available(BTM.Message.SystemVersion2)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="96ddb3ee-57c1-40a0-bc68-2be6f515660e"
>BTM.StoreBaliseGroupMessage ( BTM.UpdatedReceivedMessage(BTM.Message))</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="All balises have been received for the balise group"
 Guid="cfeca65f-2c5b-4b0a-88b7-aeb5a11123da"
>
<Comment>If telegrams from all balises of the current balise group have been received, the on-board handles the new message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="All balises have been received for the balise group"
 Guid="1e6e1aef-6e2f-455a-a63e-f24a5d6fc960"
>
<Comment>N_TOTAL is the number of balises - 1</Comment>
<PreConditions>
<PreCondition
 Guid="4c98c872-6bf7-41f9-b74a-be01dbe0b55c"
>BTM.FullBGReceived(BTM.CurrentBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e7bdbad0-03e6-4eab-af45-686bb9024af6"
>BTM.HandleMessage(BTM.CurrentBaliseGroup)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle Euroradio inputs: current connection"
 Guid="6a2115bc-b8ee-49c2-809f-4744f6c68146"
>
<Comment>Handles the message possibly received by the current RBC connection provided it is available.
The procedure EURORADIO.RBCConnection.RBCStruct.HandleIncommingMessage will refuse 
any other message than INITIATION_OF_A_COMMUNICATION_SESSION if its safe radio 
connection is not established.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle message of current connection"
 Guid="06a6283e-cac3-42cb-8f3c-747a97ff1b67"
>
<PreConditions>
<PreCondition
 Guid="ffbbc73c-09a0-4f7c-9221-9372cbf1a883"
>Available(EURORADIO.RBCConnection.CurrentRBCConnection())</PreCondition></PreConditions>
<Actions>
<Action
 Guid="de49db01-c702-4a6c-80db-bb9c911035c1"
>EURORADIO.RBCConnection.CurrentRBCConnection().HandleIncomingMessage(EURORADIO.Messages.UpdatedMessageIn(EURORADIO.RBCConnection.CurrentRBCConnection()))</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle Euroradio inputs: secondary connection"
 Guid="2e755da5-b35e-4557-a4e3-6661811f7db2"
>
<Comment>Handles the message possibly received by the Accepting RBC, if any.
The procedure EURORADIO.RBCConnection.RBCStruct.HandleIncommingMessage will refuse 
any other message than INITIATION_OF_A_COMMUNICATION_SESSION if its safe radio 
connection is not established.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle message of the secondary connection"
 Guid="420b0a6e-d2e9-489e-b36c-f499923ad36b"
>
<PreConditions>
<PreCondition
 Guid="0615ef78-ba68-4316-9d28-7195f09d58c9"
>EURORADIO.RBCConnection.SecondaryRBCConnection() != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a9acaf82-0005-4df9-9136-1782918819f3"
>EURORADIO.RBCConnection.SecondaryRBCConnection().HandleIncomingMessage(EURORADIO.Messages.UpdatedMessageIn(EURORADIO.RBCConnection.SecondaryRBCConnection()))</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update kernel mode"
 Guid="5ef397e3-af33-402c-99eb-ed9d13e71490"
>
<ReqRef
 Id="fcc0e481-867b-4267-8817-bfcb4ba2cde9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f4c6248-85e9-46df-ab0a-165b43e3f6ec"
>
</ReqRef><Comment>Updates the mode of the kernel according to the new information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update kernel mode"
 Guid="1a1cd1dd-0c51-4447-a723-dd7bf141569d"
>
<Comment>Updates the mode of the kernel according to the new information.</Comment>
<PreConditions>
<PreCondition
 Guid="24729d0d-2a5d-4cca-80e7-4b9d8b4130f4"
>Kernel.ActiveFunctions.DetermineMode()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4e99e841-916b-4771-9cbe-a7999f9bbdbb"
>Kernel.Modes.ModeTransitions.UpdateMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Calculate release speed"
 Guid="d1e75719-9714-4fb2-8ed6-5baf20b446d3"
>
<ReqRef
 Id="a0847e53-15b5-49c2-aefc-16f1fc80b471"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="9b2224c5-7c0b-4f6b-91c3-3198abb19c42"
>
</ReqRef><Comment>If a new MA was received, the release speed needs to be recalculated.
This is done now because the calculation depends on te mode.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Calculate release speed"
 Guid="4630a00c-35d4-4955-bbb6-520fe7aa0eb9"
>
<PreConditions>
<PreCondition
 Guid="d50da949-0d51-43fa-a618-cca94087a273"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.NewMAReceived</PreCondition></PreConditions>
<Actions>
<Action
 Guid="660fdd03-e40d-4307-ad08-af2e56cbe8ce"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedMonitoring.UpdateReleaseSpeed()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle MA timers"
 Guid="50883614-0cc0-4f35-a55f-6c9be035414a"
>
<Comment>Handles the timers associated to the movement authority.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle MA timers"
 Guid="bbd93fcf-a609-4936-aca3-29405481185a"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="fdfd0993-2721-4e15-8d2b-ee308ec43d08"
>Kernel.MA.MATimers.HandleTimers()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Speed and distance monitoring"
 Guid="afe72577-3fb0-4582-8bd7-509a0bd1b795"
>
<ReqRef
 Id="464dd6eb-f8c7-42fe-b8d9-c416ee775f1a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b5e9dd2-acd9-4291-83f8-8d393ae05adc"
>
</ReqRef><ReqRef
 Id="a918b4eb-359d-45fd-bed4-173ac8763338"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4b53b52-10bd-480a-bdbf-991b9ad857fe"
>
</ReqRef><ReqRef
 Id="4ae5a0a3-fed2-4e03-ad35-c2ff8b81332b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90836ca9-6ecf-4b96-90a8-97273bb47e87"
>
</ReqRef><ReqRef
 Id="0f683037-458a-40b9-90d5-f5e9f1c3d70f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="db700523-77eb-40c6-b22f-f76d28a538e8"
>
</ReqRef><Comment>After the mode is updated, check the speed and distance monitoring</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update the monitoring status if required"
 Guid="ee02abe1-f4e4-43e6-9173-89fd8a75b37e"
>
<Comment>If a mode was entered where the speed and distance monitoring is active, the correct type and status must be selected</Comment>
<PreConditions>
<PreCondition
 Guid="7a9bc363-3120-4ac9-8dd9-c9e77819a97c"
>Kernel.ActiveFunctions.SuperviseTrainSpeed()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1ea62aa3-6056-40d4-8b5a-3eb7fbfb176b"
>Kernel.SpeedAndDistanceMonitoring.SelectMonitoringType()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Stop monitoring if required"
 Guid="cdeb8310-91de-414d-8e5e-657e42672fe8"
>
<Comment>If a mode was entered where the speed and distance monitoring is inactive, the speed and distance monitoring must be set to idle</Comment>
<PreConditions>
<PreCondition
 Guid="5a06828f-3ad3-414d-a5d5-e64ce6ce5964"
>SpeedAndDistanceMonitoring.Monitoring not in SpeedAndDistanceMonitoring.MonitoringTypeSM.Idle</PreCondition><PreCondition
 Guid="2c65f51f-0179-40a4-aa6c-6760fa0e4a3d"
>NOT Kernel.ActiveFunctions.SuperviseTrainSpeed()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5298da62-c34c-4732-a368-5c9e79af8089"
>Kernel.SpeedAndDistanceMonitoring.StopMonitoring()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Supervision Status"
 Guid="1a4b4842-f836-475a-967b-81dfeaecab69"
>
<ReqRef
 Id="87168408-94a2-4eeb-8c4a-666507a95b45"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f215d48d-1d21-4428-a763-37996f837469"
>
</ReqRef><ReqRef
 Id="3935be43-6132-47c6-8ef3-28195e4f690c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d33b649-c665-4e28-98b9-2f0e3c71d4c2"
>
</ReqRef><ReqRef
 Id="452e7369-8988-4a04-9d16-d7e769201a71"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="845fddbc-7ea4-48f1-9132-b069e2e0faf8"
>
</ReqRef><ReqRef
 Id="da801456-beb5-47fa-b81e-22d23298cdb1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fc90b263-2e2f-4a1d-a7bb-2673bfc6ebaf"
>
</ReqRef><ReqRef
 Id="8468de24-42eb-4959-a546-99c00cccb22a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fc823907-482a-4ccd-9613-8b6157a5a1c8"
>
</ReqRef><ReqRef
 Id="ec29a885-8a5f-4c6e-82e7-4e5b41a7dd5d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47a7c495-7562-49bf-870d-28397be4fdfe"
>
</ReqRef><Comment>Updates the supervision status accotding to the monitoring</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Supervision Status"
 Guid="7ad6f11e-05a7-4097-9e25-c74af53a797b"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f0b17e67-98e9-4dc1-984e-5b14a9998bd7"
>SpeedAndDistanceMonitoring.SupervisionStatus &lt;- SpeedAndDistanceMonitoring.SupervisionStatusTransition()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle route unsuitabilities"
 Guid="bc158c6f-c7c7-4abf-ac72-653904311791"
>
<ReqRef
 Id="48b266a3-bc31-49b2-8a03-dda08682c26f"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="4fff0f33-6b2b-4ca8-86e8-caafaf9f8e30"
>
</ReqRef><ReqRef
 Id="2c953852-61e9-4ee7-857f-4f48931ed71e"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="25e0ce79-31eb-4bc9-92af-6772b99e2a5c"
>
</ReqRef><ReqRef
 Id="405052f7-8cab-4d49-b59c-a0bf70b9a734"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="3471ee0b-03be-4107-bbf9-e610e19ea0d0"
>
</ReqRef><ReqRef
 Id="84d60668-6d65-417b-beca-fb2801cbd5e6"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="44e479af-3a66-45c2-9efd-18dc08cffc2b"
>
</ReqRef><Comment>If a route unsuitability becomes active, its start time is updated.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle route unsuitabilities"
 Guid="9c26ae0c-3b44-4d45-bb8e-392f91ed50eb"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="15422f63-e10e-4fdd-a947-07fc2ce79a92"
>Kernel.TrackDescription.RouteSuitability.UpdateStartTime()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DeleteStoredInformation"
 Guid="61a66ca5-ccb7-4bee-9247-0cfc049ea418"
>
<ReqRef
 Id="a0239fb6-709c-4818-9907-463b7c24e661"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be7eb453-55cd-4ead-8b6a-83453154e125"
>
</ReqRef><ReqRef
 Id="2c3a1b3f-8686-4dc8-b3cb-bf0f5c7a0f03"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f1c3f07-4209-42d2-a8dc-722faef76eeb"
>
</ReqRef><Comment>Deletes the stored information that is no longer used.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Delete stored information"
 Guid="f710d52f-43fd-44b6-85e5-db5b4ac7a082"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Delete stored information"
 Guid="ae1d39ba-9392-4397-ae7f-70e574f6bfb6"
>
<PreConditions>
<PreCondition
 Guid="5ed9dedc-20d5-4105-9c2a-1f82bd4655d8"
>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainRunningDirection == Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation</PreCondition><PreCondition
 Guid="399cf8a3-83df-4644-b715-ca164a3bd0d8"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Valid</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Standard case"
 Guid="8ba82f05-9b34-48da-8d8d-80d7f286c995"
>
<Comment>Deletes the stored information that can be deleted immediately after the moment the train passed its location.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Standard case"
 Guid="3d5875e5-55b0-489e-b8fc-a5c406133633"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="be32f8de-1052-414f-b7e3-30384843a095"
>REMOVE ALL
  BaseTypes.RemoveLocationBasedElement
  (
    aLocation =&gt; X.Location + TrackDescription.RouteSuitability.RouteSuitabilityEnd( Current =&gt; X),
    anAdditionalDistance =&gt; 0.0
  )
IN TrackDescription.RouteSuitability.RouteSuitabilityProfile.Items</Action><Action
 Guid="effae0ff-821f-49a4-b156-ec9f0cd7cc5b"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; 0.0
  )
IN
  TrackDescription.TrackConditions.General.TCProfile</Action><Action
 Guid="f91f5ae0-fd2c-40a7-94db-e97d81beb4b3"
>REMOVE TrackDescription.TrackConditions.ConditionExitsApplicability
  (
    aLocation =&gt; X.Location, 
    TrackConditionType =&gt; TrackDescription.TrackConditions.ConditionType.StationPlatform
  )
IN
  TrackDescription.TrackConditions.StationPlatform.TCStationPlatforms</Action><Action
 Guid="feca3a28-9d9e-429e-85f6-3b5ea48dfbab"
>REMOVE TrackDescription.TrackConditions.ConditionExitsApplicability
  (
    aLocation =&gt; X.Location,
     TrackConditionType =&gt; TrackDescription.TrackConditions.ConditionType.TractionSystem
  )
IN
  TrackDescription.TrackConditions.TractionSystems.TCTractionSystems</Action><Action
 Guid="fd3b7fa2-96f7-45bd-807b-e499d62319bb"
>REMOVE TrackDescription.TrackConditions.ConditionExitsApplicability
  (
    aLocation =&gt; X.Location,
    TrackConditionType =&gt; TrackDescription.TrackConditions.ConditionType.CurrentConsumption
  )
IN
  TrackDescription.TrackConditions.CurrentConsumption.TCCurrentConsumption</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Reversing area"
 Guid="db4dac3f-f6b8-4221-ae95-2fbf1e951572"
>
<Comment>Deletes the reversing area information, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Reversing area"
 Guid="a39ef212-c59d-4fa7-b293-31c52ffa8d2e"
>
<PreConditions>
<PreCondition
 Guid="eee70398-c0df-404b-8f8c-beb0ec134286"
>Kernel.TrackDescription.ReversingArea.ReversingAreaProfile != EMPTY</PreCondition><PreCondition
 Guid="6d71600a-1ec5-4dda-b1ac-690d55dd63e6"
>BaseTypes.RemoveLengthLocationBasedElement
(
    anElement =&gt; Kernel.TrackDescription.ReversingArea.ReversingAreaProfile,
    anAdditionalDistance =&gt; 0.0
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="69f887ee-2db1-47fc-bddd-f9a53611840b"
>Kernel.TrackDescription.ReversingArea.ReversingAreaProfile &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level transition"
 Guid="500996ba-36bd-4177-9cfd-4ac308561d31"
>
<Comment>Deletes the level transition information, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level transition"
 Guid="7e94e312-908d-4b48-b4dc-e154069835df"
>
<PreConditions>
<PreCondition
 Guid="a8507763-0885-4f30-83a8-fb4e86c6248a"
>Kernel.LevelTransition.LevelTransitionOrder != EMPTY</PreCondition><PreCondition
 Guid="14ee64d7-7faf-4a46-8c54-5a6a1f60c4f7"
>BaseTypes.RemoveLocationBasedElement
(
    aLocation =&gt; Kernel.LevelTransition.LevelTransitionOrder.Location,
    anAdditionalDistance =&gt; 0.0
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="84515d87-05ed-4d42-884b-72680e5bfa64"
>Kernel.LevelTransition.LevelTransitionOrder &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Track ahead free"
 Guid="d1734c0e-4af8-4a55-8932-16af69489b0c"
>
<Comment>Deletes the track ahead free information, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Track ahead free"
 Guid="38ca9041-090e-44f3-ab89-757af6273074"
>
<PreConditions>
<PreCondition
 Guid="214ba963-0a41-4e1f-8261-5dfb817152ed"
>Kernel.TrackAheadFree.TrackAheadFreeRequest != EMPTY</PreCondition><PreCondition
 Guid="fad86333-5283-4758-bda0-7987b029c290"
>BaseTypes.RemoveLocationBasedElement
(
    aLocation =&gt; Kernel.TrackAheadFree.TrackAheadFreeRequest.StopDisplayLocation,
    anAdditionalDistance =&gt; 0.0
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c7b4fcac-eba1-48f5-959f-c42e12fd94da"
>Kernel.TrackAheadFree.TrackAheadFreeRequest &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Exceptions"
 Guid="89824c60-fba8-49fb-94ff-319edc18b6e4"
>
<ReqRef
 Id="ae963d74-ee48-4c49-819e-a34cf532f1f5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3894649c-63e1-4532-8ff1-3296378668a2"
>
</ReqRef><Comment>Deletes the information that has to be kept during a distance determined by a fixed value.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Exceptions"
 Guid="44fbeaef-1851-44e4-802c-1d3e63b831d8"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="be1ac2d0-355a-4164-b5c6-7a172db6956d"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN
  TSR.TSRs</Action><Action
 Guid="3e635ae3-a11f-43b3-9de0-30bc373ee9b7"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN TrackDescription.AxleLoad.ASP.ALs</Action><Action
 Guid="75e417ac-536c-409a-add7-9945520c9b6a"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN LX.MRSPLevelCrossings</Action><Action
 Guid="42f35ad6-3552-44c8-81fe-80755d44da72"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN LX.SupervisedLevelCrossings</Action><Action
 Guid="3c3e0302-bced-4a14-aef0-9552ee018b3c"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.SpeedRestrictions</Action><Action
 Guid="ac31f9f2-5410-46f4-be14-3c9857988e41"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN TrackDescription.AdhesionFactors.AdhFactors</Action><Action
 Guid="d954cd07-2c11-4b4b-a832-ba56930dada2"
>REMOVE ALL
  BaseTypes.RemoveLocationBasedElement
  (
    aLocation =&gt; TrackDescription.Gradient.GradientEnd( Current =&gt; X ) + TrainData.TrainData.Value.TrainLength,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN TrackDescription.Gradient.Gradients</Action><Action
 Guid="3c978c3b-d612-4bbc-85e5-db40d8249501"
>REMOVE ALL
  BaseTypes.RemoveLocationBasedElement
  (
    aLocation =&gt; X.Location + TrackDescription.StaticSpeedProfile.SSPLength( aSSP =&gt; X ),
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN TrackDescription.StaticSpeedProfile.SSP</Action><Action
 Guid="eb5b3a2f-282d-4717-8657-32e14c2946e1"
>REMOVE ALL
  BaseTypes.RemoveLengthLocationBasedElement
  (
    anElement =&gt; X,
    anAdditionalDistance =&gt; DistanceToKeepInfoInTheRear
  )
IN
  TrackDescription.TrackConditions.BigMetalMasses.TCBigMetalMasses</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Staff responsible"
 Guid="00d58b40-1ddf-429f-85de-6418fd9f7a4d"
>
<Comment>Deletes the staff responsible information, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Staff responsible"
 Guid="f108914a-5156-47b5-a923-7ab501c63ad6"
>
<PreConditions>
<PreCondition
 Guid="4b27285d-46e9-40ee-a1b5-4f89ac94a4a6"
>Kernel.Modes.StaffResponsible.SRAuthorisation != EMPTY</PreCondition><PreCondition
 Guid="2a7793d4-7e79-4bec-b77d-bf9f16cc2346"
>BaseTypes.RemoveLocationBasedElement
(
    aLocation =&gt; Kernel.Modes.StaffResponsible.SRAuthorisation.Location,
    anAdditionalDistance =&gt; Kernel.DistanceToKeepInfoInTheRear
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="37dd3208-f812-482a-882e-4591232608e4"
>Kernel.Modes.StaffResponsible.SRAuthorisation &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="10"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleOutputs"
 Guid="51ad2f80-5fab-4b86-85f9-818dea2864b4"
>
<Comment>This procedure handles the outputs to the driver or the trackside according to the state of internal variables.</Comment>
<Rules>
<Rule
 Priority="UpdateOUT"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update the DMI"
 Guid="e8739a21-082d-428f-a5d3-c595a9e5d364"
>
<Comment>Update all the output variables to be displayed on the Master DMI</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update system state"
 Guid="ebebbf9f-4cd7-4212-aa33-5cca4c0f6ddf"
>
<Comment>Update the output variables on the Master DMI</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="29eb6143-5828-4bf2-b80a-04f778521a9f"
>DMI.MasterDMI().UpdateOUTVariables()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateOUT"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send Euroradio messages"
 Guid="ac8673bb-364c-4a24-9f76-1336fba2daed"
>
<Comment>Send Euroradio messages if needed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send Euroradio messages"
 Guid="ed1de417-3707-4ba9-bffd-d5211659dd20"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0d578cf9-1386-4e3d-acce-888906447d6c"
>EURORADIO.Messages.ProcessOutgoingMessages()</Action><Action
 Guid="491490c7-2e62-40b0-a706-9dcaeb16e600"
>EURORADIO.RBCConnection.CurrentRBCConnection().TranslateOutMessage()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Secondary connection available"
 Guid="e69a9982-9316-41e6-bfd1-7cd846f4e31e"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Secondary connection available"
 Guid="e6d8bfb8-2b51-4046-b97c-84e997f02b66"
>
<PreConditions>
<PreCondition
 Guid="3e71c2a5-728d-450c-8a29-43f1825d698c"
>EURORADIO.RBCConnection.SecondaryRBCConnection() != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="19a87d33-4393-4f56-bb7d-e7a956ee1b4d"
>EURORADIO.RBCConnection.SecondaryRBCConnection().TranslateOutMessage()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateOUT"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send JRU messages"
 Guid="76dea100-7f32-46de-bfa5-7c1e4f8d34d5"
>
<ReqRef
 Id="d2655cc5-21f7-4522-96f9-bdfb23f40c80"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ace9d56d-48d6-42e5-9784-8aabe4a6d7f4"
>
</ReqRef><Comment>Create the JRU messages based on the EVC&apos;s current state</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send JRU messages"
 Guid="bdba5cda-8ba3-4fec-ad67-7e7b89118e77"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="bb324409-0669-4fc6-8f5e-9bde8122f644"
>JRU.CreateMessages()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="120"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafetyCriticalFaultDetected"
 Guid="2dfe604b-f9ab-4c8d-81e2-596510db3459"
>
<ReqRef
 Id="0dbbf234-3119-40cf-839a-64ae2c895770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="320faf64-2582-4d62-8591-3a35b38fd0be"
>
</ReqRef><ReqRef
 Id="e13575b2-3dc6-4c1e-995f-7d24e34c61b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4464fa17-072d-4779-b047-e1bdf62ad37d"
>
</ReqRef><ReqRef
 Id="fed0816f-33b0-4ae0-82ce-ac9e35a4efc2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e225f421-e6af-4007-9ba9-ae8549538e54"
>
</ReqRef><Comment>Handles detection of a safety critical fault by the EVC.</Comment>
<Parameters>
<Parameter
 Type="Messages.M_ERROR"
 Name="Fault"
 Guid="fb1ccb33-96f3-43f9-bcd4-44fb2794f55c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add to the list of detected faults"
 Guid="fab41ae2-042b-40e7-88d8-9253b9e59b54"
>
<Comment>Store the fault received from trackside.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add to the list of detected faults"
 Guid="62bb277b-64eb-441b-aa1e-52b4b2b9f13d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ad068fe5-fc19-4fa1-bf69-1d6a8c907ca1"
>INSERT Kernel.SafetyCriticalFaultStruct{
    Timestamp =&gt; DateAndTime.Now(),
    Fault =&gt; Fault
}
 IN Kernel.SafetyCriticalFaults</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send report to RBC"
 Guid="adcaa786-8665-4068-a8bd-e22e4d823e98"
>
<Comment>Send a position report to the RBC. This report will include Packet 4, with the information about the detected fault.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send report to RBC"
 Guid="b662a1fa-a894-4275-a862-be0cb37b1839"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a1c673bf-c1c1-4eee-aeb4-8ff49a2adbac"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendPositionReport()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Level 2/3, no RBC connection"
 Guid="6f4215d4-b496-48be-a3c3-0402d5130c81"
>
<ReqRef
 Id="189c802e-c2fa-4815-8dc9-f0d5cbee6170"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f4a0d347-9fe4-4735-b409-41c1eb4da916"
>
</ReqRef><ReqRef
 Id="d6f73100-506e-4f75-965b-5329798ae04c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c211c680-e7cc-4240-a683-0a3ffd84811d"
>
</ReqRef><Comment>Connect to report the fault in levels 2/3.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Connect to the RBC to report the fault."
 Guid="1c079494-141e-473c-964f-b6076f28e07f"
>
<PreConditions>
<PreCondition
 Guid="eec272d9-b226-4a12-91d4-3df042472468"
>Kernel.Level.Value.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ec69f817-fdf5-47d0-a001-f3819c2549a7"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendInitiationOfCommunicationSession()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="230"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SetLevel"
 Guid="dbac2605-aa9d-42dd-b61e-19e58d0287ad"
>
<Comment>Handles the level changes.</Comment>
<Parameters>
<Parameter
 Type="LevelDataStruct"
 Name="aLevel"
 Guid="de7a8125-2f80-45ef-9ff1-b7e2a5595ddc"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Set level"
 Guid="98ff2195-8db0-4998-9699-9d135760690d"
>
<Comment>Sets the new level value.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Set level"
 Guid="0b3d3afe-a8d9-422f-9db8-718f8c1048cb"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="508ecb41-3187-4b72-8619-867d2e337566"
>Kernel.Level &lt;- Kernel.LevelData{
    Value =&gt; aLevel,
    DataState =&gt; DataStateEnum.Valid
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Keep time for RBC"
 Guid="cd823a0a-8066-4898-8c6a-d57b4509d03c"
>
<ReqRef
 Id="60e39a2f-4380-44e7-bf85-7142748b200f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ecee325f-2054-42d6-b6b0-76d3081f5be4"
>
</ReqRef><ReqRef
 Id="42342bff-4561-490e-beae-73b88476afe8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcea59ea-0c98-4073-9628-c0e626bf7873"
>
</ReqRef><Comment>When entering L2 or L3, if there is no radio connection, keep the current time as reference for data consistency checks.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep time for RBC"
 Guid="e12810e9-3ea4-4892-b5c5-32b51cb2c2b0"
>
<PreConditions>
<PreCondition
 Guid="ebe9fcf2-d790-42ff-ac5a-5f40c6b79e63"
>EURORADIO.RBCConnection.CurrentRBCConnection().ConnectionState not in EURORADIO.RBCConnection.CurrentRBCConnection().ConnectionStateSM.Connected</PreCondition><PreCondition
 Guid="62e62821-0008-42f2-8610-1ac69bb9d51c"
>aLevel.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="402e6d77-6da8-4bb4-8707-384237982f18"
>EURORADIO.RBCConnection.CurrentRBCConnection().OnboardReference_MessageTimer &lt;- Kernel.DateAndTime.CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Update Operated System Version"
 Guid="02819503-ae2b-48be-8fa9-91efb7c799eb"
>
<ReqRef
 Id="db045494-fb76-4337-b953-a8221cd64dd5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="722d5034-bf22-4386-982f-7c40a3fcef59"
>
</ReqRef><ReqRef
 Id="ce4aa798-341e-4b38-b7bf-f32bc3bfe840"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c404b71-0886-454f-8caa-b1d01aa7678b"
>
</ReqRef><Comment>Cfr requirement, as soon as the level is changed to level 2/3, the operated system version should be set according to the RBC system version, provided there is one. Note that changing level from level 2/3 to a lower does not require an immediate change of the operated system version, hence one will use the default rule at next cycle.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update Operated System Version"
 Guid="c7671cc7-3c0f-4ff6-9d46-e08778f764be"
>
<ReqRef
 Id="8b537bfe-42bf-4ed8-b4bd-e2df5c6fe959"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d9256fc-aa4f-4e90-be01-41c286c3038c"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="1d5dc132-863c-4b1b-af3c-040e8f055f2f"
>aLevel.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition><PreCondition
 Guid="ac4f3df6-32bf-4fca-b3ba-52704e013136"
>Available(EURORADIO.RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.Value)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2721b392-0f2d-4f22-a2f2-a992c2772727"
>VersionManagement.UpdateOperatedSystemVersion(EURORADIO.RBCConnection.CurrentRBCConnection())</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="DriverIdStruct"
 DefaultValue="DriverIdStruct{}"
 VariableMode="Internal"
 X="630"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="DriverId"
 Guid="8dddc729-7598-4f91-83f1-18dd8ebf600b"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea7e05be-d287-4d5a-a2c2-ed4d4bddca57"
>
</ReqRef><ReqRef
 Id="20057b5b-4d7d-471b-8b22-6034d8be03a7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e62f432b-bcce-4d08-ba26-aaf1b7004649"
>
</ReqRef><ReqRef
 Id="166e123f-f57c-4045-af2e-915a4c4e849b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b62a86e5-81b4-478a-8e82-2d8ed3f5aeeb"
>
</ReqRef><Comment>The data state and the value of the driver id.</Comment>
</Variable><Variable
 Type="LevelData"
 DefaultValue="Kernel.LevelData{}"
 VariableMode="Internal"
 X="630"
 Y="580"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Level"
 Guid="5308bb4c-2f99-44c0-8637-c53268611e5f"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f07d9d2c-b2c0-4ec7-a779-e42acd6e5f47"
>
</ReqRef><ReqRef
 Id="2bd0d6a5-d918-4308-994a-c1689c4a4e30"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4954215b-881f-4138-a9e8-eb3ea125979d"
>
</ReqRef><Comment>Indicates the state and the value of the current ERTMS/ETCS level of the train.</Comment>
</Variable><Variable
 Type="ModeEnum"
 DefaultValue="ModeEnum.NP"
 VariableMode="Internal"
 X="780"
 Y="250"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Mode"
 Guid="995e813d-7495-4cac-9611-6ab01d0e601f"
>
<ReqRef
 Id="9a35843b-0036-48f7-adce-1bd6c052fe69"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7aa2aae-cdf2-4c9e-bc85-30dd9d84cb36"
>
</ReqRef></Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="890"
 Y="250"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="PowerOn"
 Guid="59961cdf-c80c-4210-a62d-8f81397dd4c3"
>
<ReqRef
 Id="b144cb88-77c8-4ba0-96b6-b83f713905dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d09af042-3b27-4c3d-ba2c-af40617b504e"
>
</ReqRef><Comment>Indicates whether the EVC is On or Off.</Comment>
</Variable><Variable
 Type="TrainRunningNumberStruct"
 DefaultValue=""
 VariableMode="Internal"
 X="630"
 Y="260"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TrainRunningNumber"
 Guid="62073aab-9036-4212-9edc-5cc9c9e478a5"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4fbbe1a3-b17e-4d5b-ae57-820cd79573a4"
>
</ReqRef><ReqRef
 Id="07bfd145-efdd-4512-b930-b761213e0377"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3bf1b77-097e-4280-953e-f03f135e2b3e"
>
</ReqRef><ReqRef
 Id="47e76500-ce7e-48be-9414-97b01bbaaf74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6c3a18c6-85a4-4324-822d-6b1faaf9e5fe"
>
</ReqRef></Variable><Variable
 Type="Boolean"
 DefaultValue="Boolean.False"
 VariableMode="Internal"
 X="1000"
 Y="250"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="MissionIsOnGoing"
 Guid="5a9ba8b6-63c2-4fc6-aa30-8c87db612259"
>
<ReqRef
 Id="2df20d0d-1f50-4e04-aa20-f8d1ab4e0945"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5c97ceb4-650b-47a9-a210-92983dba5f0f"
>
</ReqRef><ReqRef
 Id="9a711b7c-ff6b-448c-a9cd-2aa9669899ad"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a87389bc-073a-44dd-b684-6d6d10add7a3"
>
</ReqRef><ReqRef
 Id="64b644e8-aaed-41c9-ab84-f81ea4041d54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c84e810d-024b-45ee-ac3a-ec171b56dde0"
>
</ReqRef><ReqRef
 Id="588364b4-1c15-454c-a0f1-3235f2130fc5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1328cb1e-e950-42c2-8928-630e642614d4"
>
</ReqRef><ReqRef
 Id="66ed413a-6b6e-4b23-b847-4b1870c4d831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4c3e5f9-5b41-448f-9d2d-5df00cbeba2c"
>
</ReqRef><ReqRef
 Id="84c57300-1791-4e2f-9eba-ad6f95834b74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7cecbe60-5ac2-4789-8edd-15cbdde5bcaa"
>
</ReqRef><ReqRef
 Id="31c44e96-e029-418d-b715-af8b375bf89b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="983bfc82-c312-4757-9d47-b8c292990452"
>
</ReqRef><ReqRef
 Id="9055a6b1-6135-49e8-a779-622b3270c280"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8cc1c043-0e11-40f4-b0db-1c4dfdbe6053"
>
</ReqRef><ReqRef
 Id="193d2e18-8bfa-43f0-b84d-6e1b1d45a84d"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="64d01d46-d84a-4789-887a-b4464af7c2fd"
>
</ReqRef><ReqRef
 Id="d27a51c4-55a3-44c2-a184-442af52831fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d786f11-135d-4b2e-b01e-720e01a1f8ec"
>
</ReqRef><ReqRef
 Id="57975d77-7335-4135-bac0-954cd1debb67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93a3589d-0a51-4f77-9a21-5e7796644dde"
>
</ReqRef><ReqRef
 Id="39941df7-787e-4ef3-839d-a438e01d3964"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c5e55fbf-f9c2-4f9c-9d61-cf44f49e7e2b"
>
</ReqRef><Comment>Indicates if the train has started a mission.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="0.34"
 VariableMode="Internal"
 X="890"
 Y="360"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CycleDuration"
 Guid="9550241c-6040-426f-b9ae-959c226568bb"
>
<Comment>Represents the duration of a whole EVC cycle.</Comment>
</Variable><Variable
 Type="Messages.NID_ENGINE"
 DefaultValue="0"
 VariableMode="Internal"
 X="1000"
 Y="360"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NidEngine"
 Guid="e701c49e-cb75-4888-8045-b0feecb4dd75"
>
<Comment>The NID of the engine, used for sending messages to the trackside.</Comment>
</Variable><Variable
 Type="HandleModeChangeSM"
 DefaultValue="Kernel.HandleModeChangeSM.NoProcedure"
 VariableMode="Internal"
 X="630"
 Y="380"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleModeChange"
 Guid="478d6d56-8c92-4b72-92ef-e4fe79d4ceda"
>
<Comment>The current procedure that the on-board is handling.</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="300.0"
 VariableMode="Constant"
 X="780"
 Y="360"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="DistanceToKeepInfoInTheRear"
 Guid="916c47dd-ea25-4512-bcfa-4fe991bdf6e0"
>
<ReqRef
 Id="2c3a1b3f-8686-4dc8-b3cb-bf0f5c7a0f03"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d85b957-d0a8-4d57-89ff-6c96551ff133"
>
</ReqRef></Variable><Variable
 Type="SafetyCriticalFaultsCol"
 DefaultValue=""
 VariableMode="Internal"
 X="630"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SafetyCriticalFaults"
 Guid="c6707387-3118-4b16-99f1-ae1e361fe904"
>
<ReqRef
 Id="0dbbf234-3119-40cf-839a-64ae2c895770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ea2bad2-d3ea-4e0f-a694-34653ff84122"
>
</ReqRef><ReqRef
 Id="e13575b2-3dc6-4c1e-995f-7d24e34c61b1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="267ef0cd-ec93-4429-95cd-6b791de6f210"
>
</ReqRef><ReqRef
 Id="fed0816f-33b0-4ae0-82ce-ac9e35a4efc2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2f68847f-2996-4251-a73d-6e64033fb382"
>
</ReqRef><ReqRef
 Id="ecdd4d2a-94b2-405c-bdd5-a4f4050fb58d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3e3e788d-551a-408d-8658-bedfe6e02eca"
>
</ReqRef><Comment>The detected safety critical faults that need to be handled.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 X="10"
 Y="560"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleInputs"
 Guid="db5fbd34-5030-4e07-bf04-219670c582ea"
>
<Comment>Initialises a new EFS cycle with input variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="HandleInputs"
 Guid="7bb40ce0-e671-4f16-ba25-f5e8c290c3a8"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4d92d3d4-cacc-45f7-affb-7dd10a2b80ed"
>Kernel.HandleInputs()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="10"
 Y="680"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateSystemTime"
 Guid="46585923-b629-4166-8a63-015a66498ae6"
>
<Comment>At the end of each cycle, the current time of the system is incremented with the duration of one cycle.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateSystemTime"
 Guid="5a6dc828-78ce-4bd9-895b-61f01f034095"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="5255382c-3be3-4546-b1f7-379dad85f82b"
>Kernel.DateAndTime.CurrentTime &lt;- Kernel.DateAndTime.CurrentTime + Kernel.CycleDuration</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="230"
 Y="620"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Clean Up"
 Guid="5ede8ba9-0011-4a3b-878f-702096c02b6a"
>
<ReqRef
 Id="a0239fb6-709c-4818-9907-463b7c24e661"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40f90fc0-b33a-44f6-9df1-45edaed53a37"
>
</ReqRef><Comment>Performs the cleaning of the information which is not needed by the Kernel anymore.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clean Up"
 Guid="6a50ba6d-d851-464b-b12e-3e85b0608b73"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4496b919-4e23-477b-8857-4b9c591f4202"
>DeleteStoredInformation()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateOUT"
 X="10"
 Y="620"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle Outputs"
 Guid="1b0fb1e9-77a2-4126-9b66-9882bd304dcf"
>
<Comment>Performs the actions related to the update of output variables in the order DMI -&gt; JRU</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle Outputs"
 Guid="a454a9ef-1994-48a4-81d4-45675bde5a04"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="64fdc2b6-5a0c-4668-8243-6d9c40b99a78"
>Kernel.HandleOutputs()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="120"
 Y="620"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Handle System Status Message"
 Guid="15d8403d-72a4-4fc7-ae20-47fba71a19b3"
>
<ReqRef
 Id="6be93d46-2f3c-4a81-bc6f-06a7adbaa419"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42d8bac7-3cbb-4e64-96fe-06aca31788da"
>
</ReqRef><ReqRef
 Id="3d4bd2d4-777c-4d6d-85c1-ab231d5aee49"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c10619e8-492e-4a83-99f6-0a22b01419bf"
>
</ReqRef><Comment>The texts &quot;Entry in FS&quot; and &quot;Entry in OS&quot; are displayed when the SSP and gradients are not known for the whole length of the train.
When the rear end of the train passes the start of the profiles, the message is no longer displayed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Stop display of &quot;Entry in FS/OS&quot;"
 Guid="49263247-9450-40e7-a2bf-58fe0a1a052b"
>
<PreConditions>
<PreCondition
 Guid="e0fc7a91-fd3d-43d4-9ac5-d88d4088cf00"
>DMI.MasterDMI().Out_EntryInFsOs.OutputInformation.DisplayRequested</PreCondition><PreCondition
 Guid="e31a3f35-e0d0-4679-bdb6-287dc5bbf9ce"
>Kernel.TrainPosition.RearEndPosition(PointOfInterest =&gt; DistanceIntervalEnum.Nom) &gt;= (FIRST X IN TrackDescription.Gradient.Gradients).Location</PreCondition><PreCondition
 Guid="8ef695d6-6008-457a-b954-e699a5744db5"
>Kernel.Mode in [ModeEnum.FS, ModeEnum.OS]</PreCondition><PreCondition
 Guid="f693983c-1ef2-466c-9f2a-1e388434b61c"
>Kernel.TrainPosition.RearEndPosition(PointOfInterest =&gt; DistanceIntervalEnum.Nom) &gt;= (FIRST X IN Kernel.TrackDescription.StaticSpeedProfile.SSP).Location</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1cb44512-e85f-49fd-b1d2-d6050b977813"
>DMI.MasterDMI().Out_EntryInFsOs.OutputInformation.DoNotDisplay()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
