<NameSpace
 X="120"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Image="1"
 Name="BTM"
 Guid="abe3c9de-4d7b-4a03-a327-8f85ce216c28"
>
<Comment>Rules and procedures related to the reception and handling of balise group messages.</Comment>
<NameSpaces>
<NameSpaceRef
 Name="Linking"
 Guid="8fb5b694-9c14-4b50-8614-ab327fba1e03"
>
</NameSpaceRef><NameSpaceRef
 Name="Infill"
 Guid="ade9b64d-2516-4edc-81f4-09f73642687d"
>
</NameSpaceRef><NameSpaceRef
 Name="MessageConsistency"
 Guid="43aac66f-8361-46da-add0-78d5657b19c3"
>
</NameSpaceRef><NameSpaceRef
 Name="LRBG"
 Guid="cdad3bcd-47b4-4553-9fda-a4d69ecb4fea"
>
</NameSpaceRef><NameSpaceRef
 Name="Packets"
 Guid="f11f19e3-7f02-4c69-9613-7c81d2003dac"
>
</NameSpaceRef><NameSpaceRef
 Name="MissedBalises"
 Guid="621a8a89-8e87-42c3-a46b-58efea96b539"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="510"
 Y="450"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PositionStruct"
 Guid="8ca407f2-8e0f-4627-b56c-5584e999d989"
>
<Comment>Saves the information provided by the odometry at the moment where a balise group is passed. Used to compute the position, over and under reading amount relative to that balise group.</Comment>
<StructureElement
 TypeName="BaseTypes.Distance"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="64e0dbf9-512d-4f1f-aa55-215d81ca22df"
>
<Comment>Estimated position of the train.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UnderReadingAmountOdo"
 Guid="4a1d4052-682d-4b7f-89d2-163862a190b8"
>
<Comment>The under-reading amount.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OverReadingAmountOdo"
 Guid="a4915afe-ad95-4ea9-aac7-b511eb5fe837"
>
<Comment>The over-reading amount.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="510"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LocationReferenceStruct"
 Guid="cdcfde8e-5a0f-4fae-a527-567ccb883fac"
>
<Comment>Keeps the location and time of passage over the location reference of a Balise group.</Comment>
<StructureElement
 TypeName="PositionStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="b15b81c8-faa3-40b9-adf3-745bf7b8b4ff"
>
</StructureElement><StructureElement
 TypeName="DateAndTimeStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Timestamp"
 Guid="4ed3664e-befe-4a45-9b5d-42c4852d4240"
>
</StructureElement></Structure><Structure
 Default=""
 X="620"
 Y="450"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoredBaliseStruct"
 Guid="3824a971-a03f-4913-9be2-55ee942cddf9"
>
<Comment>Structure containing a single telegram received from a balise and a flag to see if the balise was missed.</Comment>
<StructureElement
 TypeName="Messages.EUROBALISE.Message"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Telegram"
 Guid="ad863b60-3a1e-43a1-a9ee-a490ad1fdd90"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Missed"
 Guid="b1ba2f94-ae29-4f78-a71b-31f85e56796a"
>
<Comment>This variable indicates whether the Telegram was 
a) received from the trackside or 
b) is just a placeholder for a missed balise.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="StoredBaliseStruct"
 MaxSize="8"
 Default="[]"
 X="620"
 Y="360"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroupMessagesCol"
 Guid="e78a099b-8642-4076-a591-f69bc658f42c"
>
<ReqRef
 Id="8147a385-c93e-43f4-9eb0-fab4bf63ca62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc0e4b52-3342-412a-bfc9-83bf799fc2a8"
>
</ReqRef><Comment>List of balise telegrams representing a single balise message.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="BaseTypes.Length"
 Default=""
 X="390"
 Y="80"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LRBGLocationAccuracy"
 Guid="82c93aa7-24c7-4c34-ba73-364413bf02cc"
>
<ReqRef
 Id="a2fa811d-bd40-4622-98d9-2f0c4c579f2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc89be93-3405-48a6-887a-33c24565b1eb"
>
</ReqRef><ReqRef
 Id="9e4c5ab1-4454-4b08-9df1-666cf07b17ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e200c2b-feaf-4c1d-be5f-51968f9267ca"
>
</ReqRef><ReqRef
 Id="7e712341-8fcf-474b-a20b-d3dc889cf08a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40808470-300c-476e-a373-ad623146adf8"
>
</ReqRef><Comment>Gives the value of the Location Accuracy of the LRBG.</Comment>
<Cases>
<Case
 Name="Linking available"
 Guid="66f967b2-9ea2-4470-830c-40f7d1dc1e60"
>
<Expression>LRBG.LRBG().LocationAccuracy</Expression>
</Case></Cases>
</Function><Function
 Type="PositionStruct"
 Default=""
 X="610"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AntennaPositionFromOdometry"
 Guid="f0f2c6b2-53e3-4d96-808e-01b568084dd7"
>
<Comment>Provides the position from the Odometry.</Comment>
<Cases>
<Case
 Name="Always"
 Guid="d615b552-1523-4e37-9f1f-bfd4a9de8af3"
>
<Expression>PositionStruct
{
  OverReadingAmountOdo =&gt; Odometry.Accuracy.D_ora,
  Position =&gt; Odometry.NominalDistance - ActiveAntennaPosition,
  UnderReadingAmountOdo =&gt; Odometry.Accuracy.D_ura
}</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="390"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGOrientation"
 Guid="6c6b5376-aa00-4f46-84a0-6aece30174c1"
>
<ReqRef
 Id="7ea29f51-073f-4293-8a53-6d777b781609"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73650424-456d-477d-8520-14defc2c76e1"
>
</ReqRef><ReqRef
 Id="5a70895f-ceeb-4c8f-9e52-f3de05ca5a83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5055a91b-b546-40b9-aff1-97d113fb2d83"
>
</ReqRef><ReqRef
 Id="d1944e18-a016-48f1-9817-9a6c415e92e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dd8853d-c545-494f-8d2a-ffa6e804b314"
>
</ReqRef><ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebdbf471-edcb-4fd7-82b6-33a5467a7cc7"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6381244e-1f94-41cf-972e-3398b62d9f6c"
>
</ReqRef><ReqRef
 Id="c616e51b-8db4-4b6a-b957-18b0ff09c9ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1413138-5cd9-418b-a0aa-4b80ca1d37cc"
>
</ReqRef><ReqRef
 Id="bd668bbe-6aea-492e-a1bb-5683e651c453"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74e7d8e3-1e40-4adc-a496-ff16c2ed3f00"
>
</ReqRef><ReqRef
 Id="84a3e716-7b2f-4eb0-93b4-872e90faf619"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25440d84-0718-4e57-a466-afcf31a548bb"
>
</ReqRef><ReqRef
 Id="24a635be-ba49-419a-8cc5-c37817d23f66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24b38875-6843-435e-8abf-f44eb7277d60"
>
</ReqRef><Comment>Returns the orientation of the current balise group</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="91c5b44a-788e-4658-be9b-763fdfa5f7e4"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Fewer than two balises in the balise group, valid linking information"
 Guid="f8c55f68-ab50-4409-988b-f66afe23e264"
>
<PreConditions>
<PreCondition
 Guid="682a9ec8-f37d-4d87-8dd6-9a4ca0648099"
>(COUNT X IN aBaliseGroup | NOT X.Missed) == 1</PreCondition><PreCondition
 Guid="3f4762dd-f337-493a-927f-479853f08788"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier== GetNID_BG( aBaliseGroup )</PreCondition><PreCondition
 Guid="99f3dd17-d0be-4689-b9ec-5dfc9925b30e"
>Kernel.Mode not in [ModeEnum.SL, ModeEnum.PS, ModeEnum.SH]</PreCondition></PreConditions>
<Expression>BTM.Linking.CurrentLinking().Orientation</Expression>
</Case><Case
 Name="Two balises stored, N_PIG_1 lower than N_PIG_2"
 Guid="ae25aa1f-71a4-4d87-9b56-5ec6680f6877"
>
<Comment>This case covers the situation where the first encountered balise in the group was missed and the direction is nominal.</Comment>
<PreConditions>
<PreCondition
 Guid="5c1a408b-2831-4d4c-9008-3db03c567c80"
>(COUNT X IN aBaliseGroup | NOT X.Missed) &gt; 1

  AND  

(FIRST Balise IN aBaliseGroup | NOT Balise.Missed).Telegram.N_PIG &lt; (LAST Balise IN aBaliseGroup | NOT Balise.Missed).Telegram.N_PIG</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Two balises stored, N_PIG_1 higher than N_PIG_2"
 Guid="7c70fdb1-9f62-4151-b0ad-78ecf220a67e"
>
<PreConditions>
<PreCondition
 Guid="20d361f2-70ef-4a67-9c01-5e11cd5cfb34"
>(COUNT X IN aBaliseGroup | NOT X.Missed) &gt; 1

  AND  

(FIRST Balise IN aBaliseGroup | NOT Balise.Missed).Telegram.N_PIG &gt; (LAST Balise IN aBaliseGroup | NOT Balise.Missed).Telegram.N_PIG</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e8c38925-da03-4f17-a72e-f1d5e4ff496b"
>
<Comment>Default case.</Comment>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="500"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ToBeHandled"
 Guid="5784ea65-414e-4412-8db7-bad78ec32edf"
>
<ReqRef
 Id="4e07491f-516f-4494-87d7-96cf0ecef9d8"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="92c95d15-1f94-473b-beb0-144ef51692e3"
>
</ReqRef><ReqRef
 Id="55ed41db-cdd9-49da-80a2-b84fd2b4c659"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="3fdc02d1-8ed0-4ea8-9f3f-78aada4d9680"
>
</ReqRef><ReqRef
 Id="76b98769-31ac-4281-b308-196dd999701e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04392093-2d30-49bf-bab3-e552205ef532"
>
</ReqRef><ReqRef
 Id="07d70a88-af4e-458c-871b-740e171d9640"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f95425dc-51fe-4ebc-ab14-0446448cb22e"
>
</ReqRef><Comment>This function indicates whether a single balise needs to be processed. Only the second of a pair of duplicate balises is handled.</Comment>
<Parameters>
<Parameter
 Type="StoredBaliseStruct"
 Name="aMessage"
 Guid="97fc975a-3d6b-44b1-b594-1bcd610e2aac"
>
</Parameter><Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="10a6a3d7-1bd3-4630-ade2-1c643dc6a63c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Balise missed"
 Guid="dd97cafd-8e4e-4dfe-8500-730851203e45"
>
<PreConditions>
<PreCondition
 Guid="2a76b638-b491-466d-89cd-23598dcaaa9f"
>aMessage.Missed</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Not a duplicate"
 Guid="15fa57fb-edc6-41e1-832c-27b0fbd51ee6"
>
<PreConditions>
<PreCondition
 Guid="de88cb07-520d-456f-8abd-c1ba1bb8184f"
>aMessage.Telegram.M_DUP == Messages.M_DUP.No_duplicates</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Duplicated balise, other one contains Default balise information"
 Guid="ad404ecc-daf4-4519-994b-21c75904ee01"
>
<PreConditions>
<PreCondition
 Guid="2677fec2-663d-4234-881b-e5d1fd11258e"
>aMessage.Telegram.M_DUP != Messages.M_DUP.No_duplicates
  AND  
(
NOT THERE_IS packet1 IN aMessage.Telegram.Sequence1 |
    Available(packet1.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)
  AND  
(
THERE_IS packet2 IN Packets.DuplicateBalise(
      Balise =&gt; aMessage.Telegram,
      aBaliseGroup =&gt; aBaliseGroup
  ).Telegram.Sequence1 |
    Available(packet2.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Second of a pair of duplicates"
 Guid="8d9e8a5a-1f5f-4770-a887-da6bfa468479"
>
<PreConditions>
<PreCondition
 Guid="96082ab6-fc3c-4a7b-bdbb-3f0531f8b32d"
>aMessage.Telegram.M_DUP != Messages.M_DUP.No_duplicates
  AND  
(
NOT THERE_IS packet IN aMessage.Telegram.Sequence1 |
    Available(packet.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)
  AND  
Before(
    ExpectedFirst =&gt; Packets.DuplicateBalise(
        Balise =&gt; aMessage.Telegram,
        aBaliseGroup =&gt; aBaliseGroup
    ),
    ExpectedSecond =&gt; aMessage,
    Collection =&gt; aBaliseGroup
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Duplicated balise missed"
 Guid="b637ca75-2fc2-4610-b628-97ee8ac7fa15"
>
<PreConditions>
<PreCondition
 Guid="490dd201-2515-4ce7-874d-e58c06cec244"
>aMessage.Telegram.M_DUP not in [Messages.M_DUP.No_duplicates, Messages.M_DUP.Spare]
  AND  
Packets.DuplicateBalise(
    Balise =&gt; aMessage.Telegram,
    aBaliseGroup =&gt; aBaliseGroup
).Missed</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="146db196-7b2e-4077-81cd-72cea6a41389"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="610"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="AntennaDistance"
 Guid="71e1a1a9-1a82-4b22-9f19-0ead55a18d7e"
>
<ReqRef
 Id="858a955b-8eb5-4eac-b52e-49723ffd3d9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7904a906-de17-49e4-817b-3ae665deff46"
>
</ReqRef><Comment>Gives the distance between the safe front end of the train and the active antenna.</Comment>
<Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="aPointOfInterest"
 Guid="b6c13f39-419b-454b-b453-09051b6ed9cd"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="d62cbab2-876b-43a9-b9ef-9ab243cac385"
>
<Expression>Kernel.TrainPosition.FrontEndPosition ( aPointOfInterest ) - BTM.ActiveAntennaPosition</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="500"
 Y="20"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="IsLocationReference"
 Guid="ab39a627-bbab-4874-84a7-53e629e0f391"
>
<ReqRef
 Id="612e5c65-65af-4727-a4f9-ce73fbd5f0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="911b5162-095f-4bae-8e70-ddfa368528e5"
>
</ReqRef><ReqRef
 Id="77e74b63-e8c9-42d5-bcf6-0e5423c75697"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f91604a0-0395-4097-ab75-6ec48eee4f9f"
>
</ReqRef><Comment>Holds the location reference of the current BG</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="3c988b8a-14ee-49a6-8539-4e532d1d5fbf"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="First balise in group"
 Guid="ff32a53d-0091-42cc-aef2-99be365d973e"
>
<PreConditions>
<PreCondition
 Guid="7f978365-dc1d-4041-a1ab-d564fca4dfd3"
>Message.N_PIG == 0</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Second balise is duplicate of first"
 Guid="6e3e6161-6ce0-49d6-a44a-e7062b072fc4"
>
<PreConditions>
<PreCondition
 Guid="a02eb7ff-a0d5-41f1-87d0-6c54c1e7ae57"
>Message.N_PIG == 1</PreCondition><PreCondition
 Guid="2faa6422-23f7-41c4-85fb-699162e5f164"
>Message.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition><PreCondition
 Guid="0841abe9-feff-42b3-bd02-a00031e66078"
>NOT ( THERE_IS X IN BTM.CurrentBaliseGroup | (X.Telegram.N_PIG == 0) )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="cc8cac42-85a1-48e5-b8ad-78149207795f"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="FullBGReceived"
 Guid="8029ace7-da32-4bf8-a69c-b1628b25a1b4"
>
<Comment>Indicates whether the current balise group is complete.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="a7563335-fbf8-4040-8007-0f6f0a961c04"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No balises received"
 Guid="fb916540-cc9c-413b-a96e-32ba97879e62"
>
<PreConditions>
<PreCondition
 Guid="00672616-92f1-4252-a932-5a2168b6a700"
>aBaliseGroup == []</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="All balises received"
 Guid="35c3234e-81f9-4164-9fba-d17541b8e422"
>
<PreConditions>
<PreCondition
 Guid="ffbc3619-3161-4287-b261-cc5320a760c5"
>(COUNT X IN BTM.CurrentBaliseGroup) == MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL + 1</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="First balise(s) missed, nominal direction"
 Guid="3ac07160-83d4-45d5-ba75-63b82db2221a"
>
<PreConditions>
<PreCondition
 Guid="e9da31c6-973c-49aa-9e61-b5d14d2b5ebc"
>BGOrientation(CurrentBaliseGroup) == OrientationEnum.Nominal
  AND  
MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG == MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="First balise(s) missed, reverse direction"
 Guid="74a01db0-056e-448a-98b2-080ae42b2a15"
>
<PreConditions>
<PreCondition
 Guid="c215fd2a-7ce8-464f-9671-48c87c63b97f"
>BGOrientation(CurrentBaliseGroup) == OrientationEnum.Reverse
  AND  
MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG == 0</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="f008b546-138f-49b4-8f75-d24d3fc0c073"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.Message"
 Default=""
 X="390"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedReceivedMessage"
 Guid="7d7eed3f-34d0-4860-b21c-d1c2bf916454"
>
<Comment>This function returns the translated version of the received balise message. Note that the BTM struct Message is left unchanged. Returns EMPTY if both SystemVersion are empty.</Comment>
<Parameters>
<Parameter
 Type="Messages.BTM.Message"
 Name="aMessage"
 Guid="9cc39e95-c5d2-4610-bd5e-cc9a4bb97177"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SystemVersion2"
 Guid="9d81f325-89f9-4d5a-a705-b3cbf9a2bb84"
>
<PreConditions>
<PreCondition
 Guid="e01bb44f-8f18-4f93-b8a3-eb4bdea23f23"
>Available( aMessage.SystemVersion2)</PreCondition></PreConditions>
<Expression>aMessage.SystemVersion2</Expression>
</Case><Case
 Name="SystemVersion1"
 Guid="7962ecd0-6df0-4778-a185-77e6b15e8b77"
>
<PreConditions>
<PreCondition
 Guid="add78aea-b85c-4eb5-9db0-97b08150a845"
>Available(aMessage.SystemVersion1)</PreCondition></PreConditions>
<Expression>VersionManagement.Translation.UpdatedBaliseMessage(aMessage.SystemVersion1)</Expression>
</Case><Case
 Name="Default"
 Guid="467845c9-3e20-4eee-bd0d-abebfcc8f698"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_C"
 Default=""
 X="610"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="GetNID_C"
 Guid="a779da71-ea4f-4928-94bf-5ce1bf28727d"
>
<Comment>Returns the country identifier of the provided BG.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="c1ef3d6e-8469-4245-b9fd-0e0aebd7cc6c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="8bfc56b0-18c2-4c57-b931-7b6ff9a6b972"
>
<Expression>(FIRST X IN aBaliseGroup).Telegram.NID_C</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_BG"
 Default=""
 X="500"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="GetNID_BG"
 Guid="a18ae104-63f4-481a-aae7-eaa4c7372908"
>
<Comment>Returns the BG identifier of the provided BG.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="c87ef8e7-b45d-4b34-8230-451879ce11e1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="e10a60d7-5952-474f-b24e-55b9c3520f98"
>
<Expression>(FIRST X IN aBaliseGroup).Telegram.NID_BG</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="610"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DistanceFromReference"
 Guid="0ae663a7-8b68-4ccb-8aff-35f888ff9ca9"
>
<ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="099040e1-2417-4439-b8c4-2173bfa4f717"
>
</ReqRef><Comment>The distance that the train has covered from its current location reference.
Used when a new BG is received, the parameter aLinkingUsed indicates whether to reposition the train based on the received linking information or whether to use the odometry distance.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="aLinkingUsed"
 Guid="83fb0854-ba5f-4f0e-bc60-2fc30e474183"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Linking used - repositioning information - nominal orientation"
 Guid="da4871b3-f972-49c1-9cae-054736dcef35"
>
<PreConditions>
<PreCondition
 Guid="7fafc1aa-203c-4535-bc00-e69ab34d1cbf"
>aLinkingUsed</PreCondition><PreCondition
 Guid="002136ed-5249-4a30-a4d8-f566e91e7805"
>Linking.CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition><PreCondition
 Guid="476b3d4e-c151-4e2a-a07d-95c91eb20085"
>Kernel.TrainPosition.Orientation.TrainOrientation() == OrientationEnum.Nominal</PreCondition></PreConditions>
<Expression>BGLocationReference.Position.Position - Kernel.ReferenceLocation()</Expression>
</Case><Case
 Name="Linking used - nominal orientation"
 Guid="6a733c58-6ee4-4358-a5b5-d7771e02ee5d"
>
<PreConditions>
<PreCondition
 Guid="74979ccd-2860-4341-a7f9-50ba912f66c8"
>aLinkingUsed</PreCondition><PreCondition
 Guid="b3458eb3-f17b-4541-a2d5-a6a240ba22ce"
>Kernel.TrainPosition.Orientation.TrainOrientation() == OrientationEnum.Nominal</PreCondition></PreConditions>
<Expression>Linking.CurrentLinking().Distance</Expression>
</Case><Case
 Name="Otherwise - nominal orientation"
 Guid="6666be28-e39d-4e88-a92d-ec5dbfd8069b"
>
<PreConditions>
<PreCondition
 Guid="7ebe3a28-d23e-4088-9c66-4723c3d58b6f"
>Kernel.TrainPosition.Orientation.TrainOrientation() == OrientationEnum.Nominal</PreCondition></PreConditions>
<Expression>BGLocationReference.Position.Position - Kernel.ReferenceLocation()</Expression>
</Case><Case
 Name="Linking used - repositioning information - reverse orientation"
 Guid="86f03698-6975-46e0-8a51-8db598237aba"
>
<PreConditions>
<PreCondition
 Guid="6bbb65cf-76e4-45c8-982f-5b1521aac787"
>aLinkingUsed</PreCondition><PreCondition
 Guid="56ed62bf-7d4a-49f2-a074-947a5b33b6fc"
>Linking.CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition><PreCondition
 Guid="0ac6ad31-dde4-4d6c-a8c8-f2fe4dae9485"
>Kernel.TrainPosition.Orientation.TrainOrientation() == OrientationEnum.Reverse</PreCondition></PreConditions>
<Expression>Kernel.ReferenceLocation() - BGLocationReference.Position.Position</Expression>
</Case><Case
 Name="Linking used - reverse orientation"
 Guid="bc4b6a6b-a293-46a4-b892-460c6ab7de0e"
>
<PreConditions>
<PreCondition
 Guid="b1229cd7-3c34-47bd-9bc7-d5a7c6e6c7a3"
>aLinkingUsed</PreCondition><PreCondition
 Guid="917c33e3-f298-4d21-bef0-d519185fd4bd"
>Kernel.TrainPosition.Orientation.TrainOrientation() == OrientationEnum.Reverse</PreCondition></PreConditions>
<Expression>Linking.CurrentLinking().Distance</Expression>
</Case><Case
 Name="Otherwise - reverse orientation"
 Guid="4152b7bc-6d24-4853-af61-80305f73c691"
>
<PreConditions>
<PreCondition
 Guid="d44debb6-f03e-476d-a460-d332aa964821"
>Kernel.TrainPosition.Orientation.TrainOrientation() == OrientationEnum.Reverse</PreCondition></PreConditions>
<Expression>Kernel.ReferenceLocation() - BGLocationReference.Position.Position</Expression>
</Case><Case
 Name="Otherwise"
 Guid="5919fd04-0ec9-4dd1-99fe-b9ed89433c31"
>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="720"
 Y="80"
 Width="100"
 Height="50"
 Name="BaliseReadError"
 Guid="802a040c-307e-495a-a5c9-05b53f7ba580"
>
<ReqRef
 Id="5ebc8464-ea72-426f-9d36-3891fb49f575"
 SpecId="2218d057-3a1a-45e0-a1c9-ef26c3f85bc2"
 Guid="3e9d5fcf-ebca-45bf-8a67-ce3e6bb97302"
>
</ReqRef><Comment>Indicates that a balise read error should be reported</Comment>
<Cases>
<Case
 Name="Always"
 Guid="43bb182b-245e-4e20-b607-bc21da881507"
>
<Expression>InconsistentBaliseGroupReceived
  OR  
UnreadableBaliseReceived
  OR  
Linking.Supervision.LinkingError</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Length"
 Default=""
 X="720"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="GetBGLocationAccuracy"
 Guid="12ed50b8-3cd0-4a66-831d-167b47fd9fb7"
>
<ReqRef
 Id="7e712341-8fcf-474b-a20b-d3dc889cf08a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="277b2050-7207-41ce-b6c7-9617d7bac756"
>
</ReqRef><ReqRef
 Id="9e4c5ab1-4454-4b08-9df1-666cf07b17ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="07bd3b42-8fcd-40cc-88e8-d1255f232df3"
>
</ReqRef><ReqRef
 Id="a2fa811d-bd40-4622-98d9-2f0c4c579f2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bc99f1b6-6687-4c9b-8db5-5959026766a2"
>
</ReqRef><Comment>Provides the location accuracy of the provided BG.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="d5421a7a-cc46-45ec-b083-bc663225e9f0"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="BG linking information available"
 Guid="f7528158-4b87-45fd-8c9b-ab238d7f1260"
>
<PreConditions>
<PreCondition
 Guid="513aa180-a151-4d10-9094-a9f96c541667"
>(FIRST X IN BTM.Linking.Linkings).BaliseGroupIdentifier == GetNID_BG( aBaliseGroup )</PreCondition></PreConditions>
<Expression>(FIRST X IN BTM.Linking.Linkings).LocationAccuracy</Expression>
</Case><Case
 Name="Otherwise"
 Guid="42586bae-a26c-48e6-83c8-6cfb6984559c"
>
<Expression>BaseTypes.Length(Kernel.NationalValues.CurrentNV().DefaultLocationAccuracyOfABaliseGroup)</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="40"
 Y="350"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreBaliseGroupMessage"
 Guid="1da29f70-6313-47b9-9f90-b30088d4ec9f"
>
<ReqRef
 Id="7ea29f51-073f-4293-8a53-6d777b781609"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="963564c8-210c-4f35-a865-6a5933adacd1"
>
</ReqRef><ReqRef
 Id="122fc267-0025-4f6a-8684-93c445b0a545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c37b2a3b-9ec8-4d02-9c14-a37f33a76555"
>
</ReqRef><Comment>Stores the balise group message in the list of balise messages of the current balise group.
Do not store duplicate balise messages.
If all the messages of the current balise group have been received, calls HandleBaliseMessage() procedure to manage the information of the new BG.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="6d619eb8-4281-4eb5-8137-6433d0edf35c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Keep record of the time and position of the location reference"
 Guid="7e3f7eb7-4732-4b05-aee5-6838c06ed5c5"
>
<ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f89dfca-3c06-48c5-9856-722c6ae3d688"
>
</ReqRef><ReqRef
 Id="0d501890-d967-43e6-b663-c526a3371860"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92afe681-91f8-4fdf-99b8-fcd57aee9371"
>
</ReqRef><Comment>The time is used for the MA section time-outs</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Store the location reference"
 Guid="93775a88-0ffa-44f4-a42b-82fc8503f81f"
>
<PreConditions>
<PreCondition
 Guid="68fd0a29-085c-46b8-8d7a-13d05c0df54b"
>BTM.IsLocationReference ( Message =&gt; Message )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="97fe5801-fbb2-4588-b755-7418c4969256"
>BTM.BGLocationReference &lt;- BTM.LocationReferenceStruct{
    Position =&gt; AntennaPositionFromOdometry(),
    Timestamp =&gt; Kernel.DateAndTime.Now()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Keep note of missed balises"
 Guid="2bac6cbb-3616-40c8-a658-72f42fddb191"
>
<Comment>If some balises in the</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep note of missed balises"
 Guid="17b3e4af-63f3-4b16-93c8-efdcd0950260"
>
<ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="753bb071-f4c3-46b1-bb34-f966feff3684"
>
</ReqRef><ReqRef
 Id="5c440e26-b092-4abd-8105-dca981501e3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec10f95f-44ce-4e3c-9c1e-bc7fd6a9c1bc"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="f9563cb3-4a7d-4ec0-b982-8a989233cfc1"
>BTM.CurrentBaliseGroup != []

  AND  

Message.N_PIG != MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG + 1
  AND  
Message.N_PIG != MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG - 1</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add missed balises to list"
 Guid="c37a6131-48f8-4538-96f1-d0e80a225a25"
>
<Comment>If the received balise was not the next expected balise in the current group, the missed balise(s) will be added with the Missed flag.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation known"
 Guid="c801a564-49b2-4f3e-a03e-ffa9281add56"
>
<Comment>If the BG orientation is known (through linking) the missed balises are easy to fill in.</Comment>
<PreConditions>
<PreCondition
 Guid="f22d33c1-0c14-40e5-a78c-246730168bb4"
>BGOrientation(CurrentBaliseGroup) != OrientationEnum.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="30f9dad9-8438-4379-8738-fbb67c753a09"
>MissedBalises.FillMissedBalises()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation unknown, nominal direction"
 Guid="90f11a70-cd77-42cd-a2c3-c316e2bd1b6b"
>
<Comment>If the BG orientation is not known, but the N_PIG of the new balise is greater than the N_PIG of the previous one, the orientation of the BG is nominal and the missing balises can be added.</Comment>
<PreConditions>
<PreCondition
 Guid="57f49648-3125-475b-b122-ad0fd95f36b3"
>Message.N_PIG &gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add a second balise to CurrentBaliseGroup"
 Guid="9d23acde-90a3-4baf-af77-c13fd881958b"
>
<Comment>Add a second balise to the current balise group so that the orientation of the group is defined.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add one balise in the nominal direction"
 Guid="f458f4ed-c6a0-4dc3-8db5-0298fc6bc2ee"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="940d96d7-c1a0-457c-93f1-24eef2f82615"
>INSERT
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_UPDOWN,
        M_VERSION =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).M_VERSION,
        Q_MEDIA =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_MEDIA,
        N_PIG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG + 1,
        N_TOTAL =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL,
        M_DUP =&gt; Messages.M_DUP.No_duplicates,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_C,
        NID_BG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_BG,
        Q_LINK =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Fill other missing balises"
 Guid="3aa0e4a6-721c-4b7e-abd6-43e494b29bd2"
>
<Comment>Fill any otehr missing balises.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill Missed Balises"
 Guid="f2d47f76-4fae-4442-b49f-673b43f46a82"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="7dd2548f-9ba5-42c0-94dc-1aee74203bd0"
>MissedBalises.FillMissedBalises()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation unknown, reverse direction"
 Guid="d638d8bb-34d9-4ba6-b108-1e02673528c3"
>
<Comment>If the BG orientation is not known, but the N_PIG of the new balise is less than the N_PIG of the previous one, the orientation of the BG is reverse and the missing balises can be added.</Comment>
<PreConditions>
<PreCondition
 Guid="52b1a78c-1123-450e-b6aa-4403d2641216"
>Message.N_PIG &lt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add a second balise to CurrentBaliseGroup"
 Guid="477aa7e5-2d35-428f-bde3-7e87b96fc4d2"
>
<Comment>Add a second balise to the current balise group so that the orientation of the group is defined.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add one balise in the nominal direction"
 Guid="22404532-dd16-4337-a6ed-23d624a25d7d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ceff6272-909c-4ca3-9ce6-7df72fb29734"
>INSERT
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_UPDOWN,
        M_VERSION =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).M_VERSION,
        Q_MEDIA =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_MEDIA,
        N_PIG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG - 1,
        N_TOTAL =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL,
        M_DUP =&gt; Messages.M_DUP.No_duplicates,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_C,
        NID_BG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_BG,
        Q_LINK =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Fill other missing balises"
 Guid="d29af369-e613-40d6-be03-cd08c7e44853"
>
<Comment>Fill any otehr missing balises.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill Missed Balises"
 Guid="a4628bc2-1d3a-4f1c-b9c2-903235212585"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f48e875d-60fc-4393-9404-d6e475ce83ec"
>MissedBalises.FillMissedBalises()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store message"
 Guid="e7fd0848-9ab3-4368-b4b7-c0c0cd1f728e"
>
<Comment>Stores the received information into the corresponding variable.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store message"
 Guid="74dfa027-a200-477e-af85-e70bf20148b1"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="989096bd-3294-40f5-81b7-908279de9c8e"
>INSERT 
BTM.StoredBaliseStruct
{
    Telegram =&gt; Message,
    Missed =&gt; False
}

IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Keep position of the balise"
 Guid="1ec3b0d7-6c60-465f-87b2-a26fb677f799"
>
<Comment>Stores the position of the first balise of that balise group in order to be used later to compute the position of the new LRBG (in case that balise group will become the LRBG).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Keep position of the balise"
 Guid="62e6627c-c2b6-4ac1-88e4-ffa9aa764485"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2b0bea2f-701c-4d39-b9fb-f12ed87bc4e4"
>MissedBalises.PrevBalisePosition &lt;- Odometry.NominalDistance</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="40"
 Y="410"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleMessage"
 Guid="48414d07-b40a-4ad6-be9e-77b423eb55fe"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="317e2736-b0b7-47c7-9014-449ecf227483"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8daf8d84-d2f5-4294-83a6-c6e1627e65e8"
>
</ReqRef><ReqRef
 Id="da9f0886-9eda-4e06-91e4-41094a7a488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f95c709-7493-47f2-98df-0334afbd4931"
>
</ReqRef><ReqRef
 Id="0b314991-9ddf-4e48-bbbc-ef8083339ea7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11ff5416-6eda-4aae-8df8-3e593a2a8e13"
>
</ReqRef><ReqRef
 Id="cc65b517-2625-4019-bbbf-8b6f317ae84f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6e00fab4-71f5-4820-8309-f0d77820a529"
>
</ReqRef><ReqRef
 Id="2a937786-e263-4ac1-b082-05a22e1946c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c934dd4-1ead-4830-8091-00f6bef21f1e"
>
</ReqRef><Comment>Movement authority has to be considered after all other packets of a message have been processed, since some preconditions to accept MA can be transmitted in the same message.

The parameter DistanceFromLRBG is needed for the case when the handled BG will become the new LRBG. All stored distances in the EVC will need to be updated by this distance.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="9d15c2b1-71b7-411b-ab48-de43b02e0889"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Accept new LRBG"
 Guid="06a5b621-57e9-427f-a37d-7bd25694070c"
>
<Comment>If the BG is a valid LRBG candidate, accept it as the new LRBG and update stored distances accordingly.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Accept new LRBG"
 Guid="dd2a3189-bf7c-4f77-87b4-c6fe12c32c97"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9de56851-4f02-42d1-908d-a7d166ed8d48"
>LRBG.StoreBGLocation(aBaliseGroup)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle balise message contents"
 Guid="a4f87515-046e-4620-b2a7-8754b9514ddc"
>
<Comment>If the message is consistent, accept the information stored in it.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="BG is consistent"
 Guid="385c1e4d-686d-4cc1-9bc4-e533fb51231a"
>
<ReqRef
 Id="a28fa2ad-f49b-49e3-b6c9-a96b78f87074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b293436-1077-4f3f-aac1-ce45c3077e00"
>
</ReqRef><ReqRef
 Id="2ae792ac-3c8b-4e81-a0b9-fcf10ab3dbdc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9b79b99-f118-4318-a02c-0bcbb5f75be7"
>
</ReqRef><Comment>Handle infill and non-infill packets if the message is consistent.</Comment>
<PreConditions>
<PreCondition
 Guid="8a814b2e-b51c-4ac6-bab1-5cc0fa14f4f7"
>MessageConsistency.IsConsistent( aBaliseGroup )</PreCondition><PreCondition
 Guid="4018c3e8-4735-4dee-9448-f1974ecaeef9"
>Linking.Supervision.ConsiderBaliseMessage( aBaliseGroup )</PreCondition><PreCondition
 Guid="0e5497d6-bf54-49ff-b2f8-b67da4304cac"
>NOT Kernel.VirtualBaliseCover.IgnoreBG(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Handle non-infill packets"
 Guid="44cdb1c8-4513-49f0-ba2f-c9be84c73dcf"
>
<Comment>Handle non-infill packets of a consistent message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 Name="Handle non-infill packets"
 Guid="026cf257-7e72-44d5-bf0a-8a78a5f02ad5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="3d481a20-2d80-4cf9-a8c0-967a6519da7a"
><Comment>Non-Infill packets</Comment>
Packets.HandleConsistentMessage(
    aBaliseGroup =&gt; aBaliseGroup,
    selectInfillPackets =&gt; False,
    aDistance =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() 
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Handle infill packets"
 Guid="d034cf04-641f-4f41-9197-f8a57b7631b9"
>
<ReqRef
 Id="b997b70b-691d-427f-8512-361a510200ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="df17bc02-6413-448d-81fb-0437b31311fb"
>
</ReqRef><ReqRef
 Id="041247c0-323f-4ba8-8e1f-5b5a3232d83b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3c9c8069-dc3d-45a2-adf3-7360d58e8e0f"
>
</ReqRef><ReqRef
 Id="f06259b6-d59f-4a89-bfb0-45036e0d87bb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9add16de-ffe3-4e16-8636-f71e244b35cc"
>
</ReqRef><ReqRef
 Id="082b9d97-81b9-4995-87a2-07e6e31bd2d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f8fdc7e-2db8-4e8e-b32b-7fc20f1e97dd"
>
</ReqRef><ReqRef
 Id="299e44cd-9a5e-4f38-8721-bad782668787"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1f52ff4-d47d-47eb-a057-4e7869e673f6"
>
</ReqRef><ReqRef
 Id="672b9145-06ca-49f0-b871-3a074024a15a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="069d5d00-1195-4706-ba43-c13116930875"
>
</ReqRef><ReqRef
 Id="787a1a8f-0541-405d-a3f2-4e318b090e90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="12973630-2100-4590-a024-a5abae2c0967"
>
</ReqRef><ReqRef
 Id="5f3132e8-fb36-491a-b7e8-7e237d362383"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67430e31-2ada-4604-8f01-838ea93b9996"
>
</ReqRef><Comment>Handle infill packets of a consistent message if conditions for such a handling are satified (mode, level, linked infill reference).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 Name="Handle infill packets"
 Guid="e33a0c94-6acb-49c5-971d-b8071b957e64"
>
<ReqRef
 Id="df7e22ad-c4c2-425f-a515-c1a3f4424969"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="62da968a-e65b-4c9c-93b6-fee2f99c0680"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="3ce39148-512f-4fcb-8130-eaded6856317"
>Kernel.Infill.AccepBTMtInfill()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="176cf6e5-9522-4e29-bad2-45603dfa58c9"
><Comment>Infill packets</Comment>
Packets.HandleConsistentMessage(
    aBaliseGroup =&gt; aBaliseGroup,
    selectInfillPackets =&gt; True,
    aDistance =&gt; Infill.DistanceToInfillReference()
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Check NID_C for virtual balise covers"
 Guid="6e4770b6-c0a2-4ce4-9380-a24249ddd39e"
>
<ReqRef
 Id="c9d51e90-7f7e-4c3e-b330-dec4e7a4499d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8afb2b69-510a-4026-b3b0-ec91eaf056c5"
>
</ReqRef><ReqRef
 Id="319c077a-b554-46e1-b263-636a65b5e1e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ace5743-f1e9-4397-9061-b4704b4068e2"
>
</ReqRef><Comment>Once the message has been decoded, check whether the train has entered a new region. If so, all the old VBCs are deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 Name="Check NID_C for virtual balise covers"
 Guid="8f30cb2e-2858-4669-a0e6-d04d684d41b5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2e1d9662-6036-4897-a228-37c00a44fe2b"
>Kernel.VirtualBaliseCover.CheckNID_C( GetNID_C(aBaliseGroup) )</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="The BG is not consistent"
 Guid="8324c201-d04f-4c0b-9379-3944df24ac68"
>
<ReqRef
 Id="a28fa2ad-f49b-49e3-b6c9-a96b78f87074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be118ae9-0939-42f2-9a02-3ef87557b2c3"
>
</ReqRef><ReqRef
 Id="d9694f89-1162-4ba5-a82c-a37e0df77929"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e65c1c4-1767-47ac-96b4-b80ee235fab2"
>
</ReqRef><Comment>Handle reception on an inconsistent BG.</Comment>
<PreConditions>
<PreCondition
 Guid="12a521ef-5e50-4878-b2ee-380a24f8e393"
>NOT Kernel.VirtualBaliseCover.IgnoreBG(aBaliseGroup)</PreCondition><PreCondition
 Guid="a88a57c4-c2bb-4053-9f2f-fdd8d93ca6f2"
>NOT MessageConsistency.IsConsistent( aBaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e4a164cf-1029-4a57-86c8-e867cb3d9497"
>MessageConsistency.InconsistentBGReceived( aBaliseGroup )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle linking"
 Guid="7681408a-254e-4253-b89f-a000390d57d7"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a81f47b-fffd-4f82-a51b-feb367894901"
>
</ReqRef><ReqRef
 Id="aaa581cb-18a1-43c9-861e-43c4d76ec1fe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="981f6b86-8da5-488f-910c-0b087133cfe3"
>
</ReqRef><Comment>Check the linking consistency, update the linking information and apply the linking reaction if there is a linking consistency error.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle linking"
 Guid="69e81906-e8b8-49ca-a44b-59f593258d7b"
>
<PreConditions>
<PreCondition
 Guid="27f4db94-b15e-406b-9871-3ff2dc472b4b"
>Linking.BGIsLinked( aBaliseGroup )</PreCondition><PreCondition
 Guid="5bb87d7c-3388-4c36-985b-5f8ff9cf5425"
>Linking.LinkingApplicable()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="88417e53-19d1-45f0-af38-2c175e4fbab2"
>Linking.RAMS.HandleRAMSFunctions(aBaliseGroup)</Action><Action
 Guid="5cefc902-112b-4fb7-9693-d3dbfb3583ff"
>Linking.Supervision.HandleLinkingSupervision(aBaliseGroup)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Length"
 DefaultValue="0.0"
 VariableMode="Constant"
 X="390"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGLocationDetectionError"
 Guid="e97a89af-3348-47eb-8fa4-8e19e66b5278"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a1dc460-abb3-4c24-8dd5-8632271e5b79"
>
</ReqRef><ReqRef
 Id="29095085-0fb7-4b73-9d32-ae4ead9cd37e"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="57948d85-1356-4bc4-b9c8-e84ed230ec71"
>
</ReqRef><Comment>This variable represents the error in detection of balise group location by the train.</Comment>
</Variable><Variable
 Type="BaliseGroupMessagesCol"
 DefaultValue="[]"
 VariableMode="Internal"
 X="620"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBaliseGroup"
 Guid="eb904a47-339a-4e18-b6b4-c87384133417"
>
<Comment>This variable holds the messages from the current balise group until the complete balise group has been encountered</Comment>
</Variable><Variable
 Type="BTM.LocationReferenceStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="510"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="BGLocationReference"
 Guid="c9196377-2261-4314-9003-09ebf1a43606"
>
<ReqRef
 Id="612e5c65-65af-4727-a4f9-ce73fbd5f0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6d606f3-70ac-4470-951d-f4420bd3bc38"
>
</ReqRef><ReqRef
 Id="77e74b63-e8c9-42d5-bcf6-0e5423c75697"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="000ae04c-6645-4522-ac18-7bc3b854db77"
>
</ReqRef><ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3fb7efa-a924-4440-b381-37abe32d0b78"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af03fb9a-b107-46cb-96a0-b6f77d0c0dd6"
>
</ReqRef><Comment>This is the position of the first balise (N_PIG == 0) in the balise group</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="280"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ActiveAntennaPosition"
 Guid="dff8c2aa-be92-4d2d-8c31-3afdce4eea69"
>
<ReqRef
 Id="858a955b-8eb5-4eac-b52e-49723ffd3d9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9644885b-91cf-4cf0-af4c-9addbcba8776"
>
</ReqRef><Comment>Distance between the front end of the train and the active Eurobalise antenna. We assume that ActiveAntennaPosition &gt; 0.</Comment>
</Variable><Variable
 Type="Messages.BTM.Message"
 DefaultValue="Messages.BTM.Message
{
  SystemVersion2 =&gt; EMPTY, 
  SystemVersion1 =&gt; EMPTY, 
  BitField =&gt; &apos;&apos;
}"
 VariableMode="InOut"
 X="270"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Message"
 Guid="1718ba3c-1f2d-488c-bcc0-2bc18b4a3118"
>
<ReqRef
 Id="8147a385-c93e-43f4-9eb0-fab4bf63ca62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6afe7006-60ac-439e-bf42-1ee96a969e00"
>
</ReqRef><ReqRef
 Id="59fea6c8-0c78-47db-a58a-5de75ba1552b"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="f770e0b3-3697-4c32-8338-161d11649a23"
>
</ReqRef><Comment>This variable holds the balise message to be processed.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="390"
 Y="390"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="UnreadableBaliseReceived"
 Guid="0eead242-4994-413b-a5ca-69af5e6a5c87"
>
<ReqRef
 Id="2775cdfc-7d3f-4adc-b431-79d473f86272"
 SpecId="2218d057-3a1a-45e0-a1c9-ef26c3f85bc2"
 Guid="f7dc8f08-dee2-4f77-a76d-d64e820b6e2d"
>
</ReqRef><ReqRef
 Id="21600e54-3c0f-4546-97fb-88261e491c24"
 SpecId="2218d057-3a1a-45e0-a1c9-ef26c3f85bc2"
 Guid="1a42526c-4062-4825-95b2-ab928923e1f6"
>
</ReqRef><ReqRef
 Id="573a4929-1cc3-465b-bd3c-de9f85841744"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2630071e-d0b9-4147-9f6c-4f8f6e01094d"
>
</ReqRef><ReqRef
 Id="c431121f-eb76-44c2-8d1e-37d182affa45"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10e7419d-3501-4ab0-bf16-8f9e387e77be"
>
</ReqRef><Comment>Indicates that an unreadable BG was passed.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="280"
 Y="390"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InconsistentBaliseGroupReceived"
 Guid="b98c9f14-49ce-48c7-a0ff-b5004fe8aebb"
>
<ReqRef
 Id="2775cdfc-7d3f-4adc-b431-79d473f86272"
 SpecId="2218d057-3a1a-45e0-a1c9-ef26c3f85bc2"
 Guid="27fa32d9-43c0-498b-96ef-4e8261157d04"
>
</ReqRef><ReqRef
 Id="21600e54-3c0f-4546-97fb-88261e491c24"
 SpecId="2218d057-3a1a-45e0-a1c9-ef26c3f85bc2"
 Guid="3deac8ee-cd8f-40d8-8668-c5f5171ccdbf"
>
</ReqRef><ReqRef
 Id="573a4929-1cc3-465b-bd3c-de9f85841744"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e72600f-de00-4caf-954a-5bbbb3c8d116"
>
</ReqRef><ReqRef
 Id="c431121f-eb76-44c2-8d1e-37d182affa45"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2cdbbdd0-da7b-459b-86ad-08649fb017f6"
>
</ReqRef><Comment>Indicates that an inconsistent BG was received in this cycle.

TODO: functionnalize this</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Verification"
 X="40"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Incomplete balise group received"
 Guid="898a6047-388a-4c9c-85e6-9dade9e6c758"
>
<ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3c391b3-dbad-4555-ae62-bae39fd7cfa2"
>
</ReqRef><ReqRef
 Id="bb8f4e12-123f-4746-81d4-bd86e68fad6b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2fa68c28-14b8-43b1-91c9-6e1043f1429b"
>
</ReqRef><Comment>If the on-board receives a balise telegram of a balise group different from the currently handled balise group, the current balise group is considered as incomplete.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Incomplete balise group received"
 Guid="dcd23c6f-268e-49a2-85cf-2797f253976c"
>
<PreConditions>
<PreCondition
 Guid="95d3af00-daf2-474d-a7c2-53f8614e06c6"
>Available ( BTM.UpdatedReceivedMessage(BTM.Message))</PreCondition><PreCondition
 Guid="ca2a5585-b8af-4d33-b11d-0f7a241172b0"
>(COUNT X IN BTM.CurrentBaliseGroup ) &gt; 0</PreCondition><PreCondition
 Guid="facbef4e-0427-43dc-8246-9424d20c4b03"
>BTM.UpdatedReceivedMessage(BTM.Message).NID_BG != (FIRST X IN BTM.CurrentBaliseGroup).Telegram.NID_BG</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c0bed554-3138-4c67-a342-dec6ad0a32dc"
>BTM.CurrentBaliseGroup &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="150"
 Y="270"
 Width="100"
 Height="50"
 Name="Clean up incorrect balises"
 Guid="619c913f-8fc6-4d93-9ad1-657ce8f052e7"
>
<ReqRef
 Id="21600e54-3c0f-4546-97fb-88261e491c24"
 SpecId="2218d057-3a1a-45e0-a1c9-ef26c3f85bc2"
 Guid="b883b50c-3863-4e65-8812-4e6cdf76889f"
>
</ReqRef><Comment>Sets flags indicating that an incorrect BG was received to False.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Set UnreadableBaliseReceived to False"
 Guid="36010244-9142-4e3e-b9f2-e42b542c5625"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="cebd66f8-8202-4350-a311-9b811c557fb8"
>UnreadableBaliseReceived &lt;- Boolean.False</Action><Action
 Guid="782d8ee4-0cee-4d4d-aef6-81e3ef46a8a2"
>InconsistentBaliseGroupReceived &lt;- Boolean.False</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clean up just received balise telegram"
 Guid="ee4e37bd-e7d3-4802-b5b2-6b3e452bada7"
>
<Comment>Clear the just received balise telegram</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear just received balise telegram"
 Guid="a8ee6f4c-df86-4dae-bbc4-c11eefa49fe5"
>
<PreConditions>
<PreCondition
 Guid="4132dda5-2120-4cda-bde2-a390d3213f78"
>Available ( Message.SystemVersion1 )
  OR  
Available(Message.SystemVersion2)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="aa76230d-c79f-456c-95ac-adda5c0403e8"
>Message.SystemVersion1 &lt;- EMPTY</Action><Action
 Guid="55b1daa4-5af4-4eac-af28-8e10152fc2c2"
>Message.SystemVersion2 &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear balises from complete current balise group"
 Guid="1bbbe851-ae1a-4e5c-9e11-431e590cf623"
>
<Comment>When the balises from the current balise group have been processed, clear its data</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear current balises from current balise group"
 Guid="9942d5a4-ca09-49f3-8cdd-781b0dc75e3e"
>
<PreConditions>
<PreCondition
 Guid="1815d0f4-a07e-4fde-b122-562327b7db22"
><Comment>This precondition is necessary since in some cases, e.g. during unauthorised reverse movement, balise messages may be refused.</Comment>
CurrentBaliseGroup != []
  AND  
( COUNT X IN BTM.CurrentBaliseGroup ) == MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL + 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="74d5488e-85d4-48e9-8de8-43a12dd4b955"
>BTM.CurrentBaliseGroup &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
