<NameSpace
 X="340"
 Y="190"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Image="5"
 Name="Odometry"
 Guid="eb49e898-2a38-43cf-82a0-17e52883a9ed"
>
<NameSpaces>
<NameSpaceRef
 Name="Converters"
 Guid="c81cac09-7dba-4187-b92d-d22b4f057292"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="370"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="OdometerAccuracyStruct"
 Guid="5626dc8f-4ab8-4d91-b8c7-355b0a1df7ac"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7c66f75-c2a1-44b4-ac6d-8403b6e4f469"
>
</ReqRef><Comment>Represents the odometer accuracy, updated after each odometer message reception.</Comment>
<StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 Name="D_ura"
 Guid="891591e2-663e-4eac-9f91-d680f255fe9c"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="58ca6303-6af7-4e07-9e7b-f3fe03362c3d"
>
</ReqRef><Comment>Distance under reading amount.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 Name="D_ora"
 Guid="ad3a5a5e-3432-4e70-8ba8-869fb8e26aa3"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94961b7e-3d8f-4ec6-a739-dacc99eb6251"
>
</ReqRef><Comment>Distance over reading amount.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Speed"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="V_ora"
 Guid="c0f8fdb2-f107-40dd-a8a9-354b55449c26"
>
<Comment>Speed over reading amount.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Speed"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 Name="V_ura"
 Guid="c7d8cd39-a1df-4b9d-9fe9-2d76ca35d2f0"
>
<ReqRef
 Id="45c6ab5d-cd00-4092-b7fb-002e30ca1337"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="58c21ffd-cdda-4fd8-81ff-50d005c1f59f"
>
</ReqRef><Comment>Speed under reading amount.</Comment>
</StructureElement></Structure></Structures>
<Functions>
<Function
 Type="Boolean"
 Default=""
 X="530"
 Y="30"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TrainIsAtStandstill"
 Guid="2ef6584d-0800-457a-b8cb-1783cef2f8ff"
>
<ReqRef
 Id="e9db5333-b289-4dc4-a0ff-2523b0f32009"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="133e632d-28ae-4afd-bc5b-a2ca308274b7"
>
</ReqRef><ReqRef
 Id="e5f97755-8416-4822-93e4-2c3e935d4b0e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5104351e-6732-4c76-884f-3f3ee3ba1d9b"
>
</ReqRef><ReqRef
 Id="dd8fb768-3cd7-45da-9d24-6b006ac002a0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6500521-1266-4a93-825a-16f561d2b0cc"
>
</ReqRef><Comment>Indicates if the train is at standstill (its speed equals to zero).</Comment>
<Cases>
<Case
 Name="Determine standstill"
 Guid="47f0b7ea-e7fc-4f64-9fda-0b33c9abebe1"
>
<PreConditions>
<PreCondition
 Guid="ff0a4023-88ce-48fb-b8cd-d882e95809fd"
>Kernel.ActiveFunctions.DetermineSpeedAccelerationStandstill()</PreCondition></PreConditions>
<Expression>Odometry.EstimatedSpeed == 0.0</Expression>
</Case><Case
 Name="Otherwise"
 Guid="b2130de3-2d55-4df8-9747-156359361f0e"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="640"
 Y="30"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrainSpeed"
 Guid="83becb71-fb4f-4e4c-8142-49828e48a11c"
>
<ReqRef
 Id="dd8fb768-3cd7-45da-9d24-6b006ac002a0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41b28cab-9b1d-4951-90a8-0520365535a0"
>
</ReqRef><Comment>Returns the current speed, if required in the current mode</Comment>
<Cases>
<Case
 Name="Determine train speed"
 Guid="7f6c2a8f-58b7-4a13-9f2c-1d9b1fa3d10a"
>
<PreConditions>
<PreCondition
 Guid="7bbabfb1-de05-4949-8c2a-ad8fd573303a"
>Kernel.ActiveFunctions.DetermineSpeedAccelerationStandstill()</PreCondition></PreConditions>
<Expression>Odometry.EstimatedSpeed</Expression>
</Case><Case
 Name="Otherwise"
 Guid="27a4c528-4bbf-4add-be46-4ff32577b5a1"
>
<Expression>BaseTypes.Speed.NA</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Acceleration"
 Cacheable="TRUE"
 Default=""
 X="640"
 Y="90"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrainAcceleration"
 Guid="ea482b0a-41af-4d27-84d0-e6a6147baff0"
>
<ReqRef
 Id="dd8fb768-3cd7-45da-9d24-6b006ac002a0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0800f8fd-4001-4e99-9590-a26b1910b608"
>
</ReqRef><Comment>Returns the train acceleration, if it is required in the current mode</Comment>
<Cases>
<Case
 Name="Determine train acceleration"
 Guid="7886a869-a4d0-40ac-913a-058c087ddfb8"
>
<PreConditions>
<PreCondition
 Guid="2bd3b8dd-e9de-4d19-bb6e-fcec83784854"
>Kernel.ActiveFunctions.DetermineSpeedAccelerationStandstill()</PreCondition></PreConditions>
<Expression>Odometry.EstimatedAcceleration</Expression>
</Case><Case
 Name="Otherwise"
 Guid="2cc0ebb9-6b0c-4fd6-a206-2422367b850a"
>
<Expression>BaseTypes.Acceleration.NA</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Acceleration"
 Default=""
 X="530"
 Y="90"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CalculateAcceleration"
 Guid="57ef3aff-1079-4ac9-a50c-34ce9aac93bf"
>
<Comment>Calculates the acceleration between the current and previous odometry messages.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Time"
 Name="aTime"
 Guid="a24b1e8e-acaf-4142-86d4-0d6d49e97ad6"
>
</Parameter><Parameter
 Type="BaseTypes.Speed"
 Name="aSpeed"
 Guid="8f3e5032-5baf-4ce5-be0f-115553a4630a"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Same time as previous message"
 Guid="f18e1d97-d561-4cf5-b394-7e8ae20da300"
>
<PreConditions>
<PreCondition
 Guid="cb14fdd7-7558-4c05-9095-43e89d65bea3"
>aTime == Odometry.PreviousTime</PreCondition></PreConditions>
<Expression>0.0</Expression>
</Case><Case
 Name="Otherwise"
 Guid="7d017393-59e8-4165-a841-3b7a83a3ddd7"
>
<Expression>BaseTypes.Acceleration ( aSpeed
-  Odometry.PreviousSpeed ) / BaseTypes.Acceleration (  aTime - Odometry.PreviousTime)</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="700"
 Y="240"
 Width="100"
 Height="50"
 Name="DirectionOfTravel"
 Guid="f813a170-1687-4d95-8199-5ae90d5ef2df"
>
<Cases>
<Case
 Name="Do not determine speed"
 Guid="dd9c6692-7816-4983-bed8-ee92961ac1dd"
>
<PreConditions>
<PreCondition
 Guid="e7ab286a-f232-45cf-b2d3-1f4d34e569bf"
>NOT Kernel.ActiveFunctions.DetermineSpeedAccelerationStandstill()</PreCondition></PreConditions>
<Expression>OrientationEnum.Unknown</Expression>
</Case><Case
 Name="Cab A, desk 1 is active"
 Guid="862df5d6-e382-44b0-9d75-07ae0680adb2"
>
<PreConditions>
<PreCondition
 Guid="c3d8afa8-4253-4ea5-b485-2a7eca4fcb37"
>TIU.CabA.Desk1IsActive</PreCondition></PreConditions>
<Expression>EstimatedSpeedDirection</Expression>
</Case><Case
 Name="Another desk is active - nominal direction recorded"
 Guid="1311e6d8-c411-482a-8b2b-a0f228f92716"
>
<PreConditions>
<PreCondition
 Guid="94e193da-eb45-4342-845d-58fb37446ed2"
>TIU.CabA.Desk2IsActive
  OR  
TIU.CabB.Desk1IsActive</PreCondition></PreConditions>
<Expression>ReverseOfOrientation( EstimatedSpeedDirection )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="7794cd57-770c-4948-ab9d-a80b214039c3"
>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="700"
 Y="180"
 Width="100"
 Height="50"
 Name="ForwardsDirection"
 Guid="cb4c5469-a800-4069-bae0-c5cd0a188994"
>
<Comment>Provides the current &quot;Forwards&quot; direction, based on the active desk.
&quot;Nominal&quot; orientation means that the forwards direction is the direction of increasing distance.
&quot;Reverse&quot; direction is the direction of decreasing distance.</Comment>
<Cases>
<Case
 Name="DMI 1 is master"
 Guid="11a88fdd-6de0-4de8-a691-9ac2b745d973"
>
<PreConditions>
<PreCondition
 Guid="2a2f6826-8d52-430e-af7e-51d516f06e26"
>DMI.DMI1.IsMaster</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="DMI 2 is master"
 Guid="78719ad3-933b-4001-92b9-a25948ba68c8"
>
<PreConditions>
<PreCondition
 Guid="fb81e1c5-2406-4941-ba80-433efc5653a5"
>DMI.DMI2.IsMaster</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="Otherwise"
 Guid="313f2a51-5ac1-4b03-b7b6-45ca9a4672b9"
>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="530"
 Y="180"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreOdometerMessage"
 Guid="edb34d80-e449-491e-8f3b-aae9c289c55c"
>
<Comment>Stores the message provided by the odometry.</Comment>
<Parameters>
<Parameter
 Type="STM.Messages.OdometerMulticastMessageStruct"
 Name="aMessage"
 Guid="c80158b8-7024-4537-9f24-a47f191474b7"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreOdometerMessage"
 Guid="f15825ae-0c78-48df-aab0-9b3baf63f43c"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreOdometerMessage"
 Guid="52f7c34d-4689-4ac6-ac7b-52fbb49ce252"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b92908d8-bb37-433f-bb12-af688ebed023"
>Odometry.CurrentTime &lt;- Converters.TimeConversion(aMessage.T_ODO)</Action><Action
 Guid="ab9780a3-2b2c-4004-aaeb-2efb4c699d69"
>Odometry.NominalDistance &lt;- Converters.DistanceConversion(aMessage.D_EST)</Action><Action
 Guid="a7bc8e19-3c2d-40e0-8fcd-019a376526a0"
>Odometry.Accuracy.D_ura &lt;- BaseTypes.DistanceToLength(Converters.DistanceConversion(aMessage.D_MAX - aMessage.D_EST))</Action><Action
 Guid="77e6e519-84b4-4ee9-9090-7bfe385d539a"
>Odometry.Accuracy.D_ora &lt;- BaseTypes.DistanceToLength(Converters.DistanceConversion(aMessage.D_EST - aMessage.D_MIN))</Action><Action
 Guid="63cfd51a-a706-4c38-bf84-6496ef309c84"
>Odometry.EstimatedSpeed &lt;- Converters.SpeedConversion(aMessage.V_EST)</Action><Action
 Guid="24d8010e-c271-4470-96c1-5303813aaafe"
>Odometry.EstimatedAcceleration &lt;- Odometry.CalculateAcceleration(
    aTime =&gt; Converters.SpeedConversion(aMessage.T_ODO),
    aSpeed =&gt; Converters.SpeedConversion(aMessage.V_EST)
)</Action><Action
 Guid="be1750f6-f121-4bb4-9192-25785d00bc32"
>Odometry.Accuracy.V_ora &lt;- Converters.SpeedConversion(aMessage.V_EST - aMessage.V_MIN)</Action><Action
 Guid="7a4376a7-9f06-403b-87a3-14f47c6b2890"
>Odometry.Accuracy.V_ura &lt;- Converters.SpeedConversion(aMessage.V_MAX - aMessage.V_EST)</Action><Action
 Guid="b2fc9cfb-25af-442e-860b-a147c090c506"
>EstimatedSpeedDirection &lt;- Converters.DirectionFromSpeed( aSpeed =&gt; aMessage.V_EST )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="OdometerAccuracyStruct"
 DefaultValue="OdometerAccuracyStruct
{
    D_ura =&gt; 0.0,
    D_ora =&gt; 0.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}"
 VariableMode="Internal"
 X="370"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Accuracy"
 Guid="7499913c-ed8f-44ca-8c93-e75d46f6ce78"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5728d16-983b-4df7-8677-fa9a9d7a53ff"
>
</ReqRef><Comment>Represents the odometer accuracy, updated after each odometer message reception. Used for calculating the confidence interval.
OdometerAccuracy.LowerBoundConfidenceInterval is obtained by computing Distance.Nom - Distance.Min.
OdometerAccuracy.UpperBoundConfidenceInterval is obtained by computing Distance.Max - Distance.Nom.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="10"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentTime"
 Guid="6a47d9d8-a45d-49f5-bb86-dc2434ec76ab"
>
<Comment>The current time of the odometry.</Comment>
</Variable><Variable
 Type="STM.Messages.OdometerMulticastMessageStruct"
 DefaultValue="EMPTY"
 VariableMode="InOut"
 X="230"
 Y="20"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="Message"
 Guid="f232a64d-dd76-4f3f-a0f7-d01e910a8d1e"
>
<Comment>Represents an odometer message. The message is received if NewMessageReceived sub variable equals True. OdometerMessage.Message contains the received message.</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="10"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="NominalDistance"
 Guid="8b9d0041-32c3-4c95-afd4-2d33d93fe306"
>
<Comment>The estimated position of the train.</Comment>
</Variable><Variable
 Type="BaseTypes.Speed"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="230"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="EstimatedSpeed"
 Guid="efe4b202-5dbe-4d3f-af3f-3662f43404a4"
>
<ReqRef
 Id="46fa293d-249a-454b-bbda-cdc527f79dc7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="68c4a690-da75-4eeb-bd54-09f43567bab6"
>
</ReqRef><Comment>The estimated speed of the train.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="120"
 Y="150"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PreviousTime"
 Guid="54374bf2-9c24-4224-a9d4-7d81e96e671e"
>
<Comment>Contains the time value received in the previous odometry message, used to calculate the estimated acceleration.</Comment>
</Variable><Variable
 Type="BaseTypes.Speed"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="230"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PreviousSpeed"
 Guid="d441f48e-5b85-4a51-90c7-029b88f4c69e"
>
<Comment>Contains the speed value received in the previous odometry message, used to calculate the estimated acceleration.</Comment>
</Variable><Variable
 Type="BaseTypes.Acceleration"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="120"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EstimatedAcceleration"
 Guid="1ca9418b-e14a-434c-85d0-27dd6a0a2690"
>
<Comment>The acceleration of the train, computed from its speed and the time.</Comment>
</Variable><Variable
 Type="OrientationEnum"
 VariableMode="Internal"
 X="10"
 Y="390"
 Width="100"
 Height="50"
 Name="EstimatedSpeedDirection"
 Guid="27eeb0ac-0d14-4f49-ad70-9e24e1d17063"
>
<Comment>The direction of travel as determined by cab A, desk 1. If another desk (either desk 2 of cab A of the desk in cab B) is open, the model will switch the meanings of Nomianl and Reverse.

This is determined by the sign of the speed received from the odometry:
  - positive speed is Nominal
  - negative speed is Reverse
  - 0 estimated speed is unknown.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="530"
 Y="280"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ClearNewMessage"
 Guid="01de3ad9-5ce4-4c91-a0fb-f9b9aef1542f"
>
<Comment>After processing the new message its content is deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ClearNewMessage"
 Guid="d20ef759-ed8a-4c29-a45d-346ee89326b2"
>
<PreConditions>
<PreCondition
 Guid="57d2ef17-78d5-457e-85e4-e49008d580c9"
>Available ( Odometry.Message )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="23d419d0-8ffb-4a8b-b4ba-cdcfcc1766a8"
>Odometry.Message &lt;- EMPTY</Action><Action
 Guid="4433bbad-1426-41b2-b90b-7923057a565f"
>Odometry.PreviousTime &lt;- Odometry.CurrentTime</Action><Action
 Guid="5ee92494-7a41-432d-937e-a24f22bcf92c"
>Odometry.PreviousSpeed &lt;- Odometry.EstimatedSpeed</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
